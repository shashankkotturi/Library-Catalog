// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accordion renders a closed accordion 1`] = `
<Accordion
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    togglePanel={[Function]}
    topDivider={true}
  >
    <div
      className="base"
    >
      <HairlineDivider
        gradient={false}
        vertical={false}
      >
        <hr
          className="horizontalThin"
        />
      </HairlineDivider>
      <PanelWrapper
        key="panel-1"
        onClick={[Function]}
        open={false}
        panelDisabled={false}
        panelHeader="Panel title"
        panelId="panel-1"
      >
        <div
          data-testid="panel-1"
        >
          <Clickable
            aria-expanded={false}
            dangerouslyAddClassName="header"
            disabled={false}
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            type="button"
          >
            <button
              aria-expanded={false}
              className="clickable header"
              disabled={false}
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <Box
                inline={false}
                tag="div"
                vertical={3}
              >
                <div
                  className="verticalPadding-3"
                >
                  <Box
                    between={3}
                    inline={true}
                    tag="div"
                  >
                    <div
                      className="betweenRightMargin-3 inline"
                    >
                      <div>
                        <Translate
                          direction="y"
                          distance="0.25rem"
                          in={false}
                          timeout={300}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              style={
                                Object {
                                  "transition": "transform 300ms",
                                }
                              }
                            >
                              <Text
                                block={false}
                                bold={false}
                                invert={false}
                                size="large"
                              >
                                <span
                                  className="large largeFont color"
                                >
                                  <DecorativeIcon
                                    size={16}
                                    symbol="caretDown"
                                    variant="primary"
                                  >
                                    <Icon
                                      aria-hidden="true"
                                      size={16}
                                      symbol="caretDown"
                                      variant="primary"
                                    >
                                      <i
                                        aria-hidden="true"
                                        className="iconCaretDown primary size16"
                                      />
                                    </Icon>
                                  </DecorativeIcon>
                                </span>
                              </Text>
                            </div>
                          </Transition>
                        </Translate>
                      </div>
                      <Flexbox
                        dangerouslyAddClassName="headerAlign"
                        direction="row"
                      >
                        <div
                          className="row headerAlign"
                        >
                          <Flexbox
                            dangerouslyAddClassName="headerAlign"
                            direction="column"
                          >
                            <div
                              className="column headerAlign"
                            >
                              <Text
                                block={false}
                                bold={false}
                                invert={false}
                                size="large"
                              >
                                <span
                                  className="large largeFont color"
                                >
                                  Panel title
                                </span>
                              </Text>
                            </div>
                          </Flexbox>
                        </div>
                      </Flexbox>
                    </div>
                  </Box>
                </div>
              </Box>
            </button>
          </Clickable>
          <Reveal
            duration={500}
            height={0}
            in={false}
            timeout={0}
          >
            <Transition
              appear={false}
              duration={500}
              enter={true}
              exit={true}
              in={false}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={0}
              unmountOnExit={false}
            >
              <div
                aria-hidden={true}
                data-testid="childrenContainer"
                style={
                  Object {
                    "height": 0,
                    "overflow": "hidden",
                    "transition": "height 500ms",
                    "visibility": "hidden",
                  }
                }
              >
                <div
                  data-testid="content"
                >
                  <DimpleDivider>
                    <hr
                      className="dimple"
                    />
                  </DimpleDivider>
                  <Box
                    inline={false}
                    inset={4}
                    tag="div"
                  >
                    <div
                      className="horizontalPadding-4 verticalPadding-4"
                    >
                      <Text
                        block={true}
                        bold={false}
                        invert={false}
                        size="base"
                      >
                        <div
                          className="base baseFont color"
                        >
                          <Panel
                            disabled={false}
                            header="Panel title"
                            id="panel-1"
                            key=".0"
                          >
                            <div>
                              Panel content
                            </div>
                          </Panel>
                        </div>
                      </Text>
                    </div>
                  </Box>
                </div>
              </div>
            </Transition>
          </Reveal>
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <hr
              className="horizontalThin"
            />
          </HairlineDivider>
        </div>
      </PanelWrapper>
    </div>
  </Panels>
</Accordion>
`;

exports[`Accordion renders an open accordion 1`] = `
<Accordion
  open="panel-1"
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    open="panel-1"
    togglePanel={[Function]}
    topDivider={true}
  >
    <div
      className="base"
      open="panel-1"
    >
      <HairlineDivider
        gradient={false}
        vertical={false}
      >
        <hr
          className="horizontalThin"
        />
      </HairlineDivider>
      <PanelWrapper
        key="panel-1"
        onClick={[Function]}
        open={true}
        panelDisabled={false}
        panelHeader="Panel title"
        panelId="panel-1"
      >
        <div
          data-testid="panel-1"
        >
          <Clickable
            aria-expanded={true}
            dangerouslyAddClassName="header"
            disabled={false}
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            type="button"
          >
            <button
              aria-expanded={true}
              className="clickable header"
              disabled={false}
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <Box
                inline={false}
                tag="div"
                vertical={3}
              >
                <div
                  className="verticalPadding-3"
                >
                  <Box
                    between={3}
                    inline={true}
                    tag="div"
                  >
                    <div
                      className="betweenRightMargin-3 inline"
                    >
                      <div>
                        <Translate
                          direction="y"
                          distance="-0.25rem"
                          in={false}
                          timeout={300}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              style={
                                Object {
                                  "transition": "transform 300ms",
                                }
                              }
                            >
                              <Text
                                block={false}
                                bold={false}
                                invert={false}
                                size="large"
                              >
                                <span
                                  className="large largeFont color"
                                >
                                  <DecorativeIcon
                                    size={16}
                                    symbol="caretUp"
                                    variant="primary"
                                  >
                                    <Icon
                                      aria-hidden="true"
                                      size={16}
                                      symbol="caretUp"
                                      variant="primary"
                                    >
                                      <i
                                        aria-hidden="true"
                                        className="iconCaretUp primary size16"
                                      />
                                    </Icon>
                                  </DecorativeIcon>
                                </span>
                              </Text>
                            </div>
                          </Transition>
                        </Translate>
                      </div>
                      <Flexbox
                        dangerouslyAddClassName="headerAlign"
                        direction="row"
                      >
                        <div
                          className="row headerAlign"
                        >
                          <Flexbox
                            dangerouslyAddClassName="headerAlign"
                            direction="column"
                          >
                            <div
                              className="column headerAlign"
                            >
                              <Text
                                block={false}
                                bold={false}
                                invert={false}
                                size="large"
                              >
                                <span
                                  className="large largeFont color"
                                >
                                  Panel title
                                </span>
                              </Text>
                            </div>
                          </Flexbox>
                        </div>
                      </Flexbox>
                    </div>
                  </Box>
                </div>
              </Box>
            </button>
          </Clickable>
          <Reveal
            duration={500}
            height={0}
            in={true}
            timeout={500}
          >
            <Transition
              appear={false}
              duration={500}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={500}
              unmountOnExit={false}
            >
              <div
                aria-hidden={false}
                data-testid="childrenContainer"
                style={
                  Object {
                    "height": "auto",
                    "overflow": "hidden",
                    "transition": "height 500ms",
                  }
                }
              >
                <div
                  data-testid="content"
                >
                  <DimpleDivider>
                    <hr
                      className="dimple"
                    />
                  </DimpleDivider>
                  <Box
                    inline={false}
                    inset={4}
                    tag="div"
                  >
                    <div
                      className="horizontalPadding-4 verticalPadding-4"
                    >
                      <Text
                        block={true}
                        bold={false}
                        invert={false}
                        size="base"
                      >
                        <div
                          className="base baseFont color"
                        >
                          <Panel
                            disabled={false}
                            header="Panel title"
                            id="panel-1"
                            key=".0"
                          >
                            <div>
                              Panel content
                            </div>
                          </Panel>
                        </div>
                      </Text>
                    </div>
                  </Box>
                </div>
              </div>
            </Transition>
          </Reveal>
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <hr
              className="horizontalThin"
            />
          </HairlineDivider>
        </div>
      </PanelWrapper>
    </div>
  </Panels>
</Accordion>
`;
