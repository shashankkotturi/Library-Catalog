import React, { Component } from 'react';
import PropTypes from 'prop-types';
import reactDom from 'react-dom';

function noop() {
  return null;
}
noop.isRequired = noop;
function noopThunk() {
  return noop;
}

var mocks = {
  and: noopThunk,
  between: noopThunk,
  childrenHavePropXorChildren: noopThunk,
  childrenOf: noopThunk,
  childrenOfType: noopThunk,
  childrenSequenceOf: noopThunk,
  componentWithName: noopThunk,
  elementType: noopThunk,
  explicitNull: noopThunk,
  forbidExtraProps: Object,
  integer: noopThunk,
  keysOf: noopThunk,
  mutuallyExclusiveProps: noopThunk,
  mutuallyExclusiveTrueProps: noopThunk,
  nChildren: noopThunk,
  nonNegativeInteger: noop,
  nonNegativeNumber: noopThunk,
  numericString: noopThunk,
  object: noopThunk,
  or: noopThunk,
  range: noopThunk,
  restrictedProp: noopThunk,
  sequenceOf: noopThunk,
  shape: noopThunk,
  uniqueArray: noopThunk,
  uniqueArrayOf: noopThunk,
  valuesOf: noopThunk,
  withShape: noopThunk
};

function unwrapExports (x) {
	return x && x.__esModule ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

'use strict';

var toStr$2 = Object.prototype.toString;

var isArguments = function isArguments(value) {
	var str = toStr$2.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr$2.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

'use strict';

// modified from https://github.com/es-shims/es5-shim
var has = Object.prototype.hasOwnProperty;
var toStr$1 = Object.prototype.toString;
var slice = Array.prototype.slice;

var isEnumerable = Object.prototype.propertyIsEnumerable;
var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
var dontEnums = [
	'toString',
	'toLocaleString',
	'valueOf',
	'hasOwnProperty',
	'isPrototypeOf',
	'propertyIsEnumerable',
	'constructor'
];
var equalsConstructorPrototype = function (o) {
	var ctor = o.constructor;
	return ctor && ctor.prototype === o;
};
var excludedKeys = {
	$console: true,
	$external: true,
	$frame: true,
	$frameElement: true,
	$frames: true,
	$innerHeight: true,
	$innerWidth: true,
	$outerHeight: true,
	$outerWidth: true,
	$pageXOffset: true,
	$pageYOffset: true,
	$parent: true,
	$scrollLeft: true,
	$scrollTop: true,
	$scrollX: true,
	$scrollY: true,
	$self: true,
	$webkitIndexedDB: true,
	$webkitStorageInfo: true,
	$window: true
};
var hasAutomationEqualityBug = (function () {
	/* global window */
	if (typeof window === 'undefined') { return false; }
	for (var k in window) {
		try {
			if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
				try {
					equalsConstructorPrototype(window[k]);
				} catch (e) {
					return true;
				}
			}
		} catch (e) {
			return true;
		}
	}
	return false;
}());
var equalsConstructorPrototypeIfNotBuggy = function (o) {
	/* global window */
	if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
		return equalsConstructorPrototype(o);
	}
	try {
		return equalsConstructorPrototype(o);
	} catch (e) {
		return false;
	}
};

var keysShim = function keys(object) {
	var isObject = object !== null && typeof object === 'object';
	var isFunction = toStr$1.call(object) === '[object Function]';
	var isArguments$$1 = isArguments(object);
	var isString = isObject && toStr$1.call(object) === '[object String]';
	var theKeys = [];

	if (!isObject && !isFunction && !isArguments$$1) {
		throw new TypeError('Object.keys called on a non-object');
	}

	var skipProto = hasProtoEnumBug && isFunction;
	if (isString && object.length > 0 && !has.call(object, 0)) {
		for (var i = 0; i < object.length; ++i) {
			theKeys.push(String(i));
		}
	}

	if (isArguments$$1 && object.length > 0) {
		for (var j = 0; j < object.length; ++j) {
			theKeys.push(String(j));
		}
	} else {
		for (var name in object) {
			if (!(skipProto && name === 'prototype') && has.call(object, name)) {
				theKeys.push(String(name));
			}
		}
	}

	if (hasDontEnumBug) {
		var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

		for (var k = 0; k < dontEnums.length; ++k) {
			if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
				theKeys.push(dontEnums[k]);
			}
		}
	}
	return theKeys;
};

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			return (Object.keys(arguments) || '').length === 2;
		}(1, 2));
		if (!keysWorksWithArguments) {
			var originalKeys = Object.keys;
			Object.keys = function keys(object) {
				if (isArguments(object)) {
					return originalKeys(slice.call(object));
				} else {
					return originalKeys(object);
				}
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

var objectKeys = keysShim;

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

var foreach = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};

'use strict';



var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

var toStr = Object.prototype.toString;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		Object.defineProperty(obj, 'x', { enumerable: false, value: obj });
        /* eslint-disable no-unused-vars, no-restricted-syntax */
        for (var _ in obj) { return false; }
        /* eslint-enable no-unused-vars, no-restricted-syntax */
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		Object.defineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = objectKeys(map);
	if (hasSymbols) {
		props = props.concat(Object.getOwnPropertySymbols(map));
	}
	foreach(props, function (name) {
		defineProperty(object, name, map[name], predicates[name]);
	});
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

var defineProperties_1 = defineProperties;

'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice$1 = Array.prototype.slice;
var toStr$3 = Object.prototype.toString;
var funcType = '[object Function]';

var implementation$2 = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr$3.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice$1.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice$1.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice$1.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

'use strict';



var functionBind = Function.prototype.bind || implementation$2;

'use strict';



var hasSymbols$2 = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; }
	if (objectKeys(obj).length !== 0) { return false; }
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

'use strict';

// modified from https://github.com/es-shims/es6-shim


var canBeObject = function (obj) {
	return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols$1 = hasSymbols$2();
var toObject = Object;
var push = functionBind.call(Function.call, Array.prototype.push);
var propIsEnumerable = functionBind.call(Function.call, Object.prototype.propertyIsEnumerable);
var originalGetSymbols = hasSymbols$1 ? Object.getOwnPropertySymbols : null;

var implementation = function assign(target, source1) {
	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
	var objTarget = toObject(target);
	var s, source, i, props, syms, value, key;
	for (s = 1; s < arguments.length; ++s) {
		source = toObject(arguments[s]);
		props = objectKeys(source);
		var getSymbols = hasSymbols$1 && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			syms = getSymbols(source);
			for (i = 0; i < syms.length; ++i) {
				key = syms[i];
				if (propIsEnumerable(source, key)) {
					push(props, key);
				}
			}
		}
		for (i = 0; i < props.length; ++i) {
			key = props[i];
			value = source[key];
			if (propIsEnumerable(source, key)) {
				objTarget[key] = value;
			}
		}
	}
	return objTarget;
};

'use strict';



var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	// note: this does not detect the bug unless there's 20 characters
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	// which is 72% slower than our shim, and Firefox 40's native implementation.
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

var polyfill$1 = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};

'use strict';




var shim = function shimAssign() {
	var polyfill = polyfill$1();
	defineProperties_1(
		Object,
		{ assign: polyfill },
		{ assign: function () { return Object.assign !== polyfill; } }
	);
	return polyfill;
};

'use strict';







var polyfill = polyfill$1();

defineProperties_1(polyfill, {
	implementation: implementation,
	getPolyfill: polyfill$1,
	shim: shim
});

var object_assign = polyfill;

var src = functionBind.call(Function.call, Object.prototype.hasOwnProperty);

var isPlainObject_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = isPlainObject;
function isPlainObject(x) {
  return x && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && !Array.isArray(x);
}
module.exports = exports['default'];

});

unwrapExports(isPlainObject_1);

var build$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = forbidExtraProps;



var _object2 = _interopRequireDefault(object_assign);



var _has2 = _interopRequireDefault(src);



var _isPlainObject2 = _interopRequireDefault(isPlainObject_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var zeroWidthSpace = '\u200B';
var specialProperty = 'prop-types-exact: ' + zeroWidthSpace;
var semaphore = {};

function brand(fn) {
  return (0, _object2['default'])(fn, _defineProperty({}, specialProperty, semaphore));
}

function isBranded(value) {
  return value && value[specialProperty] === semaphore;
}

function forbidExtraProps(propTypes) {
  if (!(0, _isPlainObject2['default'])(propTypes)) {
    throw new TypeError('given propTypes must be an object');
  }
  if ((0, _has2['default'])(propTypes, specialProperty) && !isBranded(propTypes[specialProperty])) {
    throw new TypeError('Against all odds, you created a propType for a prop that uses both the zero-width space and our custom string - which, sadly, conflicts with `prop-types-exact`');
  }

  return (0, _object2['default'])({}, propTypes, _defineProperty({}, specialProperty, brand(function () {
    function forbidUnknownProps(props, _, componentName) {
      var unknownProps = Object.keys(props).filter(function (prop) {
        return !(0, _has2['default'])(propTypes, prop);
      });
      if (unknownProps.length > 0) {
        return new TypeError(String(componentName) + ': unknown props found: ' + String(unknownProps.join(', ')));
      }
      return null;
    }

    return forbidUnknownProps;
  }())));
}
module.exports = exports['default'];

});

unwrapExports(build$1);

var wrapValidator_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = wrapValidator;



var _object2 = _interopRequireDefault(object_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function wrapValidator(validator, typeName) {
  var typeChecker = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  return (0, _object2["default"])(validator.bind(), {
    typeName: typeName,
    typeChecker: typeChecker,
    isRequired: (0, _object2["default"])(validator.isRequired.bind(), {
      typeName: typeName,
      typeChecker: typeChecker,
      typeRequired: true
    })
  });
}

});

unwrapExports(wrapValidator_1);

var and = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = andValidator;



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function andValidator(validators) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'and';

  if (!Array.isArray(validators)) {
    throw new TypeError('and: 2 or more validators are required');
  }
  if (validators.length <= 1) {
    throw new RangeError('and: 2 or more validators are required');
  }

  var validator = function () {
    function and() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var firstError = null;
      validators.some(function (validatorFn) {
        firstError = validatorFn.apply(undefined, args);
        return firstError != null;
      });
      return firstError == null ? null : firstError;
    }

    return and;
  }();

  validator.isRequired = function () {
    function andIsRequired() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      var firstError = null;
      validators.some(function (validatorFn) {
        firstError = validatorFn.isRequired.apply(validatorFn, args);
        return firstError != null;
      });
      return firstError == null ? null : firstError;
    }

    return andIsRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, name, validators);
}

});

unwrapExports(and);

var isPrimitive = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

'use strict';

var fnToStr = Function.prototype.toString;

var constructorRegex = /^\s*class /;
var isES6ClassFn = function isES6ClassFn(value) {
	try {
		var fnStr = fnToStr.call(value);
		var singleStripped = fnStr.replace(/\/\/.*\n/g, '');
		var multiStripped = singleStripped.replace(/\/\*[.\s\S]*\*\//g, '');
		var spaceStripped = multiStripped.replace(/\n/mg, ' ').replace(/ {2}/g, ' ');
		return constructorRegex.test(spaceStripped);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionObject(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr$5 = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

var isCallable = function isCallable(value) {
	if (!value) { return false; }
	if (typeof value !== 'function' && typeof value !== 'object') { return false; }
	if (hasToStringTag) { return tryFunctionObject(value); }
	if (isES6ClassFn(value)) { return false; }
	var strClass = toStr$5.call(value);
	return strClass === fnClass || strClass === genClass;
};

'use strict';

var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateObject(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr$6 = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag$1 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

var isDateObject = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) { return false; }
	return hasToStringTag$1 ? tryDateObject(value) : toStr$6.call(value) === dateClass;
};

var isSymbol = createCommonjsModule(function (module) {
'use strict';

var toStr = Object.prototype.toString;
var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

if (hasSymbols) {
	var symToStr = Symbol.prototype.toString;
	var symStringRegex = /^Symbol\(.*\)$/;
	var isSymbolObject = function isSymbolObject(value) {
		if (typeof value.valueOf() !== 'symbol') { return false; }
		return symStringRegex.test(symToStr.call(value));
	};
	module.exports = function isSymbol(value) {
		if (typeof value === 'symbol') { return true; }
		if (toStr.call(value) !== '[object Symbol]') { return false; }
		try {
			return isSymbolObject(value);
		} catch (e) {
			return false;
		}
	};
} else {
	module.exports = function isSymbol(value) {
		// this environment does not support Symbols.
		return false;
	};
}
});

'use strict';

var hasSymbols$5 = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';






var ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {
	if (typeof O === 'undefined' || O === null) {
		throw new TypeError('Cannot call method on ' + O);
	}
	if (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {
		throw new TypeError('hint must be "string" or "number"');
	}
	var methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
	var method, result, i;
	for (i = 0; i < methodNames.length; ++i) {
		method = O[methodNames[i]];
		if (isCallable(method)) {
			result = method.call(O);
			if (isPrimitive(result)) {
				return result;
			}
		}
	}
	throw new TypeError('No default value');
};

var GetMethod = function GetMethod(O, P) {
	var func = O[P];
	if (func !== null && typeof func !== 'undefined') {
		if (!isCallable(func)) {
			throw new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');
		}
		return func;
	}
};

// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive
var es6 = function ToPrimitive(input, PreferredType) {
	if (isPrimitive(input)) {
		return input;
	}
	var hint = 'default';
	if (arguments.length > 1) {
		if (PreferredType === String) {
			hint = 'string';
		} else if (PreferredType === Number) {
			hint = 'number';
		}
	}

	var exoticToPrim;
	if (hasSymbols$5) {
		if (Symbol.toPrimitive) {
			exoticToPrim = GetMethod(input, Symbol.toPrimitive);
		} else if (isSymbol(input)) {
			exoticToPrim = Symbol.prototype.valueOf;
		}
	}
	if (typeof exoticToPrim !== 'undefined') {
		var result = exoticToPrim.call(input, hint);
		if (isPrimitive(result)) {
			return result;
		}
		throw new TypeError('unable to convert exotic object to primitive');
	}
	if (hint === 'default' && (isDateObject(input) || isSymbol(input))) {
		hint = 'string';
	}
	return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);
};

var _isNaN = Number.isNaN || function isNaN(a) {
	return a !== a;
};

var $isNaN = Number.isNaN || function (a) { return a !== a; };

var _isFinite = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

var has$2 = Object.prototype.hasOwnProperty;
var assign = function assign(target, source) {
	if (Object.assign) {
		return Object.assign(target, source);
	}
	for (var key in source) {
		if (has$2.call(source, key)) {
			target[key] = source[key];
		}
	}
	return target;
};

var sign = function sign(number) {
	return number >= 0 ? 1 : -1;
};

var mod = function mod(number, modulo) {
	var remain = number % modulo;
	return Math.floor(remain >= 0 ? remain : remain + modulo);
};

var isPrimitive$3 = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

'use strict';

var toStr$7 = Object.prototype.toString;





// https://es5.github.io/#x8.12
var ES5internalSlots = {
	'[[DefaultValue]]': function (O, hint) {
		var actualHint = hint || (toStr$7.call(O) === '[object Date]' ? String : Number);

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// https://es5.github.io/#x9
var es5$2 = function ToPrimitive(input, PreferredType) {
	if (isPrimitive(input)) {
		return input;
	}
	return ES5internalSlots['[[DefaultValue]]'](input, PreferredType);
};

'use strict';












// https://es5.github.io/#x9
var ES5 = {
	ToPrimitive: es5$2,

	ToBoolean: function ToBoolean(value) {
		return !!value;
	},
	ToNumber: function ToNumber(value) {
		return Number(value);
	},
	ToInteger: function ToInteger(value) {
		var number = this.ToNumber(value);
		if (_isNaN(number)) { return 0; }
		if (number === 0 || !_isFinite(number)) { return number; }
		return sign(number) * Math.floor(Math.abs(number));
	},
	ToInt32: function ToInt32(x) {
		return this.ToNumber(x) >> 0;
	},
	ToUint32: function ToUint32(x) {
		return this.ToNumber(x) >>> 0;
	},
	ToUint16: function ToUint16(value) {
		var number = this.ToNumber(value);
		if (_isNaN(number) || number === 0 || !_isFinite(number)) { return 0; }
		var posInt = sign(number) * Math.floor(Math.abs(number));
		return mod(posInt, 0x10000);
	},
	ToString: function ToString(value) {
		return String(value);
	},
	ToObject: function ToObject(value) {
		this.CheckObjectCoercible(value);
		return Object(value);
	},
	CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
		/* jshint eqnull:true */
		if (value == null) {
			throw new TypeError(optMessage || 'Cannot call method on ' + value);
		}
		return value;
	},
	IsCallable: isCallable,
	SameValue: function SameValue(x, y) {
		if (x === y) { // 0 === -0, but they are not identical.
			if (x === 0) { return 1 / x === 1 / y; }
			return true;
		}
		return _isNaN(x) && _isNaN(y);
	},

	// http://www.ecma-international.org/ecma-262/5.1/#sec-8
	Type: function Type(x) {
		if (x === null) {
			return 'Null';
		}
		if (typeof x === 'undefined') {
			return 'Undefined';
		}
		if (typeof x === 'function' || typeof x === 'object') {
			return 'Object';
		}
		if (typeof x === 'number') {
			return 'Number';
		}
		if (typeof x === 'boolean') {
			return 'Boolean';
		}
		if (typeof x === 'string') {
			return 'String';
		}
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
	IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {
		if (this.Type(Desc) !== 'Object') {
			return false;
		}
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};
		// jscs:disable
		for (var key in Desc) { // eslint-disable-line
			if (src(Desc, key) && !allowed[key]) {
				return false;
			}
		}
		// jscs:enable
		var isData = src(Desc, '[[Value]]');
		var IsAccessor = src(Desc, '[[Get]]') || src(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.1
	IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!src(Desc, '[[Get]]') && !src(Desc, '[[Set]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.2
	IsDataDescriptor: function IsDataDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!src(Desc, '[[Value]]') && !src(Desc, '[[Writable]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.3
	IsGenericDescriptor: function IsGenericDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {
			return true;
		}

		return false;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.4
	FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return Desc;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (this.IsDataDescriptor(Desc)) {
			return {
				value: Desc['[[Value]]'],
				writable: !!Desc['[[Writable]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else if (this.IsAccessorDescriptor(Desc)) {
			return {
				get: Desc['[[Get]]'],
				set: Desc['[[Set]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else {
			throw new TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');
		}
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.5
	ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {
		if (this.Type(Obj) !== 'Object') {
			throw new TypeError('ToPropertyDescriptor requires an object');
		}

		var desc = {};
		if (src(Obj, 'enumerable')) {
			desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);
		}
		if (src(Obj, 'configurable')) {
			desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);
		}
		if (src(Obj, 'value')) {
			desc['[[Value]]'] = Obj.value;
		}
		if (src(Obj, 'writable')) {
			desc['[[Writable]]'] = this.ToBoolean(Obj.writable);
		}
		if (src(Obj, 'get')) {
			var getter = Obj.get;
			if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {
				throw new TypeError('getter must be a function');
			}
			desc['[[Get]]'] = getter;
		}
		if (src(Obj, 'set')) {
			var setter = Obj.set;
			if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {
				throw new TypeError('setter must be a function');
			}
			desc['[[Set]]'] = setter;
		}

		if ((src(desc, '[[Get]]') || src(desc, '[[Set]]')) && (src(desc, '[[Value]]') || src(desc, '[[Writable]]'))) {
			throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
		}
		return desc;
	}
};

var es5 = ES5;

'use strict';


var regexExec$1 = RegExp.prototype.exec;
var gOPD = Object.getOwnPropertyDescriptor;

var tryRegexExecCall = function tryRegexExec(value) {
	try {
		var lastIndex = value.lastIndex;
		value.lastIndex = 0;

		regexExec$1.call(value);
		return true;
	} catch (e) {
		return false;
	} finally {
		value.lastIndex = lastIndex;
	}
};
var toStr$8 = Object.prototype.toString;
var regexClass = '[object RegExp]';
var hasToStringTag$2 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

var isRegex = function isRegex(value) {
	if (!value || typeof value !== 'object') {
		return false;
	}
	if (!hasToStringTag$2) {
		return toStr$8.call(value) === regexClass;
	}

	var descriptor = gOPD(value, 'lastIndex');
	var hasLastIndexDataProperty = descriptor && src(descriptor, 'value');
	if (!hasLastIndexDataProperty) {
		return false;
	}

	return tryRegexExecCall(value);
};

'use strict';




var toStr$4 = Object.prototype.toString;
var hasSymbols$4 = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';



var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;





var parseInteger = parseInt;

var arraySlice = functionBind.call(Function.call, Array.prototype.slice);
var strSlice = functionBind.call(Function.call, String.prototype.slice);
var isBinary = functionBind.call(Function.call, RegExp.prototype.test, /^0b[01]+$/i);
var isOctal = functionBind.call(Function.call, RegExp.prototype.test, /^0o[0-7]+$/i);
var regexExec = functionBind.call(Function.call, RegExp.prototype.exec);
var nonWS = ['\u0085', '\u200b', '\ufffe'].join('');
var nonWSregex = new RegExp('[' + nonWS + ']', 'g');
var hasNonWS = functionBind.call(Function.call, RegExp.prototype.test, nonWSregex);
var invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;
var isInvalidHexLiteral = functionBind.call(Function.call, RegExp.prototype.test, invalidHexLiteral);

// whitespace from: http://es5.github.io/#x15.5.4.20
// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
var ws = [
	'\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003',
	'\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028',
	'\u2029\uFEFF'
].join('');
var trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
var replace = functionBind.call(Function.call, String.prototype.replace);
var trim = function (value) {
	return replace(value, trimRegex, '');
};





// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations
var ES6 = assign(assign({}, es5), {

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args
	Call: function Call(F, V) {
		var args = arguments.length > 2 ? arguments[2] : [];
		if (!this.IsCallable(F)) {
			throw new TypeError(F + ' is not a function');
		}
		return F.apply(V, args);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive
	ToPrimitive: es6,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean
	// ToBoolean: ES5.ToBoolean,

	// http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber
	ToNumber: function ToNumber(argument) {
		var value = isPrimitive$3(argument) ? argument : es6(argument, Number);
		if (typeof value === 'symbol') {
			throw new TypeError('Cannot convert a Symbol value to a number');
		}
		if (typeof value === 'string') {
			if (isBinary(value)) {
				return this.ToNumber(parseInteger(strSlice(value, 2), 2));
			} else if (isOctal(value)) {
				return this.ToNumber(parseInteger(strSlice(value, 2), 8));
			} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {
				return NaN;
			} else {
				var trimmed = trim(value);
				if (trimmed !== value) {
					return this.ToNumber(trimmed);
				}
			}
		}
		return Number(value);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger
	// ToInteger: ES5.ToNumber,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32
	// ToInt32: ES5.ToInt32,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32
	// ToUint32: ES5.ToUint32,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16
	ToInt16: function ToInt16(argument) {
		var int16bit = this.ToUint16(argument);
		return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16
	// ToUint16: ES5.ToUint16,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8
	ToInt8: function ToInt8(argument) {
		var int8bit = this.ToUint8(argument);
		return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8
	ToUint8: function ToUint8(argument) {
		var number = this.ToNumber(argument);
		if (_isNaN(number) || number === 0 || !_isFinite(number)) { return 0; }
		var posInt = sign(number) * Math.floor(Math.abs(number));
		return mod(posInt, 0x100);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp
	ToUint8Clamp: function ToUint8Clamp(argument) {
		var number = this.ToNumber(argument);
		if (_isNaN(number) || number <= 0) { return 0; }
		if (number >= 0xFF) { return 0xFF; }
		var f = Math.floor(argument);
		if (f + 0.5 < number) { return f + 1; }
		if (number < f + 0.5) { return f; }
		if (f % 2 !== 0) { return f + 1; }
		return f;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring
	ToString: function ToString(argument) {
		if (typeof argument === 'symbol') {
			throw new TypeError('Cannot convert a Symbol value to a string');
		}
		return String(argument);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject
	ToObject: function ToObject(value) {
		this.RequireObjectCoercible(value);
		return Object(value);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey
	ToPropertyKey: function ToPropertyKey(argument) {
		var key = this.ToPrimitive(argument, String);
		return typeof key === 'symbol' ? key : this.ToString(key);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
	ToLength: function ToLength(argument) {
		var len = this.ToInteger(argument);
		if (len <= 0) { return 0; } // includes converting -0 to +0
		if (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }
		return len;
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring
	CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {
		if (toStr$4.call(argument) !== '[object String]') {
			throw new TypeError('must be a string');
		}
		if (argument === '-0') { return -0; }
		var n = this.ToNumber(argument);
		if (this.SameValue(this.ToString(n), argument)) { return n; }
		return void 0;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible
	RequireObjectCoercible: es5.CheckObjectCoercible,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray
	IsArray: Array.isArray || function IsArray(argument) {
		return toStr$4.call(argument) === '[object Array]';
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable
	// IsCallable: ES5.IsCallable,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor
	IsConstructor: function IsConstructor(argument) {
		return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o
	IsExtensible: function IsExtensible(obj) {
		if (!Object.preventExtensions) { return true; }
		if (isPrimitive$3(obj)) {
			return false;
		}
		return Object.isExtensible(obj);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger
	IsInteger: function IsInteger(argument) {
		if (typeof argument !== 'number' || _isNaN(argument) || !_isFinite(argument)) {
			return false;
		}
		var abs = Math.abs(argument);
		return Math.floor(abs) === abs;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey
	IsPropertyKey: function IsPropertyKey(argument) {
		return typeof argument === 'string' || typeof argument === 'symbol';
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp
	IsRegExp: function IsRegExp(argument) {
		if (!argument || typeof argument !== 'object') {
			return false;
		}
		if (hasSymbols$4) {
			var isRegExp = argument[Symbol.match];
			if (typeof isRegExp !== 'undefined') {
				return es5.ToBoolean(isRegExp);
			}
		}
		return isRegex(argument);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue
	// SameValue: ES5.SameValue,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero
	SameValueZero: function SameValueZero(x, y) {
		return (x === y) || (_isNaN(x) && _isNaN(y));
	},

	/**
	 * 7.3.2 GetV (V, P)
	 * 1. Assert: IsPropertyKey(P) is true.
	 * 2. Let O be ToObject(V).
	 * 3. ReturnIfAbrupt(O).
	 * 4. Return O.[[Get]](P, V).
	 */
	GetV: function GetV(V, P) {
		// 7.3.2.1
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}

		// 7.3.2.2-3
		var O = this.ToObject(V);

		// 7.3.2.4
		return O[P];
	},

	/**
	 * 7.3.9 - http://www.ecma-international.org/ecma-262/6.0/#sec-getmethod
	 * 1. Assert: IsPropertyKey(P) is true.
	 * 2. Let func be GetV(O, P).
	 * 3. ReturnIfAbrupt(func).
	 * 4. If func is either undefined or null, return undefined.
	 * 5. If IsCallable(func) is false, throw a TypeError exception.
	 * 6. Return func.
	 */
	GetMethod: function GetMethod(O, P) {
		// 7.3.9.1
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}

		// 7.3.9.2
		var func = this.GetV(O, P);

		// 7.3.9.4
		if (func == null) {
			return void 0;
		}

		// 7.3.9.5
		if (!this.IsCallable(func)) {
			throw new TypeError(P + 'is not a function');
		}

		// 7.3.9.6
		return func;
	},

	/**
	 * 7.3.1 Get (O, P) - http://www.ecma-international.org/ecma-262/6.0/#sec-get-o-p
	 * 1. Assert: Type(O) is Object.
	 * 2. Assert: IsPropertyKey(P) is true.
	 * 3. Return O.[[Get]](P, O).
	 */
	Get: function Get(O, P) {
		// 7.3.1.1
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		// 7.3.1.2
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		// 7.3.1.3
		return O[P];
	},

	Type: function Type(x) {
		if (typeof x === 'symbol') {
			return 'Symbol';
		}
		return es5.Type(x);
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-speciesconstructor
	SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		var C = O.constructor;
		if (typeof C === 'undefined') {
			return defaultConstructor;
		}
		if (this.Type(C) !== 'Object') {
			throw new TypeError('O.constructor is not an Object');
		}
		var S = hasSymbols$4 && Symbol.species ? C[Symbol.species] : void 0;
		if (S == null) {
			return defaultConstructor;
		}
		if (this.IsConstructor(S)) {
			return S;
		}
		throw new TypeError('no constructor found');
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor
	CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {
		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {
			if (!src(Desc, '[[Value]]')) {
				Desc['[[Value]]'] = void 0;
			}
			if (!src(Desc, '[[Writable]]')) {
				Desc['[[Writable]]'] = false;
			}
		} else {
			if (!src(Desc, '[[Get]]')) {
				Desc['[[Get]]'] = void 0;
			}
			if (!src(Desc, '[[Set]]')) {
				Desc['[[Set]]'] = void 0;
			}
		}
		if (!src(Desc, '[[Enumerable]]')) {
			Desc['[[Enumerable]]'] = false;
		}
		if (!src(Desc, '[[Configurable]]')) {
			Desc['[[Configurable]]'] = false;
		}
		return Desc;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw
	Set: function Set(O, P, V, Throw) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		if (this.Type(Throw) !== 'Boolean') {
			throw new TypeError('Throw must be a Boolean');
		}
		if (Throw) {
			O[P] = V;
			return true;
		} else {
			try {
				O[P] = V;
			} catch (e) {
				return false;
			}
		}
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-hasownproperty
	HasOwnProperty: function HasOwnProperty(O, P) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		return src(O, P);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-hasproperty
	HasProperty: function HasProperty(O, P) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		return P in O;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable
	IsConcatSpreadable: function IsConcatSpreadable(O) {
		if (this.Type(O) !== 'Object') {
			return false;
		}
		if (hasSymbols$4 && typeof Symbol.isConcatSpreadable === 'symbol') {
			var spreadable = this.Get(O, Symbol.isConcatSpreadable);
			if (typeof spreadable !== 'undefined') {
				return this.ToBoolean(spreadable);
			}
		}
		return this.IsArray(O);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-invoke
	Invoke: function Invoke(O, P) {
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		var argumentsList = arraySlice(arguments, 2);
		var func = this.GetV(O, P);
		return this.Call(func, O, argumentsList);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject
	CreateIterResultObject: function CreateIterResultObject(value, done) {
		if (this.Type(done) !== 'Boolean') {
			throw new TypeError('Assertion failed: Type(done) is not Boolean');
		}
		return {
			value: value,
			done: done
		};
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-regexpexec
	RegExpExec: function RegExpExec(R, S) {
		if (this.Type(R) !== 'Object') {
			throw new TypeError('R must be an Object');
		}
		if (this.Type(S) !== 'String') {
			throw new TypeError('S must be a String');
		}
		var exec = this.Get(R, 'exec');
		if (this.IsCallable(exec)) {
			var result = this.Call(exec, R, [S]);
			if (result === null || this.Type(result) === 'Object') {
				return result;
			}
			throw new TypeError('"exec" method must return `null` or an Object');
		}
		return regexExec(R, S);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate
	ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {
		if (!this.IsInteger(length) || length < 0) {
			throw new TypeError('Assertion failed: length must be an integer >= 0');
		}
		var len = length === 0 ? 0 : length;
		var C;
		var isArray = this.IsArray(originalArray);
		if (isArray) {
			C = this.Get(originalArray, 'constructor');
			// TODO: figure out how to make a cross-realm normal Array, a same-realm Array
			// if (this.IsConstructor(C)) {
			// 	if C is another realm's Array, C = undefined
			// 	Object.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?
			// }
			if (this.Type(C) === 'Object' && hasSymbols$4 && Symbol.species) {
				C = this.Get(C, Symbol.species);
				if (C === null) {
					C = void 0;
				}
			}
		}
		if (typeof C === 'undefined') {
			return Array(len);
		}
		if (!this.IsConstructor(C)) {
			throw new TypeError('C must be a constructor');
		}
		return new C(len); // this.Construct(C, len);
	},

	CreateDataProperty: function CreateDataProperty(O, P, V) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		var oldDesc = Object.getOwnPropertyDescriptor(O, P);
		var extensible = oldDesc || (typeof Object.isExtensible !== 'function' || Object.isExtensible(O));
		var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);
		if (immutable || !extensible) {
			return false;
		}
		var newDesc = {
			configurable: true,
			enumerable: true,
			value: V,
			writable: true
		};
		Object.defineProperty(O, P, newDesc);
		return true;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow
	CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		var success = this.CreateDataProperty(O, P, V);
		if (!success) {
			throw new TypeError('unable to create data property');
		}
		return success;
	}
});

delete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible

var es2015 = ES6;

'use strict';




var ES2016 = assign(assign({}, es2015), {
	// https://github.com/tc39/ecma262/pull/60
	SameValueNonNumber: function SameValueNonNumber(x, y) {
		if (typeof x === 'number' || typeof x !== typeof y) {
			throw new TypeError('SameValueNonNumber requires two non-number values of the same type.');
		}
		return this.SameValue(x, y);
	}
});

var es2016 = ES2016;

'use strict';

var es7 = es2016;

'use strict';




var isEnumerable$1 = functionBind.call(Function.call, Object.prototype.propertyIsEnumerable);

var implementation$6 = function entries(O) {
	var obj = es7.RequireObjectCoercible(O);
	var entrys = [];
	for (var key in obj) {
		if (src(obj, key) && isEnumerable$1(obj, key)) {
			entrys.push([key, obj[key]]);
		}
	}
	return entrys;
};

'use strict';



var polyfill$4 = function getPolyfill() {
	return typeof Object.entries === 'function' ? Object.entries : implementation$6;
};

'use strict';




var shim$3 = function shimEntries() {
	var polyfill = polyfill$4();
	defineProperties_1(Object, { entries: polyfill }, {
		entries: function testEntries() {
			return Object.entries !== polyfill;
		}
	});
	return polyfill;
};

'use strict';







var polyfill$3 = polyfill$4();

defineProperties_1(polyfill$3, {
	getPolyfill: polyfill$4,
	implementation: implementation$6,
	shim: shim$3
});

var object_entries = polyfill$3;

var isPlainObject$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _isPlainObject2 = _interopRequireDefault(isPlainObject_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = _isPlainObject2['default'];

});

unwrapExports(isPlainObject$1);

var shape = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = shapeValidator;



var _isPlainObject2 = _interopRequireDefault(isPlainObject$1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function shapeValidator(shapeTypes) {
  if (!(0, _isPlainObject2['default'])(shapeTypes)) {
    throw new TypeError('shape must be a normal object');
  }

  function shape(props, propName, componentName, location) {
    var propValue = props[propName];
    if (propValue == null) {
      return null;
    }
    // code adapted from PropTypes.shape: https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L381
    // eslint-disable-next-line guard-for-in, no-restricted-syntax

    for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (checker) {
        var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
        if (error) {
          return error;
        }
      }
    }
    return null;
  }

  shape.isRequired = function () {
    function shapeRequired(props, propName, componentName) {
      var propValue = props[propName];
      if (propValue == null) {
        return new TypeError(String(componentName) + ': ' + String(propName) + ' is required.');
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return shape.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return shapeRequired;
  }();

  return (0, _wrapValidator2['default'])(shape, 'shape', shapeTypes);
}

});

unwrapExports(shape);

var isPrimitive_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = isPrimitive;
function isPrimitive(x) {
  return !x || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object' && typeof x !== 'function';
}

});

unwrapExports(isPrimitive_1);

var valuesOf = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = valuesOfValidator;



var _isPrimitive2 = _interopRequireDefault(isPrimitive_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L307-L340

function valuesOfValidator(propType) {
  if (typeof propType !== 'function') {
    throw new TypeError('objectOf: propType must be a function');
  }

  var validator = function () {
    function valuesOf(props, propName, componentName, location, propFullName) {
      for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      var propValue = props[propName];
      if (propValue == null || (0, _isPrimitive2['default'])(propValue)) {
        return null;
      }

      var firstError = void 0;
      Object.keys(propValue).some(function (key) {
        firstError = propType.apply(undefined, [propValue, key, componentName, location, String(propFullName) + '.' + String(key)].concat(rest));
        return firstError;
      });
      return firstError || null;
    }

    return valuesOf;
  }();
  validator.isRequired = function () {
    function valuesOfRequired(props, propName, componentName) {
      var propValue = props[propName];
      if (propValue == null) {
        return new TypeError(String(componentName) + ': ' + String(propName) + ' is required.');
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return validator.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return valuesOfRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'valuesOf', propType);
}

});

unwrapExports(valuesOf);

var between = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports['default'] = betweenValidator;



var _object2 = _interopRequireDefault(object_assign);



var _object4 = _interopRequireDefault(object_entries);



var _shape2 = _interopRequireDefault(shape);



var _valuesOf2 = _interopRequireDefault(valuesOf);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function number(props, propName, componentName) {
  var value = props[propName];
  if (typeof value === 'number' && !isNaN(value)) {
    return null;
  }

  return new TypeError(String(componentName) + ': ' + String(propName) + ' must be a non-NaN number.');
}

function numberOrPropsFunc(props, propName) {
  var value = props[propName];

  if (typeof value === 'function') {
    return null;
  }

  if (typeof value === 'number' && !isNaN(value)) {
    return null;
  }

  return new TypeError(String(propName) + ': a function, or a non-NaN number is required');
}

function lowerCompare(value, _ref) {
  var gt = _ref.gt,
      gte = _ref.gte;

  if (typeof gt === 'number') {
    return value > gt;
  }
  if (typeof gte === 'number') {
    return value >= gte;
  }
  return true;
}

function upperCompare(value, _ref2) {
  var lt = _ref2.lt,
      lte = _ref2.lte;

  if (typeof lt === 'number') {
    return value < lt;
  }
  if (typeof lte === 'number') {
    return value <= lte;
  }
  return true;
}

function greaterThanError(_ref3) {
  var gt = _ref3.gt,
      gte = _ref3.gte;

  if (typeof gt === 'number') {
    return 'greater than ' + gt;
  }
  if (typeof gte === 'number') {
    return 'greater than or equal to ' + gte;
  }
  return '';
}

function lessThanError(_ref4) {
  var lt = _ref4.lt,
      lte = _ref4.lte;

  if (typeof lt === 'number') {
    return 'less than ' + lt;
  }
  if (typeof lte === 'number') {
    return 'less than or equal to ' + lte;
  }
  return '';
}

function errorMessage(componentName, propName, opts) {
  var errors = [greaterThanError(opts), lessThanError(opts)].filter(Boolean).join(' and ');
  return String(componentName) + ': ' + String(propName) + ' must be ' + String(errors);
}

function propsThunkify(opts) {
  return (0, _object4['default'])(opts).reduce(function (acc, _ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
        key = _ref6[0],
        value = _ref6[1];

    var numberThunk = typeof value === 'number' ? function () {
      return value;
    } : value;
    return (0, _object2['default'])({}, acc, _defineProperty({}, key, numberThunk));
  }, {});
}

function invokeWithProps(optsThunks, props) {
  return (0, _object4['default'])(optsThunks).reduce(function (acc, _ref7) {
    var _ref8 = _slicedToArray(_ref7, 2),
        key = _ref8[0],
        thunk = _ref8[1];

    var value = thunk(props);
    return (0, _object2['default'])({}, acc, _defineProperty({}, key, value));
  }, {});
}

var argValidators = [(0, _shape2['default'])({ lt: numberOrPropsFunc, gt: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ lte: numberOrPropsFunc, gt: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ lt: numberOrPropsFunc, gte: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ lte: numberOrPropsFunc, gte: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ lt: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ lte: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ gt: numberOrPropsFunc }).isRequired, (0, _shape2['default'])({ gte: numberOrPropsFunc }).isRequired];
function argValidator(props, propName) {
  return argValidators.every(function (validator) {
    return !!validator(props, propName);
  });
}

var thunkValueValidator = (0, _valuesOf2['default'])(number).isRequired;

function betweenValidator(options) {
  var argError = argValidator({ options: options }, 'options');
  if (argError) {
    throw new TypeError('between: only one of the pairs of `lt`/`lte`, and `gt`/`gte`, may be supplied, and at least one pair must be provided.');
  }

  var optsThunks = propsThunkify(options);

  var validator = function () {
    function between(props, propName, componentName) {
      var propValue = props[propName];
      if (propValue == null) {
        return null;
      }

      if (typeof propValue !== 'number') {
        return new RangeError(String(componentName) + ': ' + String(propName) + ' must be a number, got "' + (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) + '"');
      }

      var opts = invokeWithProps(optsThunks, props);

      for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      var thunkValuesError = thunkValueValidator.apply(undefined, [_defineProperty({}, propName, opts), propName, componentName].concat(rest));
      if (thunkValuesError) {
        return thunkValuesError;
      }

      if (!lowerCompare(propValue, opts) || !upperCompare(propValue, opts)) {
        return new RangeError(errorMessage(componentName, propName, opts));
      }

      return null;
    }

    return between;
  }();
  validator.isRequired = function () {
    function betweenRequired(props, propName, componentName) {
      var propValue = props[propName];
      if (typeof propValue !== 'number') {
        return new RangeError(String(componentName) + ': ' + String(propName) + ' must be a number, got "' + (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) + '"');
      }

      var opts = invokeWithProps(optsThunks, props);

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      var thunkValuesError = thunkValueValidator.apply(undefined, [_defineProperty({}, propName, opts), propName, componentName].concat(rest));
      if (thunkValuesError) {
        return thunkValuesError;
      }

      if (!lowerCompare(propValue, opts) || !upperCompare(propValue, opts)) {
        return new RangeError(errorMessage(componentName, propName, opts));
      }

      return null;
    }

    return betweenRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'between', options);
}

});

unwrapExports(between);

var childrenHavePropXorChildren_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = childrenHavePropXorChildren;



var _react2 = _interopRequireDefault(React);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function childrenHavePropXorChildren(prop) {
  if (typeof prop !== 'string' && (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) !== 'symbol') {
    throw new TypeError('invalid prop: must be string or symbol');
  }

  var validator = function () {
    function childrenHavePropXorChildrenWithProp(_ref, _, componentName) {
      var children = _ref.children;

      var truthyChildrenCount = 0;
      var propCount = 0;
      var grandchildrenCount = 0;

      _react2['default'].Children.forEach(children, function (child) {
        if (!child) {
          return;
        }

        truthyChildrenCount += 1;

        if (child.props[prop]) {
          propCount += 1;
        }

        if (_react2['default'].Children.count(child.props.children)) {
          grandchildrenCount += 1;
        }
      });

      if (propCount === truthyChildrenCount && grandchildrenCount === 0 || propCount === 0 && grandchildrenCount === truthyChildrenCount || propCount === 0 && grandchildrenCount === 0) {
        return null;
      }

      return new TypeError('`' + String(componentName) + '` requires children to all have prop \u201C' + String(prop) + '\u201D, all have children, or all have neither.');
    }

    return childrenHavePropXorChildrenWithProp;
  }();
  validator.isRequired = validator;

  return (0, _wrapValidator2['default'])(validator, 'childrenHavePropXorChildrenWithProp:' + String(prop), prop);
}

});

unwrapExports(childrenHavePropXorChildren_1);

var renderableChildren_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = renderableChildren;



var _react2 = _interopRequireDefault(React);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function renderableChildren(childrenProp) {
  return _react2['default'].Children.toArray(childrenProp).filter(function (child) {
    return child === 0 || child;
  });
}

});

unwrapExports(renderableChildren_1);

var childrenOf_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = childrenOf;



var _object2 = _interopRequireDefault(object_assign);



var _renderableChildren2 = _interopRequireDefault(renderableChildren_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function validateChildren(propType, children, props) {
  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  var error = void 0;
  children.some(function (child) {
    error = propType.apply(undefined, [(0, _object2['default'])({}, props, { children: child }), 'children'].concat(rest));
    return error;
  });

  return error || null;
}

function childrenOf(propType) {
  function childrenOfPropType(props, propName, componentName) {
    if (propName !== 'children') {
      return new TypeError(String(componentName) + ' is using the childrenOf validator on non-children prop "' + String(propName) + '"');
    }

    var propValue = props[propName];

    if (propValue == null) {
      return null;
    }
    var children = (0, _renderableChildren2['default'])(propValue);
    if (children.length === 0) {
      return null;
    }

    for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    return validateChildren.apply(undefined, [propType, children, props, componentName].concat(rest));
  }

  childrenOfPropType.isRequired = function (props, propName, componentName) {
    for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
      rest[_key3 - 3] = arguments[_key3];
    }

    if (propName !== 'children') {
      return new TypeError(String(componentName) + ' is using the childrenOf validator on non-children prop "' + String(propName) + '"');
    }

    var children = (0, _renderableChildren2['default'])(props[propName]);
    if (children.length === 0) {
      return new TypeError('`' + String(componentName) + '` requires at least one node of type ' + String(propType.typeName || propType.name));
    }

    return validateChildren.apply(undefined, [propType, children, props, componentName].concat(rest));
  };

  return (0, _wrapValidator2['default'])(childrenOfPropType, 'childrenOf', propType);
}

});

unwrapExports(childrenOf_1);

var _isNaN$2 = Number.isNaN || function isNaN(a) {
	return a !== a;
};

var $isNaN$2 = Number.isNaN || function (a) { return a !== a; };

var _isFinite$2 = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN$2(x) && x !== Infinity && x !== -Infinity; };

var has$3 = Object.prototype.hasOwnProperty;
var assign$3 = function assign(target, source) {
	if (Object.assign) {
		return Object.assign(target, source);
	}
	for (var key in source) {
		if (has$3.call(source, key)) {
			target[key] = source[key];
		}
	}
	return target;
};

var sign$3 = function sign(number) {
	return number >= 0 ? 1 : -1;
};

var mod$3 = function mod(number, modulo) {
	var remain = number % modulo;
	return Math.floor(remain >= 0 ? remain : remain + modulo);
};

var isPrimitive$7 = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

'use strict';












// https://es5.github.io/#x9
var ES5$2 = {
	ToPrimitive: es5$2,

	ToBoolean: function ToBoolean(value) {
		return !!value;
	},
	ToNumber: function ToNumber(value) {
		return Number(value);
	},
	ToInteger: function ToInteger(value) {
		var number = this.ToNumber(value);
		if (_isNaN$2(number)) { return 0; }
		if (number === 0 || !_isFinite$2(number)) { return number; }
		return sign$3(number) * Math.floor(Math.abs(number));
	},
	ToInt32: function ToInt32(x) {
		return this.ToNumber(x) >> 0;
	},
	ToUint32: function ToUint32(x) {
		return this.ToNumber(x) >>> 0;
	},
	ToUint16: function ToUint16(value) {
		var number = this.ToNumber(value);
		if (_isNaN$2(number) || number === 0 || !_isFinite$2(number)) { return 0; }
		var posInt = sign$3(number) * Math.floor(Math.abs(number));
		return mod$3(posInt, 0x10000);
	},
	ToString: function ToString(value) {
		return String(value);
	},
	ToObject: function ToObject(value) {
		this.CheckObjectCoercible(value);
		return Object(value);
	},
	CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
		/* jshint eqnull:true */
		if (value == null) {
			throw new TypeError(optMessage || 'Cannot call method on ' + value);
		}
		return value;
	},
	IsCallable: isCallable,
	SameValue: function SameValue(x, y) {
		if (x === y) { // 0 === -0, but they are not identical.
			if (x === 0) { return 1 / x === 1 / y; }
			return true;
		}
		return _isNaN$2(x) && _isNaN$2(y);
	},

	// http://www.ecma-international.org/ecma-262/5.1/#sec-8
	Type: function Type(x) {
		if (x === null) {
			return 'Null';
		}
		if (typeof x === 'undefined') {
			return 'Undefined';
		}
		if (typeof x === 'function' || typeof x === 'object') {
			return 'Object';
		}
		if (typeof x === 'number') {
			return 'Number';
		}
		if (typeof x === 'boolean') {
			return 'Boolean';
		}
		if (typeof x === 'string') {
			return 'String';
		}
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
	IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {
		if (this.Type(Desc) !== 'Object') {
			return false;
		}
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};
		// jscs:disable
		for (var key in Desc) { // eslint-disable-line
			if (src(Desc, key) && !allowed[key]) {
				return false;
			}
		}
		// jscs:enable
		var isData = src(Desc, '[[Value]]');
		var IsAccessor = src(Desc, '[[Get]]') || src(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.1
	IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!src(Desc, '[[Get]]') && !src(Desc, '[[Set]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.2
	IsDataDescriptor: function IsDataDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!src(Desc, '[[Value]]') && !src(Desc, '[[Writable]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.3
	IsGenericDescriptor: function IsGenericDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {
			return true;
		}

		return false;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.4
	FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return Desc;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (this.IsDataDescriptor(Desc)) {
			return {
				value: Desc['[[Value]]'],
				writable: !!Desc['[[Writable]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else if (this.IsAccessorDescriptor(Desc)) {
			return {
				get: Desc['[[Get]]'],
				set: Desc['[[Set]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else {
			throw new TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');
		}
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.5
	ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {
		if (this.Type(Obj) !== 'Object') {
			throw new TypeError('ToPropertyDescriptor requires an object');
		}

		var desc = {};
		if (src(Obj, 'enumerable')) {
			desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);
		}
		if (src(Obj, 'configurable')) {
			desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);
		}
		if (src(Obj, 'value')) {
			desc['[[Value]]'] = Obj.value;
		}
		if (src(Obj, 'writable')) {
			desc['[[Writable]]'] = this.ToBoolean(Obj.writable);
		}
		if (src(Obj, 'get')) {
			var getter = Obj.get;
			if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {
				throw new TypeError('getter must be a function');
			}
			desc['[[Get]]'] = getter;
		}
		if (src(Obj, 'set')) {
			var setter = Obj.set;
			if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {
				throw new TypeError('setter must be a function');
			}
			desc['[[Set]]'] = setter;
		}

		if ((src(desc, '[[Get]]') || src(desc, '[[Set]]')) && (src(desc, '[[Value]]') || src(desc, '[[Writable]]'))) {
			throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
		}
		return desc;
	}
};

var es5$4 = ES5$2;

'use strict';




var toStr$9 = Object.prototype.toString;
var hasSymbols$6 = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';



var MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;





var parseInteger$1 = parseInt;

var arraySlice$1 = functionBind.call(Function.call, Array.prototype.slice);
var strSlice$1 = functionBind.call(Function.call, String.prototype.slice);
var isBinary$1 = functionBind.call(Function.call, RegExp.prototype.test, /^0b[01]+$/i);
var isOctal$1 = functionBind.call(Function.call, RegExp.prototype.test, /^0o[0-7]+$/i);
var regexExec$2 = functionBind.call(Function.call, RegExp.prototype.exec);
var nonWS$1 = ['\u0085', '\u200b', '\ufffe'].join('');
var nonWSregex$1 = new RegExp('[' + nonWS$1 + ']', 'g');
var hasNonWS$1 = functionBind.call(Function.call, RegExp.prototype.test, nonWSregex$1);
var invalidHexLiteral$1 = /^[-+]0x[0-9a-f]+$/i;
var isInvalidHexLiteral$1 = functionBind.call(Function.call, RegExp.prototype.test, invalidHexLiteral$1);

// whitespace from: http://es5.github.io/#x15.5.4.20
// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
var ws$1 = [
	'\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003',
	'\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028',
	'\u2029\uFEFF'
].join('');
var trimRegex$1 = new RegExp('(^[' + ws$1 + ']+)|([' + ws$1 + ']+$)', 'g');
var replace$1 = functionBind.call(Function.call, String.prototype.replace);
var trim$1 = function (value) {
	return replace$1(value, trimRegex$1, '');
};





// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations
var ES6$1 = assign$3(assign$3({}, es5$4), {

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args
	Call: function Call(F, V) {
		var args = arguments.length > 2 ? arguments[2] : [];
		if (!this.IsCallable(F)) {
			throw new TypeError(F + ' is not a function');
		}
		return F.apply(V, args);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive
	ToPrimitive: es6,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean
	// ToBoolean: ES5.ToBoolean,

	// http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber
	ToNumber: function ToNumber(argument) {
		var value = isPrimitive$7(argument) ? argument : es6(argument, Number);
		if (typeof value === 'symbol') {
			throw new TypeError('Cannot convert a Symbol value to a number');
		}
		if (typeof value === 'string') {
			if (isBinary$1(value)) {
				return this.ToNumber(parseInteger$1(strSlice$1(value, 2), 2));
			} else if (isOctal$1(value)) {
				return this.ToNumber(parseInteger$1(strSlice$1(value, 2), 8));
			} else if (hasNonWS$1(value) || isInvalidHexLiteral$1(value)) {
				return NaN;
			} else {
				var trimmed = trim$1(value);
				if (trimmed !== value) {
					return this.ToNumber(trimmed);
				}
			}
		}
		return Number(value);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger
	// ToInteger: ES5.ToNumber,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32
	// ToInt32: ES5.ToInt32,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32
	// ToUint32: ES5.ToUint32,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16
	ToInt16: function ToInt16(argument) {
		var int16bit = this.ToUint16(argument);
		return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16
	// ToUint16: ES5.ToUint16,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8
	ToInt8: function ToInt8(argument) {
		var int8bit = this.ToUint8(argument);
		return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8
	ToUint8: function ToUint8(argument) {
		var number = this.ToNumber(argument);
		if (_isNaN$2(number) || number === 0 || !_isFinite$2(number)) { return 0; }
		var posInt = sign$3(number) * Math.floor(Math.abs(number));
		return mod$3(posInt, 0x100);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp
	ToUint8Clamp: function ToUint8Clamp(argument) {
		var number = this.ToNumber(argument);
		if (_isNaN$2(number) || number <= 0) { return 0; }
		if (number >= 0xFF) { return 0xFF; }
		var f = Math.floor(argument);
		if (f + 0.5 < number) { return f + 1; }
		if (number < f + 0.5) { return f; }
		if (f % 2 !== 0) { return f + 1; }
		return f;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring
	ToString: function ToString(argument) {
		if (typeof argument === 'symbol') {
			throw new TypeError('Cannot convert a Symbol value to a string');
		}
		return String(argument);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject
	ToObject: function ToObject(value) {
		this.RequireObjectCoercible(value);
		return Object(value);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey
	ToPropertyKey: function ToPropertyKey(argument) {
		var key = this.ToPrimitive(argument, String);
		return typeof key === 'symbol' ? key : this.ToString(key);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
	ToLength: function ToLength(argument) {
		var len = this.ToInteger(argument);
		if (len <= 0) { return 0; } // includes converting -0 to +0
		if (len > MAX_SAFE_INTEGER$1) { return MAX_SAFE_INTEGER$1; }
		return len;
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring
	CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {
		if (toStr$9.call(argument) !== '[object String]') {
			throw new TypeError('must be a string');
		}
		if (argument === '-0') { return -0; }
		var n = this.ToNumber(argument);
		if (this.SameValue(this.ToString(n), argument)) { return n; }
		return void 0;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible
	RequireObjectCoercible: es5$4.CheckObjectCoercible,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray
	IsArray: Array.isArray || function IsArray(argument) {
		return toStr$9.call(argument) === '[object Array]';
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable
	// IsCallable: ES5.IsCallable,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor
	IsConstructor: function IsConstructor(argument) {
		return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o
	IsExtensible: function IsExtensible(obj) {
		if (!Object.preventExtensions) { return true; }
		if (isPrimitive$7(obj)) {
			return false;
		}
		return Object.isExtensible(obj);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger
	IsInteger: function IsInteger(argument) {
		if (typeof argument !== 'number' || _isNaN$2(argument) || !_isFinite$2(argument)) {
			return false;
		}
		var abs = Math.abs(argument);
		return Math.floor(abs) === abs;
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey
	IsPropertyKey: function IsPropertyKey(argument) {
		return typeof argument === 'string' || typeof argument === 'symbol';
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp
	IsRegExp: function IsRegExp(argument) {
		if (!argument || typeof argument !== 'object') {
			return false;
		}
		if (hasSymbols$6) {
			var isRegExp = argument[Symbol.match];
			if (typeof isRegExp !== 'undefined') {
				return es5$4.ToBoolean(isRegExp);
			}
		}
		return isRegex(argument);
	},

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue
	// SameValue: ES5.SameValue,

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero
	SameValueZero: function SameValueZero(x, y) {
		return (x === y) || (_isNaN$2(x) && _isNaN$2(y));
	},

	/**
	 * 7.3.2 GetV (V, P)
	 * 1. Assert: IsPropertyKey(P) is true.
	 * 2. Let O be ToObject(V).
	 * 3. ReturnIfAbrupt(O).
	 * 4. Return O.[[Get]](P, V).
	 */
	GetV: function GetV(V, P) {
		// 7.3.2.1
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}

		// 7.3.2.2-3
		var O = this.ToObject(V);

		// 7.3.2.4
		return O[P];
	},

	/**
	 * 7.3.9 - http://www.ecma-international.org/ecma-262/6.0/#sec-getmethod
	 * 1. Assert: IsPropertyKey(P) is true.
	 * 2. Let func be GetV(O, P).
	 * 3. ReturnIfAbrupt(func).
	 * 4. If func is either undefined or null, return undefined.
	 * 5. If IsCallable(func) is false, throw a TypeError exception.
	 * 6. Return func.
	 */
	GetMethod: function GetMethod(O, P) {
		// 7.3.9.1
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}

		// 7.3.9.2
		var func = this.GetV(O, P);

		// 7.3.9.4
		if (func == null) {
			return void 0;
		}

		// 7.3.9.5
		if (!this.IsCallable(func)) {
			throw new TypeError(P + 'is not a function');
		}

		// 7.3.9.6
		return func;
	},

	/**
	 * 7.3.1 Get (O, P) - http://www.ecma-international.org/ecma-262/6.0/#sec-get-o-p
	 * 1. Assert: Type(O) is Object.
	 * 2. Assert: IsPropertyKey(P) is true.
	 * 3. Return O.[[Get]](P, O).
	 */
	Get: function Get(O, P) {
		// 7.3.1.1
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		// 7.3.1.2
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		// 7.3.1.3
		return O[P];
	},

	Type: function Type(x) {
		if (typeof x === 'symbol') {
			return 'Symbol';
		}
		return es5$4.Type(x);
	},

	// http://www.ecma-international.org/ecma-262/6.0/#sec-speciesconstructor
	SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		var C = O.constructor;
		if (typeof C === 'undefined') {
			return defaultConstructor;
		}
		if (this.Type(C) !== 'Object') {
			throw new TypeError('O.constructor is not an Object');
		}
		var S = hasSymbols$6 && Symbol.species ? C[Symbol.species] : void 0;
		if (S == null) {
			return defaultConstructor;
		}
		if (this.IsConstructor(S)) {
			return S;
		}
		throw new TypeError('no constructor found');
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor
	CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {
		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {
			if (!src(Desc, '[[Value]]')) {
				Desc['[[Value]]'] = void 0;
			}
			if (!src(Desc, '[[Writable]]')) {
				Desc['[[Writable]]'] = false;
			}
		} else {
			if (!src(Desc, '[[Get]]')) {
				Desc['[[Get]]'] = void 0;
			}
			if (!src(Desc, '[[Set]]')) {
				Desc['[[Set]]'] = void 0;
			}
		}
		if (!src(Desc, '[[Enumerable]]')) {
			Desc['[[Enumerable]]'] = false;
		}
		if (!src(Desc, '[[Configurable]]')) {
			Desc['[[Configurable]]'] = false;
		}
		return Desc;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw
	Set: function Set(O, P, V, Throw) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		if (this.Type(Throw) !== 'Boolean') {
			throw new TypeError('Throw must be a Boolean');
		}
		if (Throw) {
			O[P] = V;
			return true;
		} else {
			try {
				O[P] = V;
			} catch (e) {
				return false;
			}
		}
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-hasownproperty
	HasOwnProperty: function HasOwnProperty(O, P) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		return src(O, P);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-hasproperty
	HasProperty: function HasProperty(O, P) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('O must be an Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		return P in O;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable
	IsConcatSpreadable: function IsConcatSpreadable(O) {
		if (this.Type(O) !== 'Object') {
			return false;
		}
		if (hasSymbols$6 && typeof Symbol.isConcatSpreadable === 'symbol') {
			var spreadable = this.Get(O, Symbol.isConcatSpreadable);
			if (typeof spreadable !== 'undefined') {
				return this.ToBoolean(spreadable);
			}
		}
		return this.IsArray(O);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-invoke
	Invoke: function Invoke(O, P) {
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('P must be a Property Key');
		}
		var argumentsList = arraySlice$1(arguments, 2);
		var func = this.GetV(O, P);
		return this.Call(func, O, argumentsList);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject
	CreateIterResultObject: function CreateIterResultObject(value, done) {
		if (this.Type(done) !== 'Boolean') {
			throw new TypeError('Assertion failed: Type(done) is not Boolean');
		}
		return {
			value: value,
			done: done
		};
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-regexpexec
	RegExpExec: function RegExpExec(R, S) {
		if (this.Type(R) !== 'Object') {
			throw new TypeError('R must be an Object');
		}
		if (this.Type(S) !== 'String') {
			throw new TypeError('S must be a String');
		}
		var exec = this.Get(R, 'exec');
		if (this.IsCallable(exec)) {
			var result = this.Call(exec, R, [S]);
			if (result === null || this.Type(result) === 'Object') {
				return result;
			}
			throw new TypeError('"exec" method must return `null` or an Object');
		}
		return regexExec$2(R, S);
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate
	ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {
		if (!this.IsInteger(length) || length < 0) {
			throw new TypeError('Assertion failed: length must be an integer >= 0');
		}
		var len = length === 0 ? 0 : length;
		var C;
		var isArray = this.IsArray(originalArray);
		if (isArray) {
			C = this.Get(originalArray, 'constructor');
			// TODO: figure out how to make a cross-realm normal Array, a same-realm Array
			// if (this.IsConstructor(C)) {
			// 	if C is another realm's Array, C = undefined
			// 	Object.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?
			// }
			if (this.Type(C) === 'Object' && hasSymbols$6 && Symbol.species) {
				C = this.Get(C, Symbol.species);
				if (C === null) {
					C = void 0;
				}
			}
		}
		if (typeof C === 'undefined') {
			return Array(len);
		}
		if (!this.IsConstructor(C)) {
			throw new TypeError('C must be a constructor');
		}
		return new C(len); // this.Construct(C, len);
	},

	CreateDataProperty: function CreateDataProperty(O, P, V) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		var oldDesc = Object.getOwnPropertyDescriptor(O, P);
		var extensible = oldDesc || (typeof Object.isExtensible !== 'function' || Object.isExtensible(O));
		var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);
		if (immutable || !extensible) {
			return false;
		}
		var newDesc = {
			configurable: true,
			enumerable: true,
			value: V,
			writable: true
		};
		Object.defineProperty(O, P, newDesc);
		return true;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow
	CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {
		if (this.Type(O) !== 'Object') {
			throw new TypeError('Assertion failed: Type(O) is not Object');
		}
		if (!this.IsPropertyKey(P)) {
			throw new TypeError('Assertion failed: IsPropertyKey(P) is not true');
		}
		var success = this.CreateDataProperty(O, P, V);
		if (!success) {
			throw new TypeError('unable to create data property');
		}
		return success;
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-advancestringindex
	AdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {
		if (this.Type(S) !== 'String') {
			throw new TypeError('Assertion failed: Type(S) is not String');
		}
		if (!this.IsInteger(index)) {
			throw new TypeError('Assertion failed: length must be an integer >= 0 and <= (2**53 - 1)');
		}
		if (index < 0 || index > MAX_SAFE_INTEGER$1) {
			throw new RangeError('Assertion failed: length must be an integer >= 0 and <= (2**53 - 1)');
		}
		if (this.Type(unicode) !== 'Boolean') {
			throw new TypeError('Assertion failed: Type(unicode) is not Boolean');
		}
		if (!unicode) {
			return index + 1;
		}
		var length = S.length;
		if ((index + 1) >= length) {
			return index + 1;
		}
		var first = S.charCodeAt(index);
		if (first < 0xD800 || first > 0xDBFF) {
			return index + 1;
		}
		var second = S.charCodeAt(index + 1);
		if (second < 0xDC00 || second > 0xDFFF) {
			return index + 1;
		}
		return index + 2;
	}
});

delete ES6$1.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible

var es2015$2 = ES6$1;

'use strict';

var es6$2 = es2015$2;

'use strict';



var implementation$9 = function find(predicate) {
	var list = es6$2.ToObject(this);
	var length = es6$2.ToInteger(es6$2.ToLength(list.length));
	if (!es6$2.IsCallable(predicate)) {
		throw new TypeError('Array#find: predicate must be a function');
	}
	if (length === 0) {
		return undefined;
	}
	var thisArg = arguments[1];
	for (var i = 0, value; i < length; i++) {
		value = list[i];
		if (es6$2.Call(predicate, thisArg, [value, i, list])) {
			return value;
		}
	}
	return undefined;
};

'use strict';

var polyfill$7 = function getPolyfill() {
	// Detect if an implementation exists
	// Detect early implementations which skipped holes in sparse arrays
  // eslint-disable-next-line no-sparse-arrays
	var implemented = Array.prototype.find && [, 1].find(function () {
		return true;
	}) !== 1;

  // eslint-disable-next-line global-require
	return implemented ? Array.prototype.find : implementation$9;
};

'use strict';




var shim$6 = function shimArrayPrototypeFind() {
	var polyfill = polyfill$7();

	defineProperties_1(Array.prototype, { find: polyfill }, {
		find: function () {
			return Array.prototype.find !== polyfill;
		}
	});

	return polyfill;
};

'use strict';








var slice$2 = Array.prototype.slice;

var polyfill$6 = polyfill$7();

var boundFindShim = function find(array, predicate) { // eslint-disable-line no-unused-vars
	es6$2.RequireObjectCoercible(array);
	var args = slice$2.call(arguments, 1);
	return polyfill$6.apply(array, args);
};

defineProperties_1(boundFindShim, {
	getPolyfill: polyfill$7,
	implementation: implementation$9,
	shim: shim$6
});

var array_prototype_find = boundFindShim;

var functionsHaveNames = typeof function foo() {}.name === 'string'; // when function names are minified, checking for "foo" would break

'use strict';




var functionToString = functionBind.call(Function.call, Function.prototype.toString);
var stringMatch = functionBind.call(Function.call, String.prototype.match);

var classRegex = /^class /;

var isClass = function isClassConstructor(fn) {
	if (isCallable(fn)) {
		return false;
	}
	if (typeof fn !== 'function') {
		return false;
	}
	try {
		var match = stringMatch(functionToString(fn), classRegex);
		return !!match;
	} catch (e) {}
	return false;
};

var regex = /\s*function\s+([^(\s]*)\s*/;

var functionProto = Function.prototype;

var implementation$11 = function getName() {
	if (!isClass(this) && !isCallable(this)) {
		throw new TypeError('Function.prototype.name sham getter called on non-function');
	}
	if (functionsHaveNames) {
		return this.name;
	}
	if (this === functionProto) {
		return '';
	}
	var str = functionToString(this);
	var match = stringMatch(str, regex);
	var name = match && match[1];
	return name;
};

'use strict';



var polyfill$9 = function getPolyfill() {
	return implementation$11;
};

'use strict';

var supportsDescriptors$1 = defineProperties_1.supportsDescriptors;


var defineProperty$1 = Object.defineProperty;
var TypeErr = TypeError;

var shim$9 = function shimName() {
	var polyfill = polyfill$9();
	if (functionsHaveNames) {
		return polyfill;
	}
	if (!supportsDescriptors$1) {
		throw new TypeErr('Shimming Function.prototype.name support requires ES5 property descriptor support.');
	}
	var functionProto = Function.prototype;
	defineProperty$1(functionProto, 'name', {
		configurable: true,
		enumerable: false,
		get: function () {
			var name = polyfill.call(this);
			if (this !== functionProto) {
				defineProperty$1(this, 'name', {
					configurable: true,
					enumerable: false,
					value: name,
					writable: false
				});
			}
			return name;
		}
	});
	return polyfill;
};

'use strict';








var bound = functionBind.call(Function.call, implementation$11);

defineProperties_1(bound, {
	getPolyfill: polyfill$9,
	implementation: implementation$11,
	shim: shim$9
});

var function_prototype_name = bound;

var getComponentName_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = getComponentName;



var _functionPrototype2 = _interopRequireDefault(function_prototype_name);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function getComponentName(Component$$1) {
  if (typeof Component$$1 === 'string') {
    return Component$$1;
  }
  if (typeof Component$$1 === 'function') {
    return Component$$1.displayName || (0, _functionPrototype2['default'])(Component$$1);
  }
  return null;
}

});

unwrapExports(getComponentName_1);

var childrenOfType_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _arrayPrototype2 = _interopRequireDefault(array_prototype_find);



var _getComponentName2 = _interopRequireDefault(getComponentName_1);



var _renderableChildren2 = _interopRequireDefault(renderableChildren_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function onlyTypes(types, children, componentName) {
  if (!children.every(function (child) {
    return child && (0, _arrayPrototype2['default'])(types, function (Type) {
      return Type === '*' || child.type === Type;
    });
  })) {
    var typeNames = types.map(_getComponentName2['default']).join(', or ');
    return new TypeError('`' + String(componentName) + '` only accepts children of type ' + String(typeNames));
  }
  return null;
}

function isRequired(types, children, componentName) {
  if (children.length === 0) {
    var typeNames = types.map(_getComponentName2['default']).join(', or ');
    return new TypeError('`' + String(componentName) + '` requires at least one node of type ' + String(typeNames));
  }
  return null;
}

function childrenOfType() {
  for (var _len = arguments.length, types = Array(_len), _key = 0; _key < _len; _key++) {
    types[_key] = arguments[_key];
  }

  if (types.length < 1) {
    throw new TypeError('childrenOfType: at least 1 type is required');
  }

  function validator(props, propName, componentName) {
    return onlyTypes(types, (0, _renderableChildren2['default'])(props[propName]), componentName);
  }

  validator.isRequired = function (props, propName, componentName) {
    var children = (0, _renderableChildren2['default'])(props[propName]);
    return isRequired(types, children, componentName) || onlyTypes(types, children, componentName);
  };

  return (0, _wrapValidator2['default'])(validator, 'childrenOfType', types);
}

exports['default'] = childrenOfType;

});

unwrapExports(childrenOfType_1);

var isInteger = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
var floor = Math.floor;

var finite = isFinite;

exports['default'] = Number.isInteger || /* istanbul ignore next */function (x) {
  return typeof x === 'number' && finite(x) && floor(x) === x;
};

});

unwrapExports(isInteger);

var integer = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _isInteger2 = _interopRequireDefault(isInteger);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function requiredInteger(props, propName, componentName) {
  var value = props[propName];
  if (value == null || !(0, _isInteger2['default'])(value)) {
    return new RangeError(String(propName) + ' in ' + String(componentName) + ' must be an integer');
  }
  return null;
}

var validator = function () {
  function integer(props, propName) {
    var value = props[propName];

    if (value == null) {
      return null;
    }

    for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      rest[_key - 2] = arguments[_key];
    }

    return requiredInteger.apply(undefined, [props, propName].concat(rest));
  }

  return integer;
}();

validator.isRequired = requiredInteger;

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(validator, 'integer');
};

});

unwrapExports(integer);

var nonNegativeNumber_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function isNonNegative(x) {
  return typeof x === 'number' && isFinite(x) && x >= 0 && !Object.is(x, -0);
}

function nonNegativeNumber(props, propName, componentName) {
  var value = props[propName];

  if (value == null || isNonNegative(value)) {
    return null;
  }

  return new RangeError(String(propName) + ' in ' + String(componentName) + ' must be a non-negative number');
}

function requiredNonNegativeNumber(props, propName, componentName) {
  var value = props[propName];

  if (isNonNegative(value)) {
    return null;
  }

  return new RangeError(String(propName) + ' in ' + String(componentName) + ' must be a non-negative number');
}

nonNegativeNumber.isRequired = requiredNonNegativeNumber;

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(nonNegativeNumber, 'nonNegativeNumber');
};

});

unwrapExports(nonNegativeNumber_1);

var nonNegativeInteger = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _and2 = _interopRequireDefault(and);



var _integer2 = _interopRequireDefault(integer);



var _nonNegativeNumber2 = _interopRequireDefault(nonNegativeNumber_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = (0, _and2['default'])([(0, _integer2['default'])(), (0, _nonNegativeNumber2['default'])()], 'nonNegativeInteger');

});

unwrapExports(nonNegativeInteger);

var typeOf_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = typeOf;



var _react2 = _interopRequireDefault(React);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function typeOf(child) {
  if (child === null) {
    return 'null';
  }
  if (Array.isArray(child)) {
    return 'array';
  }
  if ((typeof child === 'undefined' ? 'undefined' : _typeof(child)) !== 'object') {
    return typeof child === 'undefined' ? 'undefined' : _typeof(child);
  }
  if (_react2['default'].isValidElement(child)) {
    return child.type;
  }
  return child;
}

});

unwrapExports(typeOf_1);

var object_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _isPlainObject2 = _interopRequireDefault(isPlainObject$1);



var _typeOf2 = _interopRequireDefault(typeOf_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/*
  code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L202-L206
  so that it can be called outside of React's normal PropType flow
*/

var ReactPropTypeLocationNames = {
  prop: 'prop',
  context: 'context',
  childContext: 'child context'
};

function object(props, propName, componentName, location, propFullName) {
  var propValue = props[propName];
  if (propValue == null) {
    return null;
  }

  if ((0, _isPlainObject2['default'])(propValue)) {
    return null;
  }
  var locationName = ReactPropTypeLocationNames[location] || location;
  return new TypeError('Invalid ' + String(locationName) + ' `' + String(propFullName) + '` of type `' + String((0, _typeOf2['default'])(propValue)) + '` supplied to `' + String(componentName) + '`, expected `object`.');
}
object.isRequired = function () {
  function objectRequired(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (propValue == null) {
      var locationName = ReactPropTypeLocationNames[location] || location;
      return new TypeError('The ' + String(locationName) + ' `' + String(propFullName) + '` is marked as required in `' + String(componentName) + '`, but its value is `' + String(propValue) + '`.');
    }

    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    return object.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));
  }

  return objectRequired;
}();

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(object, 'object');
};

});

unwrapExports(object_1);

var withShape_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = withShape;



var _and2 = _interopRequireDefault(and);



var _shape2 = _interopRequireDefault(shape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function withShape(type, shapeTypes) {
  if (typeof type !== 'function') {
    throw new TypeError('type must be a valid PropType');
  }
  var shapeValidator = (0, _shape2['default'])(shapeTypes);
  return (0, _and2['default'])([type, shapeValidator], 'withShape');
}

});

unwrapExports(withShape_1);

var sequenceOf = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = sequenceOfValidator;



var _object2 = _interopRequireDefault(object_assign);





var _and2 = _interopRequireDefault(and);



var _between2 = _interopRequireDefault(between);



var _nonNegativeInteger2 = _interopRequireDefault(nonNegativeInteger);



var _object4 = _interopRequireDefault(object_1);



var _withShape2 = _interopRequireDefault(withShape_1);



var _typeOf2 = _interopRequireDefault(typeOf_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var minValidator = _nonNegativeInteger2['default'];
var maxValidator = (0, _and2['default'])([_nonNegativeInteger2['default'], (0, _between2['default'])({ gte: 1 })]);

function validateRange(min, max) {
  if (typeof max !== 'number' || typeof min !== 'number') {
    return null; // no additional checking needed unless both are present
  }

  if (min <= max) {
    return null;
  }
  return new RangeError('min must be less than or equal to max');
}

var specifierShape = {
  validator: function () {
    function validator(props, propName) {
      if (typeof props[propName] !== 'function') {
        return new TypeError('"validator" must be a propType validator function');
      }
      return null;
    }

    return validator;
  }(),
  min: function () {
    function min(props, propName) {
      return minValidator(props, propName) || validateRange(props.min, props.max);
    }

    return min;
  }(),
  max: function () {
    function max(props, propName) {
      return maxValidator(props, propName) || validateRange(props.min, props.max);
    }

    return max;
  }()
};

function getMinMax(_ref) {
  var min = _ref.min,
      max = _ref.max;

  var minimum = void 0;
  var maximum = void 0;
  if (typeof min !== 'number' && typeof max !== 'number') {
    // neither provided, default to "1"
    minimum = 1;
    maximum = 1;
  } else {
    minimum = typeof min === 'number' ? min : 1;
    maximum = typeof max === 'number' ? max : Infinity;
  }
  return { minimum: minimum, maximum: maximum };
}

function chunkByType(items) {
  var chunk = [];
  var lastType = void 0;
  return items.reduce(function (chunks, item) {
    var itemType = (0, _typeOf2['default'])(item);
    if (!lastType || itemType === lastType) {
      chunk.push(item);
    } else {
      chunks.push(chunk);
      chunk = [item];
    }
    lastType = itemType;
    return chunks;
  }, []).concat(chunk.length > 0 ? [chunk] : []);
}

function validateChunks(specifiers, props, propName, componentName) {
  var items = props[propName];
  var chunks = chunkByType(items);

  for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
    rest[_key - 4] = arguments[_key];
  }

  for (var i = 0; i < specifiers.length; i += 1) {
    var _specifiers$i = specifiers[i],
        validator = _specifiers$i.validator,
        min = _specifiers$i.min,
        max = _specifiers$i.max;

    var _getMinMax = getMinMax({ min: min, max: max }),
        minimum = _getMinMax.minimum,
        maximum = _getMinMax.maximum;

    if (chunks.length === 0 && minimum === 0) {
      // no chunks left, but this specifier does not require any items
      continue; // eslint-disable-line no-continue
    }

    var arrayOfValidator = (0, PropTypes.arrayOf)(validator).isRequired;

    var chunk = chunks.shift(); // extract the next chunk to test

    var chunkError = arrayOfValidator.apply(undefined, [(0, _object2['default'])({}, props, _defineProperty({}, propName, chunk)), propName, componentName].concat(rest));

    if (chunkError) {
      // this chunk is invalid
      if (minimum === 0) {
        // but, specifier has a min of 0 and can be skipped
        chunks.unshift(chunk); // put the chunk back, for the next iteration
        continue; // eslint-disable-line no-continue
      }
      return chunkError;
    }

    // chunk is valid!

    if (chunk.length < minimum) {
      return new RangeError(String(componentName) + ': specifier index ' + i + ' requires a minimum of ' + String(min) + ' items, but only has ' + String(chunk.length) + '.');
    }

    if (chunk.length > maximum) {
      return new RangeError(String(componentName) + ': specifier index ' + i + ' requires a maximum of ' + String(max) + ' items, but has ' + String(chunk.length) + '.');
    }
  }

  if (chunks.length > 0) {
    return new TypeError(String(componentName) + ': after all ' + String(specifiers.length) + ' specifiers matched, ' + String(chunks.length) + ' types of items were remaining.');
  }

  return null;
}

var specifierValidator = (0, _withShape2['default'])((0, _object4['default'])(), specifierShape).isRequired;

function sequenceOfValidator() {
  for (var _len2 = arguments.length, specifiers = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    specifiers[_key2] = arguments[_key2];
  }

  if (specifiers.length === 0) {
    throw new RangeError('sequenceOf: at least one specifier is required');
  }

  var errors = specifiers.map(function (specifier, i) {
    return specifierValidator({ specifier: specifier }, 'specifier', 'sequenceOf specifier', 'suequenceOf specifier, index ' + String(i), 'specifier, index ' + String(i));
  });
  if (errors.some(Boolean)) {
    throw new TypeError('\n      sequenceOf: all specifiers must match the appropriate shape.\n\n      Errors:\n        ' + String(errors.map(function (e, i) {
      return ' - Argument index ' + String(i) + ': ' + String(e.message);
    }).join(',\n        ')) + '\n    ');
  }

  var validator = function () {
    function sequenceOf(props, propName) {
      var propValue = props[propName];

      if (propValue == null) {
        return null;
      }

      for (var _len3 = arguments.length, rest = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
        rest[_key3 - 2] = arguments[_key3];
      }

      var error = PropTypes.array.apply(undefined, [props, propName].concat(rest));
      if (error) {
        return error;
      }

      return validateChunks.apply(undefined, [specifiers, props, propName].concat(rest));
    }

    return sequenceOf;
  }();

  validator.isRequired = function () {
    function sequenceOfRequired(props, propName, componentName) {
      for (var _len4 = arguments.length, rest = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
        rest[_key4 - 3] = arguments[_key4];
      }

      var error = PropTypes.array.isRequired.apply(PropTypes.array, [props, propName, componentName].concat(rest));
      if (error) {
        return error;
      }

      return validateChunks.apply(undefined, [specifiers, props, propName, componentName].concat(rest));
    }

    return sequenceOfRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'sequenceOf', specifiers);
}

});

unwrapExports(sequenceOf);

var childrenSequenceOf = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = childrenSequenceOfValidator;



var _object2 = _interopRequireDefault(object_assign);



var _sequenceOf2 = _interopRequireDefault(sequenceOf);



var _renderableChildren2 = _interopRequireDefault(renderableChildren_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function childrenSequenceOfValidator() {
  for (var _len = arguments.length, specifiers = Array(_len), _key = 0; _key < _len; _key++) {
    specifiers[_key] = arguments[_key];
  }

  var seq = _sequenceOf2['default'].apply(undefined, specifiers);

  var validator = function () {
    function childrenSequenceOf(props, propName, componentName) {
      if (propName !== 'children') {
        return new TypeError(String(componentName) + ' is using the childrenSequenceOf validator on non-children prop "' + String(propName) + '"');
      }

      var propValue = props[propName];
      var children = (0, _renderableChildren2['default'])(propValue);
      if (children.length === 0) {
        return null;
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return seq.apply(undefined, [(0, _object2['default'])({}, props, { children: children }), propName, componentName].concat(rest));
    }

    return childrenSequenceOf;
  }();

  validator.isRequired = function () {
    function childrenSequenceOfRequired(props, propName, componentName) {
      if (propName !== 'children') {
        return new TypeError(String(componentName) + ' is using the childrenSequenceOf validator on non-children prop "' + String(propName) + '"');
      }

      var propValue = props[propName];
      var children = (0, _renderableChildren2['default'])(propValue);
      if (children.length === 0) {
        return new TypeError(String(componentName) + ': renderable children are required.');
      }

      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
        rest[_key3 - 3] = arguments[_key3];
      }

      return seq.isRequired.apply(seq, [(0, _object2['default'])({}, props, { children: children }), propName, componentName].concat(rest));
    }

    return childrenSequenceOfRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'childrenSequenceOf', specifiers);
}

});

unwrapExports(childrenSequenceOf);

var componentWithName_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = componentWithName;



var _react2 = _interopRequireDefault(React);



var _isRegex2 = _interopRequireDefault(isRegex);



var _arrayPrototype2 = _interopRequireDefault(array_prototype_find);



var _getComponentName2 = _interopRequireDefault(getComponentName_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function hasName(name, prop, propName, componentName) {
  for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
    rest[_key - 4] = arguments[_key];
  }

  if (Array.isArray(prop)) {
    return (0, _arrayPrototype2['default'])(prop.map(function (item) {
      return hasName.apply(undefined, [name, item, propName, componentName].concat(rest));
    }), Boolean) || null;
  }

  if (!_react2['default'].isValidElement(prop)) {
    return new TypeError(String(componentName) + '.' + String(propName) + ' is not a valid React element');
  }

  var type = prop.type;

  var componentNameFromType = (0, _getComponentName2['default'])(type);

  if ((0, _isRegex2['default'])(name) && !name.test(componentNameFromType)) {
    return new TypeError('`' + String(componentName) + '.' + String(propName) + '` only accepts components matching the regular expression ' + String(name));
  }

  if (!(0, _isRegex2['default'])(name) && componentNameFromType !== name) {
    return new TypeError('`' + String(componentName) + '.' + String(propName) + '` only accepts components named ' + String(name));
  }

  return null;
}

function componentWithName(name) {
  if (typeof name !== 'string' && !(0, _isRegex2['default'])(name)) {
    throw new TypeError('name must be a string or a regex');
  }

  function componentWithNameValidator(props, propName, componentName) {
    var prop = props[propName];
    if (props[propName] == null) {
      return null;
    }

    for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    return hasName.apply(undefined, [name, prop, propName, componentName].concat(rest));
  }

  componentWithNameValidator.isRequired = function () {
    function componentWithNameRequired(props, propName, componentName) {
      var prop = props[propName];
      if (prop == null) {
        return new TypeError('`' + String(componentName) + '.' + String(propName) + '` requires at least one component named ' + String(name));
      }

      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
        rest[_key3 - 3] = arguments[_key3];
      }

      return hasName.apply(undefined, [name, prop, propName, componentName].concat(rest));
    }

    return componentWithNameRequired;
  }();

  return (0, _wrapValidator2['default'])(componentWithNameValidator, 'componentWithName:' + String(name), name);
}

});

unwrapExports(componentWithName_1);

var elementType = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = elementTypeValidator;





var _and2 = _interopRequireDefault(and);



var _getComponentName2 = _interopRequireDefault(getComponentName_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function getTypeName(Type) {
  if (typeof Type === 'string') {
    return Type;
  }
  var type = (0, _getComponentName2['default'])(Type);

  /* istanbul ignore next */ // in environments where functions do not have names
  return type || 'Anonymous Component';
}

function validateElementType(Type, props, propName, componentName) {
  var type = props[propName].type;


  if (type === Type) {
    return null;
  }

  return new TypeError(String(componentName) + '.' + String(propName) + ' must be a React element of type ' + String(getTypeName(Type)));
}

function elementTypeValidator(Type) {
  if (Type === '*') {
    return (0, _wrapValidator2['default'])(PropTypes.element, 'elementType(*)', Type);
  }

  if (typeof Type !== 'string' && typeof Type !== 'function') {
    throw new TypeError('Type must be a React Component, an HTML element tag name, or "*". Got an ' + (typeof Type === 'undefined' ? 'undefined' : _typeof(Type)));
  }

  function elementType(props, propName, componentName) {
    if (props[propName] == null) {
      return null;
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return validateElementType.apply(undefined, [Type, props, propName, componentName].concat(rest));
  }
  elementType.isRequired = elementType; // covered by and + element

  var typeName = getTypeName(Type);
  var validatorName = 'elementType(' + String(typeName) + ')';
  return (0, _wrapValidator2['default'])((0, _and2['default'])([PropTypes.element, elementType], validatorName), validatorName, Type);
}

});

unwrapExports(elementType);

var explicitNull_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function explicitNull(props, propName, componentName) {
  if (props[propName] == null) {
    return null;
  }
  return new TypeError(String(componentName) + ': prop \u201C' + String(propName) + '\u201D must be null or undefined; received ' + _typeof(props[propName]));
}
explicitNull.isRequired = function () {
  function explicitNullRequired(props, propName, componentName) {
    if (props[propName] === null) {
      return null;
    }
    return new TypeError(String(componentName) + ': prop \u201C' + String(propName) + '\u201D must be null; received ' + _typeof(props[propName]));
  }

  return explicitNullRequired;
}();

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(explicitNull, 'explicitNull');
};

});

unwrapExports(explicitNull_1);

var keysOf = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = keysOfValidator;



var _isPrimitive2 = _interopRequireDefault(isPrimitive_1);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function keysOfValidator(propType) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'keysOf';

  if (typeof propType !== 'function') {
    throw new TypeError('argument to keysOf must be a valid PropType function');
  }

  var validator = function () {
    function keysOf(props, propName, componentName, location, propFullName) {
      for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      var propValue = props[propName];

      if (propValue == null || (0, _isPrimitive2['default'])(propValue)) {
        return null;
      }

      var firstError = null;
      Object.keys(propValue).some(function (key) {
        firstError = propType.apply(undefined, [_defineProperty({}, key, key), key, componentName, location, '(' + String(propFullName) + ').' + String(key)].concat(rest));
        return firstError != null;
      });
      return firstError || null;
    }

    return keysOf;
  }();

  validator.isRequired = function () {
    function keyedByRequired(props, propName, componentName) {
      var propValue = props[propName];

      if (propValue == null) {
        return new TypeError(String(componentName) + ': ' + String(propName) + ' is required, but value is ' + String(propValue));
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return validator.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return keyedByRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, name, propType);
}

});

unwrapExports(keysOf);

var mutuallyExclusiveProps = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = mutuallyExclusiveOfType;



var _object2 = _interopRequireDefault(object_assign);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function mutuallyExclusiveOfType(propType) {
  if (typeof propType !== 'function') {
    throw new TypeError('a propType is required');
  }

  for (var _len = arguments.length, exclusiveProps = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    exclusiveProps[_key - 1] = arguments[_key];
  }

  if (exclusiveProps.length < 1) {
    throw new TypeError('at least one prop that is mutually exclusive with this propType is required');
  }

  var propList = exclusiveProps.join(', or ');

  var map = exclusiveProps.reduce(function (acc, prop) {
    return (0, _object2['default'])({}, acc, _defineProperty({}, prop, true));
  }, {});
  var countProps = function countProps(count, prop) {
    return count + (map[prop] ? 1 : 0);
  };

  var validator = function () {
    function mutuallyExclusiveProps(props, propName, componentName) {
      var exclusivePropCount = Object.keys(props).filter(function (prop) {
        return props[prop] != null;
      }).reduce(countProps, 0);
      if (exclusivePropCount > 1) {
        return new Error('A ' + String(componentName) + ' cannot have more than one of these props: ' + String(propList));
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return propType.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return mutuallyExclusiveProps;
  }();

  validator.isRequired = function () {
    function mutuallyExclusivePropsRequired(props, propName, componentName) {
      var exclusivePropCount = Object.keys(props).filter(function (prop) {
        return prop === propName || props[prop] != null;
      }).reduce(countProps, 0);
      if (exclusivePropCount > 1) {
        return new Error('A ' + String(componentName) + ' cannot have more than one of these props: ' + String(propList));
      }

      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
        rest[_key3 - 3] = arguments[_key3];
      }

      return propType.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return mutuallyExclusivePropsRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'mutuallyExclusiveProps:' + String(propList), exclusiveProps);
}

});

unwrapExports(mutuallyExclusiveProps);

var mutuallyExclusiveTrueProps = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = mutuallyExclusiveTrue;





var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function mutuallyExclusiveTrue() {
  for (var _len = arguments.length, exclusiveProps = Array(_len), _key = 0; _key < _len; _key++) {
    exclusiveProps[_key] = arguments[_key];
  }

  if (exclusiveProps.length < 1) {
    throw new TypeError('at least one prop that is mutually exclusive is required');
  }
  if (!exclusiveProps.every(function (x) {
    return typeof x === 'string';
  })) {
    throw new TypeError('all exclusive true props must be strings');
  }

  var propsList = exclusiveProps.join(', or ');

  var validator = function () {
    function mutuallyExclusiveTrueProps(props, propName, componentName) {
      var countProps = function () {
        function countProps(count, prop) {
          return count + (props[prop] ? 1 : 0);
        }

        return countProps;
      }();

      var exclusivePropCount = exclusiveProps.reduce(countProps, 0);
      if (exclusivePropCount > 1) {
        return new Error('A ' + String(componentName) + ' cannot have more than one of these boolean props be true: ' + String(propsList));
      }

      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      return PropTypes.bool.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return mutuallyExclusiveTrueProps;
  }();

  validator.isRequired = function () {
    function mutuallyExclusiveTruePropsRequired(props, propName, componentName) {
      var countProps = function () {
        function countProps(count, prop) {
          return count + (props[prop] ? 1 : 0);
        }

        return countProps;
      }();

      var exclusivePropCount = exclusiveProps.reduce(countProps, 0);
      if (exclusivePropCount > 1) {
        return new Error('A ' + String(componentName) + ' cannot have more than one of these boolean props be true: ' + String(propsList));
      }

      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
        rest[_key3 - 3] = arguments[_key3];
      }

      return PropTypes.bool.isRequired.apply(PropTypes.bool, [props, propName, componentName].concat(rest));
    }

    return mutuallyExclusiveTruePropsRequired;
  }();

  return (0, _wrapValidator2['default'])(validator, 'mutuallyExclusiveTrueProps: ' + String(propsList), exclusiveProps);
}

});

unwrapExports(mutuallyExclusiveTrueProps);

var nChildren_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = nChildren;



var _react2 = _interopRequireDefault(React);





var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function nChildren(n) {
  var propType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PropTypes.node;

  if (typeof n !== 'number' || isNaN(n) || n < 0) {
    throw new TypeError('a non-negative number is required');
  }

  var validator = function () {
    function nChildrenValidator(props, propName, componentName) {
      if (propName !== 'children') {
        return new TypeError(String(componentName) + ' is using the nChildren validator on a non-children prop');
      }

      var children = props.children;

      var childrenCount = _react2['default'].Children.count(children);

      if (childrenCount !== n) {
        return new RangeError(String(componentName) + ' expects to receive ' + String(n) + ' children, but received ' + String(childrenCount) + ' children.');
      }

      for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      return propType.apply(undefined, [props, propName, componentName].concat(rest));
    }

    return nChildrenValidator;
  }();
  validator.isRequired = validator;

  return (0, _wrapValidator2['default'])(validator, 'nChildren:' + String(n), n);
}

});

unwrapExports(nChildren_1);

var numericString = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});





var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var validNumericChars = /^[-+]?(?:[1-9][0-9]*(?:\.[0-9]+)?|0|0\.[0-9]+)$/;

var validator = function () {
  function numericString(props, propName, componentName) {
    if (props[propName] == null) {
      return null;
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    var stringError = PropTypes.string.apply(undefined, [props, propName, componentName].concat(rest));
    if (stringError) {
      return stringError;
    }

    var value = props[propName];

    var passesRegex = validNumericChars.test(value);
    if (passesRegex) {
      return null;
    }

    return new TypeError(String(componentName) + ': prop "' + String(propName) + '" (value "' + String(value) + '") must be a numeric string:\n    - starting with an optional + or -\n    - that does not have a leading zero\n    - with an optional decimal part (that contains only one decimal point, if present)\n    - that otherwise only contains digits (0-9)\n    - not +-NaN, or +-Infinity\n  ');
  }

  return numericString;
}();

validator.isRequired = function () {
  function numericStringRequired(props, propName, componentName) {
    if (props[propName] == null) {
      return new TypeError(String(componentName) + ': ' + String(propName) + ' is required');
    }

    for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    return validator.apply(undefined, [props, propName, componentName].concat(rest));
  }

  return numericStringRequired;
}();

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(validator, 'numericString');
};

});

unwrapExports(numericString);

var or_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = or;





var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function oneOfTypeValidator(validators) {
  var validator = function () {
    function oneOfType(props, propName, componentName) {
      for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      if (typeof props[propName] === 'undefined') {
        return null;
      }

      var errors = validators.map(function (v) {
        return v.apply(undefined, [props, propName, componentName].concat(rest));
      }).filter(Boolean);

      if (errors.length < validators.length) {
        return null;
      }
      return new TypeError(String(componentName) + ': invalid value supplied to ' + String(propName) + '.');
    }

    return oneOfType;
  }();
  validator.isRequired = function () {
    function oneOfTypeRequired(props, propName, componentName) {
      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      if (typeof props[propName] === 'undefined') {
        return new TypeError(String(componentName) + ': missing value for required ' + String(propName) + '.');
      }

      var errors = validators.map(function (v) {
        return v.apply(undefined, [props, propName, componentName].concat(rest));
      }).filter(Boolean);

      if (errors.length === validators.length) {
        return new TypeError(String(componentName) + ': invalid value ' + String(errors) + ' supplied to required ' + String(propName) + '.');
      }
      return null;
    }

    return oneOfTypeRequired;
  }();
  return (0, _wrapValidator2['default'])(validator, 'oneOfType', validators);
}

function or(validators) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'or';

  if (!Array.isArray(validators)) {
    throw new TypeError('or: 2 or more validators are required');
  }
  if (validators.length <= 1) {
    throw new RangeError('or: 2 or more validators are required');
  }

  var validator = oneOfTypeValidator([(0, PropTypes.arrayOf)(oneOfTypeValidator(validators))].concat(_toConsumableArray(validators)));

  return (0, _wrapValidator2['default'])(validator, name, validators);
}

});

unwrapExports(or_1);

var range_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = range;



var _and2 = _interopRequireDefault(and);



var _between2 = _interopRequireDefault(between);



var _integer2 = _interopRequireDefault(integer);



var _isInteger2 = _interopRequireDefault(isInteger);



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */Math.pow(2, 53) - 1;

function isValidLength(x) {
  return (0, _isInteger2['default'])(x) && Math.abs(x) < MAX_SAFE_INTEGER;
}

function range(min, max) {
  if (!isValidLength(min) || !isValidLength(max)) {
    throw new RangeError('"range" requires two integers: ' + String(min) + ' and ' + String(max) + ' given');
  }
  if (min === max) {
    throw new RangeError('min and max must not be the same');
  }
  return (0, _wrapValidator2['default'])((0, _and2['default'])([(0, _integer2['default'])(), (0, _between2['default'])({ gte: min, lt: max })], 'range'), 'range', { min: min, max: max });
}

});

unwrapExports(range_1);

var restrictedProp = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});



var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function customMessageWrapper(messsageFunction) {
  function restrictedProp(props, propName, componentName, location) {
    if (props[propName] == null) {
      return null;
    }

    if (messsageFunction && typeof messsageFunction === 'function') {
      for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return new TypeError(messsageFunction.apply(undefined, [props, propName, componentName, location].concat(rest)));
    }
    return new TypeError('The ' + String(propName) + ' ' + String(location) + ' on ' + String(componentName) + ' is not allowed.');
  }
  restrictedProp.isRequired = restrictedProp;
  return restrictedProp;
}

exports['default'] = function () {
  var messsageFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  return (0, _wrapValidator2['default'])(customMessageWrapper(messsageFunction), 'restrictedProp');
};

});

unwrapExports(restrictedProp);

var uniqueArray_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});





var _wrapValidator2 = _interopRequireDefault(wrapValidator_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function uniqueCountWithSet(arr) {
  return new Set(arr).size;
}
/* istanbul ignore next */
function uniqueCountLegacy(arr) {
  var seen = [];
  arr.forEach(function (item) {
    if (seen.indexOf(item) === -1) {
      seen.push(item);
    }
  });
  return seen.length;
}

var getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet : /* istanbul ignore next */uniqueCountLegacy;

function requiredUniqueArray(props, propName, componentName) {
  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  var result = PropTypes.array.isRequired.apply(PropTypes.array, [props, propName, componentName].concat(rest));
  if (result != null) {
    return result;
  }

  var propValue = props[propName];
  var uniqueCount = getUniqueCount(propValue);
  if (uniqueCount !== propValue.length) {
    return new RangeError(String(componentName) + ': values must be unique. ' + (propValue.length - uniqueCount) + ' duplicate values found.');
  }
  return null;
}

function uniqueArray(props, propName) {
  var propValue = props[propName];
  if (propValue == null) {
    return null;
  }

  for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
    rest[_key2 - 2] = arguments[_key2];
  }

  return requiredUniqueArray.apply(undefined, [props, propName].concat(rest));
}
uniqueArray.isRequired = requiredUniqueArray;

exports['default'] = function () {
  return (0, _wrapValidator2['default'])(uniqueArray, 'uniqueArray');
};

});

unwrapExports(uniqueArray_1);

var uniqueArrayOf = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = uniqueArrayOfTypeValidator;



var _object2 = _interopRequireDefault(object_assign);





var _and2 = _interopRequireDefault(and);



var _uniqueArray2 = _interopRequireDefault(uniqueArray_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var unique = (0, _uniqueArray2['default'])();

function uniqueArrayOfTypeValidator(type) {
  if (typeof type !== 'function') {
    throw new TypeError('type must be a validator function');
  }

  var mapper = null;
  var name = 'uniqueArrayOfType';

  if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 1) {
    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'function') {
      mapper = arguments.length <= 1 ? undefined : arguments[1];
    } else if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'string') {
      name = arguments.length <= 1 ? undefined : arguments[1];
    } else {
      throw new TypeError('single input must either be string or function');
    }
  } else if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 2) {
    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'function' && typeof (arguments.length <= 2 ? undefined : arguments[2]) === 'string') {
      mapper = arguments.length <= 1 ? undefined : arguments[1];
      name = arguments.length <= 2 ? undefined : arguments[2];
    } else {
      throw new TypeError('multiple inputs must be in [function, string] order');
    }
  } else if ((arguments.length <= 1 ? 0 : arguments.length - 1) > 2) {
    throw new TypeError('only [], [name], [mapper], and [mapper, name] are valid inputs');
  }

  function uniqueArrayOfMapped(props, propName) {
    var propValue = props[propName];
    if (propValue == null) {
      return null;
    }

    var values = propValue.map(mapper);

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    return unique.apply(undefined, [(0, _object2['default'])({}, props, _defineProperty({}, propName, values)), propName].concat(args));
  }

  uniqueArrayOfMapped.isRequired = function () {
    function isRequired(props, propName) {
      var propValue = props[propName];

      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      if (propValue == null) {
        return PropTypes.array.isRequired.apply(PropTypes.array, [props, propName].concat(args));
      }
      return uniqueArrayOfMapped.apply(undefined, [props, propName].concat(args));
    }

    return isRequired;
  }();

  var arrayValidator = (0, PropTypes.arrayOf)(type);

  var uniqueValidator = mapper ? uniqueArrayOfMapped : unique;

  var validator = (0, _and2['default'])([arrayValidator, uniqueValidator], name);
  validator.isRequired = (0, _and2['default'])([uniqueValidator.isRequired, arrayValidator.isRequired], String(name) + '.isRequired');

  return validator;
}

});

unwrapExports(uniqueArrayOf);

var build = createCommonjsModule(function (module) {
var _propTypesExact2 = _interopRequireDefault(build$1);



var _and2 = _interopRequireDefault(and);



var _between2 = _interopRequireDefault(between);



var _childrenHavePropXorChildren2 = _interopRequireDefault(childrenHavePropXorChildren_1);



var _childrenOf2 = _interopRequireDefault(childrenOf_1);



var _childrenOfType2 = _interopRequireDefault(childrenOfType_1);



var _childrenSequenceOf2 = _interopRequireDefault(childrenSequenceOf);



var _componentWithName2 = _interopRequireDefault(componentWithName_1);



var _elementType2 = _interopRequireDefault(elementType);



var _explicitNull2 = _interopRequireDefault(explicitNull_1);



var _integer2 = _interopRequireDefault(integer);



var _keysOf2 = _interopRequireDefault(keysOf);



var _mutuallyExclusiveProps2 = _interopRequireDefault(mutuallyExclusiveProps);



var _mutuallyExclusiveTrueProps2 = _interopRequireDefault(mutuallyExclusiveTrueProps);



var _nChildren2 = _interopRequireDefault(nChildren_1);



var _nonNegativeInteger2 = _interopRequireDefault(nonNegativeInteger);



var _nonNegativeNumber2 = _interopRequireDefault(nonNegativeNumber_1);



var _numericString2 = _interopRequireDefault(numericString);



var _object2 = _interopRequireDefault(object_1);



var _or2 = _interopRequireDefault(or_1);



var _range2 = _interopRequireDefault(range_1);



var _restrictedProp2 = _interopRequireDefault(restrictedProp);



var _sequenceOf2 = _interopRequireDefault(sequenceOf);



var _shape2 = _interopRequireDefault(shape);



var _uniqueArray2 = _interopRequireDefault(uniqueArray_1);



var _uniqueArrayOf2 = _interopRequireDefault(uniqueArrayOf);



var _valuesOf2 = _interopRequireDefault(valuesOf);



var _withShape2 = _interopRequireDefault(withShape_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

module.exports = {
  and: _and2['default'],
  between: _between2['default'],
  childrenHavePropXorChildren: _childrenHavePropXorChildren2['default'],
  childrenOf: _childrenOf2['default'],
  childrenOfType: _childrenOfType2['default'],
  childrenSequenceOf: _childrenSequenceOf2['default'],
  componentWithName: _componentWithName2['default'],
  elementType: _elementType2['default'],
  explicitNull: _explicitNull2['default'],
  forbidExtraProps: _propTypesExact2['default'],
  integer: _integer2['default'],
  keysOf: _keysOf2['default'],
  mutuallyExclusiveProps: _mutuallyExclusiveProps2['default'],
  mutuallyExclusiveTrueProps: _mutuallyExclusiveTrueProps2['default'],
  nChildren: _nChildren2['default'],
  nonNegativeInteger: _nonNegativeInteger2['default'],
  nonNegativeNumber: _nonNegativeNumber2['default'],
  numericString: _numericString2['default'],
  object: _object2['default'],
  or: _or2['default'],
  range: _range2['default'],
  restrictedProp: _restrictedProp2['default'],
  sequenceOf: _sequenceOf2['default'],
  shape: _shape2['default'],
  uniqueArray: _uniqueArray2['default'],
  uniqueArrayOf: _uniqueArrayOf2['default'],
  valuesOf: _valuesOf2['default'],
  withShape: _withShape2['default']
};

});

unwrapExports(build);

var airbnbPropTypes = process.env.NODE_ENV === 'production' ? mocks : build;



var airbnbPropTypes_1 = airbnbPropTypes.childrenOfType;

var asyncGenerator = function () {
  function AwaitValue(value) {
    this.value = value;
  }

  function AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;

        if (value instanceof AwaitValue) {
          Promise.resolve(value.value).then(function (arg) {
            resume("next", arg);
          }, function (arg) {
            resume("throw", arg);
          });
        } else {
          settle(result.done ? "return" : "normal", result.value);
        }
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({
            value: value,
            done: true
          });
          break;

        case "throw":
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  if (typeof Symbol === "function" && Symbol.asyncIterator) {
    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
      return this;
    };
  }

  AsyncGenerator.prototype.next = function (arg) {
    return this._invoke("next", arg);
  };

  AsyncGenerator.prototype.throw = function (arg) {
    return this._invoke("throw", arg);
  };

  AsyncGenerator.prototype.return = function (arg) {
    return this._invoke("return", arg);
  };

  return {
    wrap: function (fn) {
      return function () {
        return new AsyncGenerator(fn.apply(this, arguments));
      };
    },
    await: function (value) {
      return new AwaitValue(value);
    }
  };
}();





var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};









var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var safeRest = (function (_ref) {
  var style = _ref.style,
      className = _ref.className,
      props = objectWithoutProperties(_ref, ["style", "className"]);
  return props;
});

var styles = { "reset": "TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "horizontal": "TDS_HairlineDivider-modules__horizontal___3xoYd TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "vertical": "TDS_HairlineDivider-modules__vertical___3n_-f TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "horizontalThin": "TDS_HairlineDivider-modules__horizontalThin___ki3Nx TDS_HairlineDivider-modules__horizontal___3xoYd TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "horizontalGradient": "TDS_HairlineDivider-modules__horizontalGradient___1EGrk TDS_HairlineDivider-modules__horizontal___3xoYd TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "verticalThin": "TDS_HairlineDivider-modules__verticalThin___3NtRo TDS_HairlineDivider-modules__vertical___3n_-f TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs", "verticalGradient": "TDS_HairlineDivider-modules__verticalGradient___1Y5nX TDS_HairlineDivider-modules__vertical___3n_-f TDS_HairlineDivider-modules__reset___4ipFz TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs" };

var getClassName = function getClassName(vertical, gradient) {
  var hrClass = void 0;

  if (vertical && gradient) {
    hrClass = 'verticalGradient';
  } else if (vertical && !gradient) {
    hrClass = 'verticalThin';
  } else if (!vertical && gradient) {
    hrClass = 'horizontalGradient';
  } else {
    hrClass = 'horizontalThin';
  }

  return hrClass;
};

/**
 * Separate content within modules.
 */
var HairlineDivider = function HairlineDivider(_ref) {
  var vertical = _ref.vertical,
      gradient = _ref.gradient,
      rest = objectWithoutProperties(_ref, ['vertical', 'gradient']);
  return React.createElement('hr', _extends({}, safeRest(rest), { className: styles[getClassName(vertical, gradient)] }));
};

HairlineDivider.propTypes = {
  /**
   * Draw the divider vertically.
   */
  vertical: PropTypes.bool,
  /**
   * Use a subtle gradient instead of a solid thin line.
   */
  gradient: PropTypes.bool
};

HairlineDivider.defaultProps = {
  vertical: false,
  gradient: false
};

var joinClassNames = function joinClassNames() {
  for (var _len = arguments.length, classes = Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }

  return classes.filter(function (className) {
    return className;
  }).join(' ');
};

var capitalize = function capitalize(string) {
  return "" + string.charAt(0).toUpperCase() + string.slice(1);
};

var styles$1 = { "inline": "TDS_Box-modules__inline___EvQhX", "stack": "TDS_Box-modules__stack___kEY4Y", "verticalPadding-1": "TDS_Box-modules__verticalPadding-1___3yVMK", "horizontalPadding-1": "TDS_Box-modules__horizontalPadding-1___2038P", "bottomMargin-1": "TDS_Box-modules__bottomMargin-1___6fRvj", "betweenBottomMargin-1": "TDS_Box-modules__betweenBottomMargin-1___3Ikp6", "betweenRightMargin-1": "TDS_Box-modules__betweenRightMargin-1___1ET5E", "verticalPadding-2": "TDS_Box-modules__verticalPadding-2___2DGIc", "horizontalPadding-2": "TDS_Box-modules__horizontalPadding-2___Am1sG", "bottomMargin-2": "TDS_Box-modules__bottomMargin-2___3bAsY", "betweenBottomMargin-2": "TDS_Box-modules__betweenBottomMargin-2___2nY1g", "betweenRightMargin-2": "TDS_Box-modules__betweenRightMargin-2___QLXCv", "verticalPadding-3": "TDS_Box-modules__verticalPadding-3___2Jn0I", "horizontalPadding-3": "TDS_Box-modules__horizontalPadding-3___1QMrv", "bottomMargin-3": "TDS_Box-modules__bottomMargin-3___2eZVV", "betweenBottomMargin-3": "TDS_Box-modules__betweenBottomMargin-3___3C9_L", "betweenRightMargin-3": "TDS_Box-modules__betweenRightMargin-3___2CrF-", "verticalPadding-4": "TDS_Box-modules__verticalPadding-4___37cns", "horizontalPadding-4": "TDS_Box-modules__horizontalPadding-4___3IqVv", "bottomMargin-4": "TDS_Box-modules__bottomMargin-4___3k4ZC", "betweenBottomMargin-4": "TDS_Box-modules__betweenBottomMargin-4___hHzmg", "betweenRightMargin-4": "TDS_Box-modules__betweenRightMargin-4___wQ0GB", "verticalPadding-5": "TDS_Box-modules__verticalPadding-5___3MZPx", "horizontalPadding-5": "TDS_Box-modules__horizontalPadding-5___twNeE", "bottomMargin-5": "TDS_Box-modules__bottomMargin-5___35uRV", "betweenBottomMargin-5": "TDS_Box-modules__betweenBottomMargin-5___1NcBW", "betweenRightMargin-5": "TDS_Box-modules__betweenRightMargin-5___1lrkj", "verticalPadding-6": "TDS_Box-modules__verticalPadding-6___2dvc2", "horizontalPadding-6": "TDS_Box-modules__horizontalPadding-6___1J2_S", "bottomMargin-6": "TDS_Box-modules__bottomMargin-6___1ESUH", "betweenBottomMargin-6": "TDS_Box-modules__betweenBottomMargin-6___129_o", "betweenRightMargin-6": "TDS_Box-modules__betweenRightMargin-6___3DL06", "verticalPadding-7": "TDS_Box-modules__verticalPadding-7___14kCl", "horizontalPadding-7": "TDS_Box-modules__horizontalPadding-7___vWLpE", "bottomMargin-7": "TDS_Box-modules__bottomMargin-7___N5wLf", "betweenBottomMargin-7": "TDS_Box-modules__betweenBottomMargin-7___i5zjF", "betweenRightMargin-7": "TDS_Box-modules__betweenRightMargin-7___1fq0D", "verticalPadding-8": "TDS_Box-modules__verticalPadding-8___3__5F", "horizontalPadding-8": "TDS_Box-modules__horizontalPadding-8___1xefr", "bottomMargin-8": "TDS_Box-modules__bottomMargin-8___1Mmsz", "betweenBottomMargin-8": "TDS_Box-modules__betweenBottomMargin-8___2gpbV", "betweenRightMargin-8": "TDS_Box-modules__betweenRightMargin-8___12wuP" };

var getClassName$1 = function getClassName(spacing, location, scale) {
  if (!scale) {
    return undefined;
  }
  return styles$1['' + location + capitalize(spacing) + '-' + scale];
};

var getBetweenClasses = function getBetweenClasses(scale, inline) {
  if (!scale) {
    return undefined;
  }

  var direction = inline ? 'Right' : 'Bottom';
  return joinClassNames(styles$1['between' + direction + 'Margin-' + scale], inline ? styles$1.inline : styles$1.stack);
};

/**
 * Apply spacing within or around components.
 */
var Box = function Box(_ref) {
  var tag = _ref.tag,
      vertical = _ref.vertical,
      horizontal = _ref.horizontal,
      inset = _ref.inset,
      below = _ref.below,
      between = _ref.between,
      inline = _ref.inline,
      dangerouslyAddClassName = _ref.dangerouslyAddClassName,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['tag', 'vertical', 'horizontal', 'inset', 'below', 'between', 'inline', 'dangerouslyAddClassName', 'children']);

  var xSize = inset || horizontal;
  var ySize = inset || vertical;

  var classes = joinClassNames(getClassName$1('padding', 'horizontal', xSize), getClassName$1('padding', 'vertical', ySize), getClassName$1('margin', 'bottom', below), getBetweenClasses(between, inline), dangerouslyAddClassName);

  return React.createElement(tag, _extends({}, safeRest(rest), { className: classes }), children);
};

Box.propTypes = {
  /**
   * Specify an HTML element to render, such as `section`.
   */
  tag: PropTypes.string,
  /**
   * Indent content from the container's top and bottom edge by applying padding.
   */
  vertical: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8]),
  /**
   * Indent content from the container's left and right edge by applying padding.
   */
  horizontal: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8]),
  /**
   * Indent content from all of the container's edges by applying padding.
   */
  inset: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8]),
  /**
   * @ignore
   *
   * We are keeping this hidden for now as we are not sold on the necessity. We use it internally still to apply
   * spacing to Markdown components, but would like to use between instead if the library allows it.
   *
   * Sets a `margin-bottom`.
   */
  below: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8]),
  /**
   * Create either a block or an inline stack, applying margin in between every direct child. Margin will not be
   * applied to the last component in the stack.
   *
   * By default, `between` will arrange the Box's children as a flex column. Combine with `inline` to arrange them
   * as a flex row.
   */
  between: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8]),
  /**
   * Arrange children in a row. Combine with `between` to apply margins in between the row's elements.
   */
  inline: PropTypes.bool,
  /**
   * Append custom classes to `className`. Use sparingly, and do not attempt to override Box style properties as that
   * may cause unexpected behaviour.
   *
   * You would typically use this feature to apply flex alignment properties in combination with `between`.
   */
  dangerouslyAddClassName: PropTypes.string,
  /**
   * The content. Can be text, any HTML element, or any component.
   */
  children: PropTypes.node.isRequired
};

Box.defaultProps = {
  inline: false,
  tag: 'div',
  vertical: undefined,
  horizontal: undefined,
  inset: undefined,
  below: undefined,
  between: undefined,
  dangerouslyAddClassName: undefined
};

var styles$2 = { "clickable": "TDS_Clickable-modules__clickable___1rNEb TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs TDS_Forms-modules__font___sDGt2 TDS_Text-modules__color___Qi2FL" };

/**
 * An invisible button.
 */
var Clickable = function Clickable(_ref) {
  var dangerouslyAddClassName = _ref.dangerouslyAddClassName,
      dangerouslyAddStyle = _ref.dangerouslyAddStyle,
      children = _ref.children,
      type = _ref.type,
      rest = objectWithoutProperties(_ref, ['dangerouslyAddClassName', 'dangerouslyAddStyle', 'children', 'type']);
  return React.createElement(
    'button',
    _extends({}, safeRest(rest), {
      className: joinClassNames(styles$2.clickable, dangerouslyAddClassName),
      style: dangerouslyAddStyle,
      type: type
    }),
    children
  );
};

Clickable.propTypes = {
  dangerouslyAddClassName: PropTypes.string,
  dangerouslyAddStyle: PropTypes.object,
  children: PropTypes.node.isRequired,
  type: PropTypes.oneOf(['submit', 'reset', 'button'])
};

Clickable.defaultProps = {
  dangerouslyAddClassName: undefined,
  dangerouslyAddStyle: undefined,
  type: 'button'
};

var styles$3 = { "primary": "TDS_Icon-modules__primary___12Q8Z", "secondary": "TDS_Icon-modules__secondary___1iTzW", "inverted": "TDS_Icon-modules__inverted___1FJV1", "error": "TDS_Icon-modules__error___2JBU1", "size16": "TDS_Icon-modules__size16___1mnxw", "size24": "TDS_Icon-modules__size24___3_Q8g", "size48": "TDS_Icon-modules__size48___3LGzS", "icon": "TDS_Icon-modules__icon___1N3Oq", "iconCaretDown": "TDS_Icon-modules__iconCaretDown___YKkG2 TDS_Icon-modules__icon___1N3Oq", "iconCaretUp": "TDS_Icon-modules__iconCaretUp___3xWww TDS_Icon-modules__icon___1N3Oq", "iconCheckmark": "TDS_Icon-modules__iconCheckmark___3Eihn TDS_Icon-modules__icon___1N3Oq", "iconChevron": "TDS_Icon-modules__iconChevron___m4qBV TDS_Icon-modules__icon___1N3Oq", "iconLeftChevron": "TDS_Icon-modules__iconLeftChevron___NTmK1 TDS_Icon-modules__icon___1N3Oq", "iconExclamationPointCircle": "TDS_Icon-modules__iconExclamationPointCircle___3HaLl TDS_Icon-modules__icon___1N3Oq", "iconExpander": "TDS_Icon-modules__iconExpander___3XNv_ TDS_Icon-modules__icon___1N3Oq", "iconHamburger": "TDS_Icon-modules__iconHamburger___ap7hb TDS_Icon-modules__icon___1N3Oq", "iconLocation": "TDS_Icon-modules__iconLocation___21eHl TDS_Icon-modules__icon___1N3Oq", "iconMinus": "TDS_Icon-modules__iconMinus___I6bHo TDS_Icon-modules__icon___1N3Oq", "iconPlus": "TDS_Icon-modules__iconPlus___1LuGX TDS_Icon-modules__icon___1N3Oq", "iconQuestionMarkCircle": "TDS_Icon-modules__iconQuestionMarkCircle___3YAM2 TDS_Icon-modules__icon___1N3Oq", "iconSpyglass": "TDS_Icon-modules__iconSpyglass___3Ebmy TDS_Icon-modules__icon___1N3Oq", "iconTimes": "TDS_Icon-modules__iconTimes___3KkqY TDS_Icon-modules__icon___1N3Oq" };

var Icon = function Icon(_ref) {
  var symbol = _ref.symbol,
      variant = _ref.variant,
      size = _ref.size,
      rest = objectWithoutProperties(_ref, ['symbol', 'variant', 'size']);

  var classes = joinClassNames(styles$3['icon' + capitalize(symbol)], variant && styles$3[variant], size && styles$3['size' + size]);

  return React.createElement('i', _extends({}, safeRest(rest), { className: classes }));
};

Icon.propTypes = {
  symbol: PropTypes.oneOf(['caretDown', 'caretUp', 'checkmark', 'chevron', 'leftChevron', 'exclamationPointCircle', 'expander', 'hamburger', 'location', 'minus', 'plus', 'questionMarkCircle', 'spyglass', 'times']).isRequired,
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted', 'error']),
  size: PropTypes.oneOf([16, 24, 48])
};

Icon.defaultProps = {
  variant: undefined,
  size: 24
};

/**
 * An icon used for visual aesthetics only.
 */
var DecorativeIcon = function DecorativeIcon(_ref) {
  var symbol = _ref.symbol,
      variant = _ref.variant,
      size = _ref.size,
      rest = objectWithoutProperties(_ref, ['symbol', 'variant', 'size']);
  return React.createElement(Icon, _extends({}, rest, { symbol: symbol, variant: variant, size: size, 'aria-hidden': 'true' }));
};

DecorativeIcon.propTypes = {
  /**
   * Name of the icon symbol.
   */
  symbol: PropTypes.oneOf(['caretDown', 'caretUp', 'checkmark', 'chevron', 'leftChevron', 'exclamationPointCircle', 'expander', 'hamburger', 'location', 'minus', 'plus', 'questionMarkCircle', 'spyglass', 'times']).isRequired,
  /**
   * The appearance of the Icon.
   */
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted', 'error']),
  /**
   * The icon size in pixels.
   */
  size: PropTypes.oneOf([16, 24, 48])
};

DecorativeIcon.defaultProps = {
  variant: undefined,
  size: 24
};

var styles$4 = { "baseSupSubScripts": "TDS_Text-modules__baseSupSubScripts___15T2e", "sup": "TDS_Text-modules__sup___219VQ TDS_Text-modules__baseSupSubScripts___15T2e", "base": "TDS_Text-modules__base___33Ovn TDS_Typography-modules__wordBreak___21QZr", "baseFont": "TDS_Text-modules__baseFont___38FrE", "small": "TDS_Text-modules__small___1dBv2 TDS_Typography-modules__wordBreak___21QZr", "smallFont": "TDS_Text-modules__smallFont___UE2T-", "medium": "TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr", "mediumFont": "TDS_Text-modules__mediumFont___1V1x7", "large": "TDS_Text-modules__large___2SjSx TDS_Typography-modules__wordBreak___21QZr", "largeFont": "TDS_Text-modules__largeFont___Zjw0R TDS_Typography-modules__wordBreak___21QZr", "boldFont": "TDS_Text-modules__boldFont___1MJn- TDS_Typography-modules__wordBreak___21QZr", "color": "TDS_Text-modules__color___Qi2FL", "invertedColor": "TDS_Text-modules__invertedColor___2byCp", "inheritColor": "TDS_Text-modules__inheritColor___2sk6H" };

/**
 * Superscript text an as HTML `<sup>` element.
 *
 * _This component can only be accessed as a name-spaced component: `Text.Sup`._
 */
var TextSup = function TextSup(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'sup',
    _extends({}, safeRest(rest), { className: styles$4.sup }),
    children
  );
};

TextSup.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.node.isRequired
};

TextSup.displayName = 'Text.Sup';

/**
 * Inline text as an HTML `<span>` element.
 */
var Text = function Text(_ref, context) {
  var block = _ref.block,
      bold = _ref.bold,
      size = _ref.size,
      invert = _ref.invert,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['block', 'bold', 'size', 'invert', 'children']);

  var textColor = invert ? styles$4.invertedColor : styles$4.color;

  var classes = joinClassNames(styles$4[size], bold ? styles$4.boldFont : styles$4[size + 'Font'], context.inheritColor ? styles$4.inheritColor : textColor);

  return React.createElement(block ? 'div' : 'span', _extends({}, safeRest(rest), {
    className: classes
  }), children);
};

Text.propTypes = {
  /**
   * If true, renders a block level element.
   * Otherwise, renders an inline element.
   */
  block: PropTypes.bool,
  /**
   * Embolden text without conveying any special importance or relevance.
   */
  bold: PropTypes.bool,
  /**
   * The font size.
   */
  size: PropTypes.oneOf(['base', 'small', 'medium', 'large']),
  /**
   * Invert the text color to appear light on dark backgrounds.
   */
  invert: PropTypes.bool,
  /**
   * The content. Can be text, other components, or HTML elements.
   */
  children: PropTypes.node.isRequired
};

Text.defaultProps = {
  block: false,
  bold: false,
  size: 'base',
  invert: false
};

Text.contextTypes = {
  inheritColor: PropTypes.bool
};

Text.Sup = TextSup;

var styles$5 = { "dimple": "TDS_DimpleDivider-modules__dimple___3fxkf TDS_Spacing-modules__noSpacing___4r12n TDS_Borders-modules__none___uTgzs" };

/**
 * Separate modules.
 */
var DimpleDivider = function DimpleDivider(_ref) {
  var rest = objectWithoutProperties(_ref, []);
  return React.createElement('hr', _extends({}, safeRest(rest), { className: styles$5.dimple }));
};

var hasClass_1 = createCommonjsModule(function (module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hasClass;
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + element.className + " ").indexOf(" " + className + " ") !== -1;
}
module.exports = exports["default"];
});

unwrapExports(hasClass_1);

var addClass_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addClass;



var _hasClass2 = _interopRequireDefault(hasClass_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;
}
module.exports = exports['default'];
});

unwrapExports(addClass_1);

'use strict';

var removeClass = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
};

var PropTypes$1 = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = undefined;
exports.transitionTimeout = transitionTimeout;



var _propTypes2 = _interopRequireDefault(PropTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;

  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

        // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({
  enter: _propTypes2.default.number,
  exit: _propTypes2.default.number
}).isRequired]);

var classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  exit: _propTypes2.default.string,
  active: _propTypes2.default.string
}), _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  enterActive: _propTypes2.default.string,
  exit: _propTypes2.default.string,
  exitActive: _propTypes2.default.string
})]);
});

unwrapExports(PropTypes$1);

var Transition_1 = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;
exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;



var PropTypes$$2 = _interopRequireWildcard(PropTypes);



var _react2 = _interopRequireDefault(React);



var _reactDom2 = _interopRequireDefault(reactDom);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UNMOUNTED = exports.UNMOUNTED = 'unmounted';
var EXITED = exports.EXITED = 'exited';
var ENTERING = exports.ENTERING = 'entering';
var ENTERED = exports.ENTERED = 'entered';
var EXITING = exports.EXITING = 'exiting';

/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the components.
 * It's up to you to give meaning and effect to those states. For example we can
 * add styles to a component when it enters or exits:
 *
 * ```jsx
 * import Transition from 'react-transition-group/Transition';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {(state) => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm A fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
 * What it does do is track transition states over time so you can update the
 * component (such as by adding styles or classes) when it changes states.
 *
 * There are 4 main states a Transition can be in:
 *  - `ENTERING`
 *  - `ENTERED`
 *  - `EXITING`
 *  - `EXITED`
 *
 * Transition state is toggled via the `in` prop. When `true` the component begins the
 * "Enter" stage. During this stage, the component will shift from its current transition state,
 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
 * it's complete. Let's take the following example:
 *
 * ```jsx
 * state= { in: false };
 *
 * toggleEnterState = () => {
 *   this.setState({ in: true });
 * }
 *
 * render() {
 *   return (
 *     <div>
 *       <Transition in={this.state.in} timeout={500} />
 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state and
 * stay there for 500ms (the value of `timeout`) when finally switches to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
 */

var Transition = function (_React$Component) {
  _inherits(Transition, _React$Component);

  function Transition(props, context) {
    _classCallCheck(this, Transition);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    var parentGroup = context.transitionGroup;
    // In the context of a TransitionGroup all enters are really appears
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;

    var initialStatus = void 0;
    _this.nextStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.nextStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = { status: initialStatus };

    _this.nextCallback = null;
    return _this;
  }

  Transition.prototype.getChildContext = function getChildContext() {
    return { transitionGroup: null }; // allows for nested Transitions
  };

  Transition.prototype.componentDidMount = function componentDidMount() {
    this.updateStatus(true);
  };

  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _ref = this.pendingState || this.state,
        status = _ref.status;

    if (nextProps.in) {
      if (status === UNMOUNTED) {
        this.setState({ status: EXITED });
      }
      if (status !== ENTERING && status !== ENTERED) {
        this.nextStatus = ENTERING;
      }
    } else {
      if (status === ENTERING || status === ENTERED) {
        this.nextStatus = EXITING;
      }
    }
  };

  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
    this.updateStatus();
  };

  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  Transition.prototype.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;

    var exit = void 0,
        enter = void 0,
        appear = void 0;

    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter;
      appear = timeout.appear;
    }
    return { exit: exit, enter: enter, appear: appear };
  };

  Transition.prototype.updateStatus = function updateStatus() {
    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var nextStatus = this.nextStatus;

    if (nextStatus !== null) {
      this.nextStatus = null;
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();
      var node = _reactDom2.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({ status: UNMOUNTED });
    }
  };

  Transition.prototype.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;

    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;

    var timeouts = this.getTimeouts();

    // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set
    if (!mounting && !enter) {
      this.safeSetState({ status: ENTERED }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);

    this.safeSetState({ status: ENTERING }, function () {
      _this2.props.onEntering(node, appearing);

      // FIXME: appear timeout?
      _this2.onTransitionEnd(node, timeouts.enter, function () {
        _this2.safeSetState({ status: ENTERED }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  Transition.prototype.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;

    var timeouts = this.getTimeouts();

    // no exit animation skip right to EXITED
    if (!exit) {
      this.safeSetState({ status: EXITED }, function () {
        _this3.props.onExited(node);
      });
      return;
    }
    this.props.onExit(node);

    this.safeSetState({ status: EXITING }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({ status: EXITED }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
    var _this4 = this;

    // We need to track pending updates for instances where a cWRP fires quickly
    // after cDM and before the state flushes, which would double trigger a
    // transition
    this.pendingState = nextState;

    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, function () {
      _this4.pendingState = null;
      callback();
    });
  };

  Transition.prototype.setNextCallback = function setNextCallback(callback) {
    var _this5 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this5.nextCallback = null;

        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);

    if (node) {
      if (this.props.addEndListener) {
        this.props.addEndListener(node, this.nextCallback);
      }
      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    } else {
      setTimeout(this.nextCallback, 0);
    }
  };

  Transition.prototype.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }

    var _props = this.props,
        children = _props.children,
        childProps = _objectWithoutProperties(_props, ['children']);
    // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react2.default.Children.only(children);
    return _react2.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react2.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes$$2.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};


Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A `function` child can be used instead of a React element.
   * This function is called with the current transition status
   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can used
   * to apply context specific props to a component.
   *
   * ```jsx
   * <Transition timeout={150}>
   *   {(status) => (
   *     <MyComponent className={`fade fade-${status}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes$$2.oneOfType([PropTypes$$2.func.isRequired, PropTypes$$2.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes$$2.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes$$2.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes$$2.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes$$2.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes$$2.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes$$2.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEventListener` is provided
   *
   * You may specify a single timeout for all transitions like: `timeout={500}`,
   * or individually like:
   *
   * ```jsx
   * timeout={{
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * @type {number | { enter?: number, exit?: number }}
   */
  timeout: function timeout(props) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var pt = PropTypes$1.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;
    return pt.apply(undefined, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes$$2.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes$$2.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$$2.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes$$2.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes$$2.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes$$2.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes$$2.func
} : {};

// Name the function so it is clearer in the documentation
function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,

  onEnter: noop,
  onEntering: noop,
  onEntered: noop,

  onExit: noop,
  onExiting: noop,
  onExited: noop
};

Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

exports.default = Transition;
});

unwrapExports(Transition_1);

var CSSTransition_1 = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var PropTypes$$2 = _interopRequireWildcard(PropTypes);



var _addClass2 = _interopRequireDefault(addClass_1);



var _removeClass2 = _interopRequireDefault(removeClass);



var _react2 = _interopRequireDefault(React);



var _Transition2 = _interopRequireDefault(Transition_1);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addClass = function addClass(node, classes) {
  return classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass2.default)(node, c);
  });
};
var removeClass$$1 = function removeClass$$1(node, classes) {
  return classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass2.default)(node, c);
  });
};

var propTypes = _extends({}, _Transition2.default.propTypes, {

  /**
   * The animation classNames applied to the component as it enters or exits.
   * A single name can be provided and it will be suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
   * `fade-exit`, `fade-exit-active`, `fade-appear`, and `fade-appear-active`.
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   * }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  exit?: string,
   *  exitActive?: string,
   * }}
   */
  classNames: PropTypes$1.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes$$2.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$$2.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** from the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes$$2.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes$$2.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement
   */
  onExiting: PropTypes$$2.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** from the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes$$2.func
});

/**
 * A `Transition` component using CSS transitions and animations.
 * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` stages of the transition. The first class is applied and then a
 * second "active" class in order to activate the css animation.
 *
 * When the `in` prop is toggled to `true` the Component will get
 * the `example-enter` CSS class and the `example-enter-active` CSS class
 * added in the next tick. This is a convention based on the `classNames` prop.
 *
 * ```js
 * import CSSTransition from 'react-transition-group/CSSTransition';
 *
 * const Fade = ({ children, ...props }) => (
 *  <CSSTransition
 *    {...props}
 *    timeout={500}
 *    classNames="fade"
 *  >
 *   {children}
 *  </CSSTransition>
 * );
 *
 * class FadeInAndOut extends React.Component {
 *   constructor(...args) {
 *     super(...args);
 *     this.state= { show: false }
 *
 *     setInterval(() => {
 *       this.setState({ show: !this.state.show })
 *     }, 5000)
 *   }
 *   render() {
 *     return (
 *       <Fade in={this.state.show}>
 *         <div>Hello world</div>
 *       </Fade>
 *     )
 *   }
 * }
 * ```
 *
 * And the coorresponding CSS for the `<Fade>` component:
 *
 * ```css
 * .fade-enter {
 *   opacity: 0.01;
 * }
 *
 * .fade-enter.fade-enter-active {
 *   opacity: 1;
 *   transition: opacity 500ms ease-in;
 * }
 *
 * .fade-exit {
 *   opacity: 1;
 * }
 *
 * .fade-exit.fade-exit-active {
 *   opacity: 0.01;
 *   transition: opacity 300ms ease-in;
 * }
 * ```
 */

var CSSTransition = function (_React$Component) {
  _inherits(CSSTransition, _React$Component);

  function CSSTransition() {
    var _temp, _this, _ret;

    _classCallCheck(this, CSSTransition);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');
      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node);
      }
    }, _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node);
      }
    }, _this.onEntered = function (node, appearing) {
      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      if (_this.props.onEntered) {
        _this.props.onEntered(node);
      }
    }, _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');
      _this.removeClasses(node, 'enter');
      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    }, _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    }, _this.onExited = function (node) {
      _this.removeClasses(node, 'exit');

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    }, _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;


      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;

      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';

      return { className: className, activeClassName: activeClassName };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {
    var _getClassNames = this.getClassNames(type),
        className = _getClassNames.className,
        activeClassName = _getClassNames.activeClassName;

    className && removeClass$$1(node, className);
    activeClassName && removeClass$$1(node, activeClassName);
  };

  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    /* eslint-disable no-unused-expressions */
    node.scrollTop;
    /* eslint-enable no-unused-expressions */
    addClass(node, className);
  };

  CSSTransition.prototype.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;

    return _react2.default.createElement(_Transition2.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react2.default.Component);

CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};

exports.default = CSSTransition;
module.exports = exports['default'];
});

unwrapExports(CSSTransition_1);

var ChildMapping = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;



/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, React.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) React.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }

  // For each key of `next`, the list of keys to insert before that key in
  // the combined list
  var nextKeysPending = Object.create(null);

  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i = void 0;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }

  // Finally, add the keys which didn't appear before any key in `next`
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}
});

unwrapExports(ChildMapping);

var TransitionGroup_1 = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var _propTypes2 = _interopRequireDefault(PropTypes);



var _react2 = _interopRequireDefault(React);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var propTypes = {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   */
  component: _propTypes2.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   */
  children: _propTypes2.default.node,

  /**
   * A convenience prop that enables or disabled appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes2.default.bool,
  /**
   * A convenience prop that enables or disabled enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes2.default.bool,
  /**
    * A convenience prop that enables or disabled exit animations
    * for all children. Note that specifying this will override any defaults set
    * on individual children Transitions.
    */
  exit: _propTypes2.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes2.default.func
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};

/**
 * The `<TransitionGroup>` component manages a set of `<Transition>` components
 * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a
 * state machine for managing the mounting and unmounting of components over
 * time.
 *
 * Consider the example below using the `Fade` CSS transition from before.
 * As items are removed or added to the TodoList the `in` prop is toggled
 * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`
 * component in a `<TransitionGroup>`, not just css.
 *
 * ```jsx
 * import TransitionGroup from 'react-transition-group/TransitionGroup';
 *
 * class TodoList extends React.Component {
 *   constructor(props) {
 *     super(props)
 *     this.state = {items: ['hello', 'world', 'click', 'me']}
 *   }
 *   handleAdd() {
 *     const newItems = this.state.items.concat([
 *       prompt('Enter some text')
 *     ]);
 *     this.setState({ items: newItems });
 *   }
 *   handleRemove(i) {
 *     let newItems = this.state.items.slice();
 *     newItems.splice(i, 1);
 *     this.setState({items: newItems});
 *   }
 *   render() {
 *     return (
 *       <div>
 *         <button onClick={() => this.handleAdd()}>Add Item</button>
 *         <TransitionGroup>
 *           {this.state.items.map((item, i) => (
 *             <FadeTransition key={item}>
 *               <div>
 *                 {item}{' '}
 *                 <button onClick={() => this.handleRemove(i)}>
 *                   remove
 *                 </button>
 *               </div>
 *             </FadeTransition>
 *           ))}
 *         </TransitionGroup>
 *       </div>
 *     );
 *   }
 * }
 * ```
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual `<Transition>`
 * components. This means you can mix and match animations across different
 * list items.
 */

var TransitionGroup = function (_React$Component) {
  _inherits(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    _classCallCheck(this, TransitionGroup);

    // Initial children should all be entering, dependent on appear
    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    _this.handleExited = function (key, node, originalHandler) {
      var currentChildMapping = (0, ChildMapping.getChildMapping)(_this.props.children);

      if (key in currentChildMapping) return;

      if (originalHandler) originalHandler(node);

      _this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[key];
        return { children: children };
      });
    };

    _this.state = {
      children: (0, ChildMapping.getChildMapping)(props.children, function (child) {
        var onExited = function onExited(node) {
          _this.handleExited(child.key, node, child.props.onExited);
        };

        return (0, React.cloneElement)(child, {
          onExited: onExited,
          in: true,
          appear: _this.getProp(child, 'appear'),
          enter: _this.getProp(child, 'enter'),
          exit: _this.getProp(child, 'exit')
        });
      })
    };
    return _this;
  }

  TransitionGroup.prototype.getChildContext = function getChildContext() {
    return {
      transitionGroup: { isMounting: !this.appeared }
    };
  };
  // use child config unless explictly set by the Group


  TransitionGroup.prototype.getProp = function getProp(child, prop) {
    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;

    return props[prop] != null ? props[prop] : child.props[prop];
  };

  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    var prevChildMapping = this.state.children;
    var nextChildMapping = (0, ChildMapping.getChildMapping)(nextProps.children);

    var children = (0, ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);

    Object.keys(children).forEach(function (key) {
      var child = children[key];

      if (!(0, React.isValidElement)(child)) return;

      var onExited = function onExited(node) {
        _this2.handleExited(child.key, node, child.props.onExited);
      };

      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;

      var prevChild = prevChildMapping[key];
      var isLeaving = (0, React.isValidElement)(prevChild) && !prevChild.props.in;

      // item is new (entering)
      if (hasNext && (!hasPrev || isLeaving)) {
        // console.log('entering', key)
        children[key] = (0, React.cloneElement)(child, {
          onExited: onExited,
          in: true,
          exit: _this2.getProp(child, 'exit', nextProps),
          enter: _this2.getProp(child, 'enter', nextProps)
        });
      }
      // item is old (exiting)
      else if (!hasNext && hasPrev && !isLeaving) {
          // console.log('leaving', key)
          children[key] = (0, React.cloneElement)(child, { in: false });
        }
        // item hasn't changed transition states
        // copy over the last transition props;
        else if (hasNext && hasPrev && (0, React.isValidElement)(prevChild)) {
            // console.log('unchanged', key)
            children[key] = (0, React.cloneElement)(child, {
              onExited: onExited,
              in: prevChild.props.in,
              exit: _this2.getProp(child, 'exit', nextProps),
              enter: _this2.getProp(child, 'enter', nextProps)
            });
          }
    });

    this.setState({ children: children });
  };

  TransitionGroup.prototype.render = function render() {
    var _props = this.props,
        Component$$1 = _props.component,
        childFactory = _props.childFactory,
        props = _objectWithoutProperties(_props, ['component', 'childFactory']);

    var children = this.state.children;


    delete props.appear;
    delete props.enter;
    delete props.exit;

    return _react2.default.createElement(
      Component$$1,
      props,
      values(children).map(childFactory)
    );
  };

  return TransitionGroup;
}(_react2.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes2.default.object.isRequired
};


TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
TransitionGroup.defaultProps = defaultProps;

exports.default = TransitionGroup;
module.exports = exports['default'];
});

unwrapExports(TransitionGroup_1);

var reactTransitionGroup = createCommonjsModule(function (module) {
'use strict';



var _CSSTransition2 = _interopRequireDefault(CSSTransition_1);



var _TransitionGroup2 = _interopRequireDefault(TransitionGroup_1);



var _Transition2 = _interopRequireDefault(Transition_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition2.default,
  TransitionGroup: _TransitionGroup2.default,
  CSSTransition: _CSSTransition2.default
};
});

unwrapExports(reactTransitionGroup);
var reactTransitionGroup_1 = reactTransitionGroup.Transition;

var defaultStyle = function defaultStyle(duration, timeout) {
  return {
    transition: 'height ' + (duration || timeout) + 'ms',
    height: 0,
    overflow: 'hidden'
  };
};

var hiddenContent = {
  visibility: 'hidden'
};

var transitionStyles = function transitionStyles(height) {
  var styles = {
    height: height + 'px'
  };

  return {
    entering: styles,
    entered: { height: 'auto' },
    exiting: styles,
    exited: hiddenContent
  };
};

var Reveal = function Reveal(_ref) {
  var height = _ref.height,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['height', 'children']);
  return React.createElement(
    reactTransitionGroup_1,
    rest,
    function (status) {
      return React.createElement(
        'div',
        {
          style: _extends({}, defaultStyle(rest.duration, rest.timeout), transitionStyles(height)[status]),
          'aria-hidden': status === 'exited',
          'data-testid': 'childrenContainer'
        },
        children()
      );
    }
  );
};
Reveal.propTypes = {
  timeout: PropTypes.number.isRequired,
  duration: PropTypes.number,
  height: PropTypes.number.isRequired,
  children: PropTypes.func.isRequired
};

Reveal.defaultProps = {
  duration: undefined
};

var defaultStyle$1 = function defaultStyle(timeout) {
  return {
    transition: 'transform ' + timeout + 'ms'
  };
};

var transitionStyles$1 = function transitionStyles(direction, distance) {
  var styles = {
    transform: 'translate' + direction.toUpperCase() + '(' + distance + ')'
  };

  return {
    entering: styles,
    entered: styles
  };
};

var Translate = function Translate(_ref) {
  var direction = _ref.direction,
      distance = _ref.distance,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['direction', 'distance', 'children']);
  return React.createElement(
    reactTransitionGroup_1,
    rest,
    function (status) {
      return React.createElement(
        'div',
        {
          style: _extends({}, defaultStyle$1(rest.timeout), transitionStyles$1(direction, distance)[status])
        },
        children()
      );
    }
  );
};
Translate.propTypes = {
  timeout: PropTypes.number.isRequired,
  direction: PropTypes.oneOf(['x', 'y']).isRequired,
  distance: PropTypes.string.isRequired,
  children: PropTypes.func.isRequired
};

var styles$6 = { "column": "TDS_Flexbox-modules__column___Xu62p", "row": "TDS_Flexbox-modules__row___DL6tZ", "justifyContentSpaceBetween": "TDS_Flexbox-modules__justifyContentSpaceBetween___T4lr1" };

var Flexbox = function Flexbox(_ref) {
  var direction = _ref.direction,
      justifyContent = _ref.justifyContent,
      dangerouslyAddClassName = _ref.dangerouslyAddClassName,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['direction', 'justifyContent', 'dangerouslyAddClassName', 'children']);

  var classNames = joinClassNames(styles$6[direction], justifyContent && styles$6['justifyContent' + capitalize(justifyContent)], dangerouslyAddClassName);

  return React.createElement(
    'div',
    _extends({}, safeRest(rest), { className: classNames }),
    children
  );
};

Flexbox.propTypes = {
  direction: PropTypes.oneOf(['column', 'row']).isRequired,
  justifyContent: PropTypes.oneOf(['spaceBetween']),
  dangerouslyAddClassName: PropTypes.string,
  children: PropTypes.node.isRequired
};

Flexbox.defaultProps = {
  justifyContent: undefined,
  dangerouslyAddClassName: undefined
};

/* eslint-disable react/no-unused-prop-types */

/**
 * Expandable content areas for use with the `ExpandCollapse` or `Accordion`
 *
 * _This component can only be accessed as a name-spaced component: `ExpandCollapse.Panel` or `Accordion.Panel`._
 */
var Panel = function Panel(_ref) {
  var children = _ref.children;
  return React.createElement(
    'div',
    null,
    children
  );
};

Panel.propTypes = {
  /**
   * The identifier of the panel. Must be unique within the `ExpandCollapse` panels.
   */
  id: PropTypes.string.isRequired,
  /**
   * The title.
   */
  header: PropTypes.string.isRequired,
  /**
   * Optional subtext.
   */
  subtext: PropTypes.string,
  /**
   * Optional tertiary text. Will be displayed on the right side of the panel header.
   */
  tertiaryText: PropTypes.string,
  /**
   * Whether or not to disable the panel from being opened or closed.
   */
  disabled: PropTypes.bool,
  /**
   * A callback function to be invoked when the panel is opened or closed.
   *
   * @param {boolean} open Whether or not the panel is open or closed.
   */
  onToggle: PropTypes.func,
  /**
   * The content. Can be text, any HTML element, or any component.
   */
  children: PropTypes.node.isRequired
};

Panel.defaultProps = {
  subtext: undefined,
  tertiaryText: undefined,
  disabled: false,
  onToggle: undefined
};

var styles$7 = { "header": "TDS_PanelWrapper-modules__header___FTRSV", "headerAlign": "TDS_PanelWrapper-modules__headerAlign___3goa5", "disabled": "TDS_PanelWrapper-modules__disabled___1qhW7", "alignSelfFlexEnd": "TDS_PanelWrapper-modules__alignSelfFlexEnd___253Pz", "showFromMd": "TDS_PanelWrapper-modules__showFromMd___1BKSM", "showUntilMd": "TDS_PanelWrapper-modules__showUntilMd___jYrLT" };

var displayStyles = { "hide": "TDS_Display-modules__hide___2m-zT", "invisible": "TDS_Display-modules__invisible___s0Zuo" };

var PanelWrapper = function (_React$Component) {
  inherits(PanelWrapper, _React$Component);

  function PanelWrapper(props) {
    classCallCheck(this, PanelWrapper);

    var _this = possibleConstructorReturn(this, (PanelWrapper.__proto__ || Object.getPrototypeOf(PanelWrapper)).call(this, props));

    _this.state = {
      open: _this.props.open,
      hover: false,
      contentWrapperHeight: 0
    };

    _this.adjustContentHeight = function () {
      if (_this.contentWrapper.offsetHeight !== _this.state.contentWrapperHeight) {
        _this.setState({ contentWrapperHeight: _this.contentWrapper.offsetHeight });
      }
    };

    _this.mouseEnter = function () {
      _this.setState({ hover: true });
    };

    _this.mouseLeave = function () {
      _this.setState({ hover: false });
    };

    _this.renderCaret = function (disabled, hover, open) {
      return React.createElement(
        'div',
        { className: disabled ? displayStyles.invisible : undefined },
        React.createElement(
          Translate,
          { timeout: 300, 'in': hover, direction: 'y', distance: open ? '-0.25rem' : '0.25rem' },
          function () {
            return React.createElement(
              Text,
              { size: 'large' },
              React.createElement(DecorativeIcon, { symbol: open ? 'caretUp' : 'caretDown', variant: 'primary', size: 16 })
            );
          }
        )
      );
    };

    _this.renderHeader = function (header, subtext, tertiaryText) {
      return React.createElement(
        Flexbox,
        { direction: 'row', dangerouslyAddClassName: styles$7.headerAlign },
        React.createElement(
          Flexbox,
          { direction: 'column', dangerouslyAddClassName: styles$7.headerAlign },
          React.createElement(
            Text,
            { size: 'large' },
            header
          ),
          subtext && React.createElement(
            Text,
            { size: 'small' },
            subtext
          )
        ),
        tertiaryText && React.createElement(
          'span',
          { className: styles$7.alignSelfFlexEnd },
          React.createElement(
            'span',
            { className: styles$7.showFromMd },
            React.createElement(
              Text,
              { 'data-testid': 'tertiarytext', size: 'large' },
              tertiaryText
            )
          ),
          React.createElement(
            'span',
            { className: styles$7.showUntilMd },
            React.createElement(
              Text,
              { 'data-testid': 'tertiarytext', size: 'medium' },
              tertiaryText
            )
          )
        )
      );
    };

    _this.contentWrapper = null;
    return _this;
  }

  createClass(PanelWrapper, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.adjustContentHeight();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var panelOnToggle = this.props.panelOnToggle;


      if (this.state.open !== nextProps.open) {
        this.setState({ open: nextProps.open });

        if (panelOnToggle) {
          panelOnToggle(nextProps.open);
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.adjustContentHeight();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          panelId = _props.panelId,
          panelHeader = _props.panelHeader,
          panelSubtext = _props.panelSubtext,
          panelTertiaryText = _props.panelTertiaryText,
          panelDisabled = _props.panelDisabled,
          onClick = _props.onClick,
          children = _props.children;


      return React.createElement(
        'div',
        { 'data-testid': panelId },
        React.createElement(
          Clickable,
          {
            onClick: onClick,
            onMouseEnter: this.mouseEnter,
            onMouseLeave: this.mouseLeave,
            dangerouslyAddClassName: joinClassNames(styles$7.header, panelDisabled && styles$7.disabled),
            disabled: panelDisabled,
            'aria-expanded': this.state.open
          },
          React.createElement(
            Box,
            { vertical: 3 },
            React.createElement(
              Box,
              { inline: true, between: 3 },
              this.renderCaret(panelDisabled, this.state.hover, this.state.open),
              this.renderHeader(panelHeader, panelSubtext, panelTertiaryText)
            )
          )
        ),
        React.createElement(
          Reveal,
          {
            timeout: this.state.open ? 500 : 0,
            duration: 500,
            'in': this.state.open,
            height: this.state.contentWrapperHeight
          },
          function () {
            return React.createElement(
              'div',
              {
                ref: function ref(contentWrapper) {
                  _this2.contentWrapper = contentWrapper;
                },
                'data-testid': 'content'
              },
              React.createElement(DimpleDivider, null),
              React.createElement(
                Box,
                { inset: 4 },
                React.createElement(
                  Text,
                  { block: true },
                  children
                )
              )
            );
          }
        ),
        React.createElement(HairlineDivider, null)
      );
    }
  }]);
  return PanelWrapper;
}(React.Component);

PanelWrapper.propTypes = {
  panelId: PropTypes.string.isRequired,
  panelHeader: PropTypes.string.isRequired,
  panelSubtext: PropTypes.string,
  panelTertiaryText: PropTypes.string,
  panelOnToggle: PropTypes.func,
  panelDisabled: PropTypes.bool,
  open: PropTypes.bool,
  onClick: PropTypes.func.isRequired,
  children: airbnbPropTypes_1(Panel).isRequired
};

PanelWrapper.defaultProps = {
  panelSubtext: undefined,
  panelTertiaryText: undefined,
  panelDisabled: false,
  panelOnToggle: undefined,
  open: false
};

var styles$8 = { "base": "TDS_ExpandCollapse-modules__base___3yJTS" };

var Panels = function Panels(_ref) {
  var topDivider = _ref.topDivider,
      isPanelOpen = _ref.isPanelOpen,
      togglePanel = _ref.togglePanel,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['topDivider', 'isPanelOpen', 'togglePanel', 'children']);
  return React.createElement(
    'div',
    _extends({}, safeRest(rest), { className: styles$8.base }),
    topDivider && React.createElement(HairlineDivider, null),
    React.Children.toArray(children).filter(Boolean).map(function (panel) {
      var _panel$props = panel.props,
          id = _panel$props.id,
          header = _panel$props.header,
          subtext = _panel$props.subtext,
          tertiaryText = _panel$props.tertiaryText,
          disabled = _panel$props.disabled,
          onToggle = _panel$props.onToggle;


      return React.createElement(
        PanelWrapper,
        {
          key: id,
          panelId: id,
          panelHeader: header,
          panelSubtext: subtext,
          panelTertiaryText: tertiaryText,
          panelOnToggle: onToggle,
          panelDisabled: disabled,
          open: isPanelOpen(id),
          onClick: function onClick() {
            return togglePanel(id);
          }
        },
        panel
      );
    })
  );
};

Panels.propTypes = {
  topDivider: PropTypes.bool.isRequired,
  isPanelOpen: PropTypes.func.isRequired,
  togglePanel: PropTypes.func.isRequired,
  children: airbnbPropTypes_1(Panel).isRequired
};

/**
 * A specialized `ExpandCollapse` in which only one panel can be open at a time.
 */

var Accordion = function (_React$Component) {
  inherits(Accordion, _React$Component);

  function Accordion() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, Accordion);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      openPanel: _this.props.open
    }, _this.togglePanel = function (panelId) {
      var onToggle = _this.props.onToggle;


      _this.setState(function (_ref2) {
        var openPanel = _ref2.openPanel;

        return {
          openPanel: openPanel === panelId ? undefined : panelId
        };
      }, function () {
        if (onToggle) {
          onToggle(_this.state.openPanel);
        }
      });
    }, _this.isPanelOpen = function (panelId) {
      return _this.state.openPanel === panelId;
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(Accordion, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextPanel = nextProps.open;

      if (this.state.openPanel !== nextPanel) {
        this.setState({ openPanel: nextPanel });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          rest = objectWithoutProperties(_props, ['children']);


      return React.createElement(
        Panels,
        _extends({}, rest, { isPanelOpen: this.isPanelOpen, togglePanel: this.togglePanel }),
        children
      );
    }
  }]);
  return Accordion;
}(React.Component);

Accordion.propTypes = {
  /**
   * A panel identifier to programmatically open.
   */
  open: PropTypes.string,
  /**
   * Whether or not to show the divider above the first panel.
   */
  topDivider: PropTypes.bool,
  /**
   * A callback function to be invoked when any panel is opened or closed.
   *
   * @param {String} openPanel The currently open panel identifier.
   */
  onToggle: PropTypes.func,
  /**
   * The expandable panels. Must be at least one `Accordion.Panel`.
   */
  children: airbnbPropTypes_1(Panel).isRequired
};

Accordion.defaultProps = {
  open: undefined,
  topDivider: true,
  onToggle: undefined
};

Accordion.Panel = Panel;

/* eslint-disable import/prefer-default-export */



var warn = function warn(componentName, message) {
  if (process.env.NODE_ENV === 'production') {
    return;
  }

  console.warn('[TDS] ' + componentName + ': ' + message); // eslint-disable-line no-console
};

var styles$9 = { "base": "TDS_BaseButton-modules__base___3Xb72 TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__boldFont___1MJn- TDS_Typography-modules__wordBreak___21QZr TDS_Forms-modules__height___2059u TDS_Forms-modules__font___sDGt2", "sizing": "TDS_BaseButton-modules__sizing___1RQOJ TDS_BaseButton-modules__base___3Xb72 TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__boldFont___1MJn- TDS_Typography-modules__wordBreak___21QZr TDS_Forms-modules__height___2059u TDS_Forms-modules__font___sDGt2", "inline": "TDS_BaseButton-modules__inline___2nt0g", "primary": "TDS_BaseButton-modules__primary___2lXya", "secondary": "TDS_BaseButton-modules__secondary___3HqA_", "inverted": "TDS_BaseButton-modules__inverted___rkWof", "centered": "TDS_BaseButton-modules__centered___3Xkio TDS_Borders-modules__rounded___1M93U" };

/**
 * A common base for Button and ButtonLink.
 */
var BaseButton = function BaseButton(_ref) {
  var element = _ref.element,
      variant = _ref.variant,
      dangerouslyAddClassName = _ref.dangerouslyAddClassName,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['element', 'variant', 'dangerouslyAddClassName', 'children']);

  return React.createElement(element, _extends({}, safeRest(rest), {
    className: joinClassNames(styles$9.sizing, styles$9[variant], dangerouslyAddClassName)
  }), children);
};

BaseButton.propTypes = {
  element: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted']).isRequired,
  dangerouslyAddClassName: PropTypes.string,
  children: PropTypes.string.isRequired
};

BaseButton.defaultProps = {
  dangerouslyAddClassName: undefined
};

var preventDisabling = function preventDisabling(_ref) {
  var disabled = _ref.disabled,
      props = objectWithoutProperties(_ref, ['disabled']);

  if (disabled) {
    warn('Button', 'Buttons are not able to be disabled.');
  }

  return props;
};

var Button = function Button(_ref2) {
  var type = _ref2.type,
      variant = _ref2.variant,
      children = _ref2.children,
      rest = objectWithoutProperties(_ref2, ['type', 'variant', 'children']);

  var restNoDisabled = preventDisabling(rest);

  return React.createElement(
    BaseButton,
    _extends({}, safeRest(restNoDisabled), { element: 'button', variant: variant, type: type }),
    children
  );
};

Button.propTypes = {
  /**
   * The HTML button type.
   */
  type: PropTypes.oneOf(['button', 'submit', 'reset']),
  /**
   * The style.
   */
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted']),
  /**
   * The label.
   */
  children: PropTypes.string.isRequired
};
Button.defaultProps = {
  type: 'button',
  variant: 'primary'
};

var styles$10 = { "base": "TDS_ButtonLink-modules__base___1d_sX TDS_Links-modules__focusOutline___5sv7Y", "primary": "TDS_ButtonLink-modules__primary___1AKQu TDS_ButtonLink-modules__base___1d_sX TDS_Links-modules__focusOutline___5sv7Y", "secondary": "TDS_ButtonLink-modules__secondary___WLtX- TDS_ButtonLink-modules__base___1d_sX TDS_Links-modules__focusOutline___5sv7Y", "inverted": "TDS_ButtonLink-modules__inverted___3BH4R TDS_ButtonLink-modules__base___1d_sX TDS_Links-modules__focusOutline___5sv7Y" };

/**
 * A link that is styled as a button.
 */
var ButtonLink = function ButtonLink(_ref) {
  var reactRouterLinkComponent = _ref.reactRouterLinkComponent,
      variant = _ref.variant,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['reactRouterLinkComponent', 'variant', 'children']);

  if ((reactRouterLinkComponent || rest.to) && !(reactRouterLinkComponent && rest.to)) {
    warn('Link Button', 'The props `reactRouterLinkComponent` and `to` must be used together.');
  }

  return React.createElement(
    BaseButton,
    _extends({}, safeRest(rest), {
      element: reactRouterLinkComponent || 'a',
      variant: variant,
      dangerouslyAddClassName: styles$10[variant]
    }),
    children
  );
};

ButtonLink.propTypes = {
  /**
   * The style.
   */
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted']),
  /**
   * React Router Link component.
   */
  reactRouterLinkComponent: PropTypes.func,
  /**
   * Target URL (if using 'reactRouterLinkComponent')
   */
  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  /**
   * Target URL
   */
  href: PropTypes.string,
  /**
   * The label.
   */
  children: PropTypes.string.isRequired
};
ButtonLink.defaultProps = {
  variant: 'primary',
  reactRouterLinkComponent: null,
  to: null,
  href: null
};

var styles$11 = { "card": "TDS_Card-modules__card___gNIAz TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U", "white": "TDS_Card-modules__white___dbR-B TDS_Card-modules__card___gNIAz TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U", "lavender": "TDS_Card-modules__lavender___1Z68_ TDS_Card-modules__card___gNIAz TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U", "grey": "TDS_Card-modules__grey___hCW58 TDS_Card-modules__card___gNIAz TDS_Borders-modules__none___uTgzs TDS_Borders-modules__rounded___1M93U" };

/**
 * A content container.
 */
var Card = function Card(_ref) {
  var variant = _ref.variant,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['variant', 'children']);
  return React.createElement(
    Box,
    _extends({}, safeRest(rest), { horizontal: 4, vertical: 5, dangerouslyAddClassName: styles$11[variant] }),
    children
  );
};

Card.propTypes = {
  /**
   * The style.
   */
  variant: PropTypes.oneOf(['white', 'lavender', 'grey']),
  /**
   * The content. Can be text, any HTML element, or any component.
   */
  children: PropTypes.node.isRequired
};

Card.defaultProps = {
  variant: 'white'
};

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.5.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function (it) {
  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$1 = _global.document;
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function (it) {
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!_isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var _hide = _descriptors ? function (object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var _redefine = createCommonjsModule(function (module) {
var SRC = _uid('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

_core.inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === _global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    _hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    _hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});
});

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function (fn, that, length) {
  _aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // extend global
    if (target) _redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) _hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
_global.core = _core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
var _export = $export;

var toString$1 = {}.toString;

var _cof = function (it) {
  return toString$1.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// 7.1.13 ToObject(argument)

var _toObject = function (it) {
  return Object(_defined(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength

var min = Math.min;
var _toLength = function (it) {
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

// 7.2.2 IsArray(argument)

var _isArray = Array.isArray || function isArray(arg) {
  return _cof(arg) == 'Array';
};

var SHARED = '__core-js_shared__';
var store = _global[SHARED] || (_global[SHARED] = {});
var _shared = function (key) {
  return store[key] || (store[key] = {});
};

var _wks = createCommonjsModule(function (module) {
var store = _shared('wks');

var Symbol = _global.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

var SPECIES = _wks('species');

var _arraySpeciesConstructor = function (original) {
  var C;
  if (_isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;
    if (_isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)


var _arraySpeciesCreate = function (original, length) {
  return new (_arraySpeciesConstructor(original))(length);
};

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex





var _arrayMethods = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || _arraySpeciesCreate;
  return function ($this, callbackfn, that) {
    var O = _toObject($this);
    var self = _iobject(O);
    var f = _ctx(callbackfn, that, 3);
    var length = _toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = _wks('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});
var _addToUnscopables = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)

var $find = _arrayMethods(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
_export(_export.P + _export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
_addToUnscopables(KEY);

var find = _core.Array.find;

var sanitize = function sanitize(text) {
  return text.toLowerCase().replace(/ /g, '-').replace(/[^a-zA-Z0-9-]/g, '');
};

var generateId = function generateId() {
  for (var _len = arguments.length, choices = Array(_len), _key = 0; _key < _len; _key++) {
    choices[_key] = arguments[_key];
  }

  var id = sanitize(find(choices, function (choice) {
    return choice;
  }));

  return {
    identity: function identity() {
      return id;
    },
    postfix: function postfix(value) {
      return id + '_' + sanitize(value);
    }
  };
};

var typographyStyles = { "wordBreak": "TDS_Typography-modules__wordBreak___21QZr" };

var spacingStyles = { "noSpacing": "TDS_Spacing-modules__noSpacing___4r12n" };

var styles$12 = { "leftAlign": "TDS_Paragraph-modules__leftAlign___2-gGS", "centerAlign": "TDS_Paragraph-modules__centerAlign___l1hkp", "rightAlign": "TDS_Paragraph-modules__rightAlign___3sjNQ" };

/**
 * Block text as an HTML `<p>` element.
 */
var Paragraph = function Paragraph(_ref, context) {
  var bold = _ref.bold,
      size = _ref.size,
      align = _ref.align,
      invert = _ref.invert,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['bold', 'size', 'align', 'invert', 'children']);

  var paragraphColor = invert ? styles$4.invertedColor : styles$4.color;

  var classes = joinClassNames(typographyStyles.wordBreak, spacingStyles.noSpacing, context.inheritColor ? styles$4.inheritColor : paragraphColor, styles$4[size], bold ? styles$4.boldFont : styles$4[size + 'Font'], styles$12[align + 'Align']);

  return React.createElement(
    'p',
    _extends({}, safeRest(rest), { className: classes }),
    children
  );
};

Paragraph.propTypes = {
  /**
   * Embolden paragraph text without conveying any special importance or relevance.
   */
  bold: PropTypes.bool,
  /**
   * The font size.
   */
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  /**
   * Content alignment.
   */
  align: PropTypes.oneOf(['left', 'center', 'right']),
  /**
   * Invert the text color to appear light on dark backgrounds.
   */
  invert: PropTypes.bool,
  /**
   * The content. Can be text, other components, or HTML elements.
   */
  children: PropTypes.node.isRequired
};

Paragraph.defaultProps = {
  bold: false,
  size: 'medium',
  align: 'left',
  invert: false
};

Paragraph.contextTypes = {
  inheritColor: PropTypes.bool
};

var ColoredTextProvider = function (_React$Component) {
  inherits(ColoredTextProvider, _React$Component);

  function ColoredTextProvider() {
    classCallCheck(this, ColoredTextProvider);
    return possibleConstructorReturn(this, (ColoredTextProvider.__proto__ || Object.getPrototypeOf(ColoredTextProvider)).apply(this, arguments));
  }

  createClass(ColoredTextProvider, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        inheritColor: true
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          colorClassName = _props.colorClassName,
          children = _props.children;


      return React.createElement(
        'div',
        { className: colorClassName },
        children
      );
    }
  }]);
  return ColoredTextProvider;
}(React.Component);

ColoredTextProvider.propTypes = {
  colorClassName: PropTypes.string.isRequired,
  children: PropTypes.node.isRequired
};

ColoredTextProvider.childContextTypes = {
  inheritColor: PropTypes.bool
};

var styles$13 = { "base": "TDS_InputFeedback-modules__base___2WcTV TDS_Borders-modules__rounded___1M93U", "default": "TDS_InputFeedback-modules__default___2sB0z TDS_InputFeedback-modules__base___2WcTV TDS_Borders-modules__rounded___1M93U TDS_Messaging-modules__default___3w5Ya", "success": "TDS_InputFeedback-modules__success___2FhT1 TDS_InputFeedback-modules__base___2WcTV TDS_Borders-modules__rounded___1M93U TDS_Messaging-modules__success___1dft0", "error": "TDS_InputFeedback-modules__error___QtCh5 TDS_InputFeedback-modules__base___2WcTV TDS_Borders-modules__rounded___1M93U TDS_Messaging-modules__error___2tAMl" };

/**
 * A feedback box commonly used with form fields.
 *
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.33.0</span>
 */
var InputFeedback = function InputFeedback(_ref) {
  var feedback = _ref.feedback,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['feedback', 'children']);
  return React.createElement(
    Box,
    _extends({}, safeRest(rest), {
      inset: 3,
      dangerouslyAddClassName: feedback ? styles$13[feedback] : styles$13.default,
      role: feedback === 'error' ? 'alert' : null
    }),
    children
  );
};

InputFeedback.propTypes = {
  /**
   * A feedback state that changes the background colour.
   */
  feedback: PropTypes.oneOf(['success', 'error']),
  /**
   * The content. Can be text, any HTML element, or any component.
   */
  children: PropTypes.node.isRequired
};

InputFeedback.defaultProps = {
  feedback: undefined
};

var styles$14 = { "alignCenter": "TDS_Choice-modules__alignCenter___3T0Y1", "alignFlexStart": "TDS_Choice-modules__alignFlexStart___1uyfc", "fakeInput": "TDS_Choice-modules__fakeInput___5Bedc TDS_Borders-modules__thin___3wU-3", "fakeCheckbox": "TDS_Choice-modules__fakeCheckbox___Uxr3V TDS_Choice-modules__fakeInput___5Bedc TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U", "fakeRadio": "TDS_Choice-modules__fakeRadio___53XOH TDS_Choice-modules__fakeInput___5Bedc TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__circular___2Wn2f", "unchecked": "TDS_Choice-modules__unchecked___3V4ZN", "focused": "TDS_Choice-modules__focused___1zGTA", "error": "TDS_Choice-modules__error___tByRl", "hiddenInput": "TDS_Choice-modules__hiddenInput___qQVW9" };

var messagingStyles = { "default": "TDS_Messaging-modules__default___3w5Ya", "success": "TDS_Messaging-modules__success___1dft0", "error": "TDS_Messaging-modules__error___2tAMl", "errorText": "TDS_Messaging-modules__errorText___1LMM7", "disabledText": "TDS_Messaging-modules__disabledText___3GbM7" };

var getId = function getId(id, name, value) {
  if (id) {
    return generateId(id).identity();
  }

  return generateId(name).postfix(value);
};

var getClassNames = function getClassNames(inputTypeStyles, checked, focus, feedback, disabled) {
  if (disabled) {
    return checked ? inputTypeStyles.disabledChecked : inputTypeStyles.disabled;
  }

  var className = void 0;
  if (checked) {
    className = inputTypeStyles.checked;
  } else if (feedback === 'error') {
    className = styles$14.error;
  } else {
    className = styles$14.unchecked;
  }

  return joinClassNames(className, focus && styles$14.focused);
};

var renderColoredLabel = function renderColoredLabel(color, content) {
  return React.createElement(
    ColoredTextProvider,
    { colorClassName: color },
    React.createElement(
      Flexbox,
      { direction: 'row', dangerouslyAddClassName: styles$14.alignFlexStart },
      content
    )
  );
};

var renderLabel = function renderLabel(label, feedback, checked, disabled) {
  var content = React.createElement(
    Text,
    { size: 'medium' },
    label
  );

  if (feedback === 'error' && !checked) {
    return renderColoredLabel(messagingStyles.errorText, content);
  }

  if (disabled) {
    return renderColoredLabel(messagingStyles.disabledText, content);
  }

  return content;
};

var renderError = function renderError(error, errorId) {
  return React.createElement(
    InputFeedback,
    { id: errorId, feedback: 'error' },
    React.createElement(
      Paragraph,
      { size: 'small' },
      error
    )
  );
};

var Choice = function (_React$Component) {
  inherits(Choice, _React$Component);

  function Choice() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, Choice);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Choice.__proto__ || Object.getPrototypeOf(Choice)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      checked: _this.props.checked,
      focus: false
    }, _this.onChange = function (event) {
      var onChange = _this.props.onChange;


      event.persist();

      _this.setState(function (_ref2) {
        var checked = _ref2.checked;

        return { checked: !checked };
      }, function () {
        if (onChange) {
          onChange(event);
        }
      });
    }, _this.onFocus = function (event) {
      var onFocus = _this.props.onFocus;


      _this.setState({ focus: true });

      if (onFocus) {
        onFocus(event);
      }
    }, _this.onBlur = function (event) {
      var onBlur = _this.props.onBlur;


      _this.setState({ focus: false });

      if (onBlur) {
        onBlur(event);
      }
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(Choice, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.checked !== nextProps.checked) {
        this.setState({
          checked: nextProps.checked
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          name = _props.name,
          value = _props.value,
          feedback = _props.feedback,
          error = _props.error,
          type = _props.type,
          inputTypeStyles = _props.inputTypeStyles,
          children = _props.children,
          rest = objectWithoutProperties(_props, ['label', 'name', 'value', 'feedback', 'error', 'type', 'inputTypeStyles', 'children']);


      var choiceId = getId(rest.id, name, value);
      var errorId = error && generateId(choiceId).postfix('error-message');

      var fakeInputClassNames = joinClassNames(type === 'radio' ? styles$14.fakeRadio : styles$14.fakeCheckbox, getClassNames(inputTypeStyles, this.state.checked, this.state.focus, feedback, rest.disabled));

      return React.createElement(
        Box,
        { between: 2 },
        feedback === 'error' && error && renderError(error, errorId),
        React.createElement(
          'label',
          { htmlFor: choiceId },
          React.createElement(
            Box,
            { tag: 'span', inline: true, between: 3, dangerouslyAddClassName: styles$14.alignFlexStart },
            React.createElement(
              'span',
              { className: fakeInputClassNames, 'data-testid': 'fake-input' },
              React.createElement('input', _extends({}, safeRest(rest), {
                id: choiceId,
                type: type,
                name: name,
                value: value,
                checked: this.state.checked,
                className: styles$14.hiddenInput,
                'aria-invalid': feedback === 'error',
                'aria-describedby': errorId || undefined,
                onChange: this.onChange,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })),
              children(this.state.checked, rest.disabled)
            ),
            renderLabel(label, feedback, this.state.checked, rest.disabled)
          )
        )
      );
    }
  }]);
  return Choice;
}(React.Component);

Choice.propTypes = {
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,
  name: PropTypes.string.isRequired,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
  checked: PropTypes.bool.isRequired,
  feedback: PropTypes.oneOf(['error']),
  error: PropTypes.string,
  onChange: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  type: PropTypes.oneOf(['checkbox', 'radio']).isRequired,
  inputTypeStyles: PropTypes.object.isRequired,
  children: PropTypes.func.isRequired
};

Choice.defaultProps = {
  feedback: undefined,
  error: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

var styles$15 = { "disabled": "TDS_Checkbox-modules__disabled___3XNwI", "disabledChecked": "TDS_Checkbox-modules__disabledChecked___3nA3W", "checked": "TDS_Checkbox-modules__checked___1R9AN" };

/**
 *
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.32.0</span>
 */
var Checkbox = function Checkbox(props) {
  return React.createElement(
    Choice,
    _extends({}, props, { type: 'checkbox', inputTypeStyles: styles$15 }),
    function (checked) {
      return checked && React.createElement(DecorativeIcon, { symbol: 'checkmark', size: 16, variant: 'inverted' });
    }
  );
};

Checkbox.propTypes = {
  /**
   * The label.
   */
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,
  /**
   * Associate this checkbox with a group. Set as the HTML name attribute.
   */
  name: PropTypes.string.isRequired,
  /**
   * The value. Must be unique within the group.
   */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
  /**
   * The checked state
   */
  checked: PropTypes.bool,
  /**
   * A feedback state.
   */
  feedback: PropTypes.oneOf(['error']),
  /**
   * An error message.
   */
  error: PropTypes.string,
  /**
   * A callback function to be invoked when the checkbox is checked or unchecked.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onChange: PropTypes.func,
  /**
   * A callback function to be invoked when the checkbox receives focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onFocus: PropTypes.func,
  /**
   * A callback function to be invoked when the checkbox loses focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onBlur: PropTypes.func
};

Checkbox.defaultProps = {
  checked: false,
  feedback: undefined,
  error: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

var styles$16 = { "link": "TDS_ChevronLink-modules__link___WXk0N TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr", "rightChevron": "TDS_ChevronLink-modules__rightChevron___2dm_z TDS_ChevronLink-modules__chevron___46DvW", "leftChevron": "TDS_ChevronLink-modules__leftChevron___1gZZj TDS_ChevronLink-modules__chevron___46DvW", "primary": "TDS_ChevronLink-modules__primary___3D4Ce TDS_ChevronLink-modules__link___WXk0N TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr", "secondary": "TDS_ChevronLink-modules__secondary___tVi8I TDS_ChevronLink-modules__link___WXk0N TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr", "inverted": "TDS_ChevronLink-modules__inverted___tLclS TDS_ChevronLink-modules__link___WXk0N TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr", "chevron": "TDS_ChevronLink-modules__chevron___46DvW" };

var getClassName$2 = function getClassName(variant) {
  switch (variant) {
    case 'secondary':
      return styles$16.secondary;
    case 'inverted':
      return styles$16.inverted;
    default:
      return styles$16.primary;
  }
};

var getIcon = function getIcon(symbol, classes) {
  return React.createElement(
    'span',
    { className: classes },
    React.createElement(DecorativeIcon, { symbol: symbol, size: 16 })
  );
};

/**
 * A call to action link.
 */
var ChevronLink = function ChevronLink(_ref) {
  var reactRouterLinkComponent = _ref.reactRouterLinkComponent,
      variant = _ref.variant,
      direction = _ref.direction,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['reactRouterLinkComponent', 'variant', 'direction', 'children']);

  if ((reactRouterLinkComponent || rest.to) && !(reactRouterLinkComponent && rest.to)) {
    warn('Chevron Link', 'The props `reactRouterLinkComponent` and `to` must be used together.');
  }

  var innerLink = React.createElement(
    Box,
    { tag: 'span', inline: true, between: 2 },
    direction === 'left' ? getIcon('leftChevron', styles$16.leftChevron) : undefined,
    React.createElement(
      'span',
      null,
      children
    ),
    direction === 'right' ? getIcon('chevron', styles$16.rightChevron) : undefined
  );

  return React.createElement(reactRouterLinkComponent || 'a', _extends({}, safeRest(rest), {
    className: getClassName$2(variant)
  }), innerLink);
};

ChevronLink.propTypes = {
  /**
   * The style.
   */
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted']),
  /**
   * The chevron's direction and placement.
   */
  direction: PropTypes.oneOf(['left', 'right']),
  /**
   * React Router Link component.
   */
  reactRouterLinkComponent: PropTypes.func,
  /**
   * Target URL (if using 'reactRouterLinkComponent')
   */
  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  /**
   * Target URL.
   */
  href: PropTypes.string,
  /**
   * The label.
   */
  children: PropTypes.string.isRequired
};
ChevronLink.defaultProps = {
  variant: 'primary',
  direction: 'right',
  reactRouterLinkComponent: null,
  to: null,
  href: null
};

var styles$17 = { "sup": "TDS_DisplayHeading-modules__sup___3oHBq TDS_Text-modules__baseSupSubScripts___15T2e", "base": "TDS_DisplayHeading-modules__base___73mVk TDS_Spacing-modules__noSpacing___4r12n TDS_Typography-modules__wordBreak___21QZr", "heading": "TDS_DisplayHeading-modules__heading___3-d3S TDS_DisplayHeading-modules__base___73mVk TDS_Spacing-modules__noSpacing___4r12n TDS_Typography-modules__wordBreak___21QZr", "inverted": "TDS_DisplayHeading-modules__inverted___3iayI", "default": "TDS_DisplayHeading-modules__default___1ShkV" };

/**
 * Superscript text for `DisplayHeading` an as HTML `<sup>` element.
 *
 * _This component can only be accessed as a name-spaced component: `DisplayHeading.Sup`._
 */
var DisplayHeadingSup = function DisplayHeadingSup(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'sup',
    _extends({}, safeRest(rest), { className: styles$17.sup }),
    children
  );
};

DisplayHeadingSup.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.string.isRequired
};

DisplayHeadingSup.displayName = 'DisplayHeading.Sup';

var getClassName$3 = function getClassName(invert) {
  return joinClassNames(styles$17.heading, invert ? styles$17.inverted : styles$17.default);
};

/**
 * Large page titles. Renders an HTML `<h1>` element.
 */
var DisplayHeading = function DisplayHeading(_ref) {
  var invert = _ref.invert,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['invert', 'children']);
  return React.createElement(
    'h1',
    _extends({}, safeRest(rest), { className: getClassName$3(invert) }),
    children
  );
};

DisplayHeading.propTypes = {
  /**
   * Invert the text color to appear light on dark backgrounds.
   */
  invert: PropTypes.bool,
  /**
   * The text. Can be text, other components, or HTML elements.
   */
  children: PropTypes.node.isRequired
};

DisplayHeading.defaultProps = {
  invert: false
};

DisplayHeading.Sup = DisplayHeadingSup;

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function (TO_STRING) {
  return function (that, pos) {
    var s = String(_defined(that));
    var i = _toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var _library = false;

var _iterators = {};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject = function (it) {
  return _iobject(_defined(it));
};

var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index = _toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var shared = _shared('keys');

var _sharedKey = function (key) {
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO$1 = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO$1) _has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys = _objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = _enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

var def = _objectDp.f;

var TAG = _wks('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

'use strict';



var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$2 = _sharedKey('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

'use strict';









var ITERATOR = _wks('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = (!BUGGY && $native) || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!_library && !_has(IteratorPrototype, ITERATOR)) _hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    _hide(proto, ITERATOR, $default);
  }
  // Plug for library
  _iterators[NAME] = $default;
  _iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

'use strict';
var $at = _stringAt(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

// call something on iterator step with safe closing on error

var _iterCall = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) _anObject(ret.call(iterator));
    throw e;
  }
};

// check on default Array iterator

var ITERATOR$1 = _wks('iterator');
var ArrayProto$1 = Array.prototype;

var _isArrayIter = function (it) {
  return it !== undefined && (_iterators.Array === it || ArrayProto$1[ITERATOR$1] === it);
};

'use strict';



var _createProperty = function (object, index, value) {
  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));
  else object[index] = value;
};

// getting tag from 19.1.3.6 Object.prototype.toString()

var TAG$1 = _wks('toStringTag');
// ES3 wrong here
var ARG = _cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

var _classof = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T
    // builtinTag case
    : ARG ? _cof(O)
    // ES3 arguments fallback
    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

var ITERATOR$2 = _wks('iterator');

var core_getIteratorMethod = _core.getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR$2]
    || it['@@iterator']
    || _iterators[_classof(it)];
};

var ITERATOR$3 = _wks('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR$3]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  
} catch (e) { /* empty */ }

var _iterDetect = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR$3]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR$3] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

'use strict';









_export(_export.S + _export.F * !_iterDetect(function (iter) {  }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = _toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = core_getIteratorMethod(O);
    var length, result, step, iterator;
    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        _createProperty(result, index, mapping ? _iterCall(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = _toLength(O.length);
      for (result = new C(length); length > index; index++) {
        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

var from = _core.Array.from;

/* eslint-disable import/prefer-default-export */

// This set difference algorithm is copied exactly from MDN:
// --> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set
var difference = function difference(start, compare) {
  var setDifference = new Set(start);

  compare.forEach(function (element) {
    return setDifference.delete(element);
  });

  return setDifference;
};

var isEqual = function isEqual(setA, setB) {
  var differenceAtoB = difference(setA, setB);
  var differenceBtoA = difference(setB, setA);

  return differenceAtoB.size === 0 && differenceBtoA.size === 0;
};

/**
 * A connected series of expandable content areas.
 *
 * <span class="docs--badge__updated">updated</span> <span class="docs--badge__version">v0.33.1</span>
 */

var ExpandCollapse = function (_React$Component) {
  inherits(ExpandCollapse, _React$Component);

  function ExpandCollapse() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, ExpandCollapse);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ExpandCollapse.__proto__ || Object.getPrototypeOf(ExpandCollapse)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      openPanels: new Set(_this.props.open)
    }, _this.togglePanel = function (panelId) {
      var onToggle = _this.props.onToggle;


      _this.setState(function (_ref2) {
        var openPanels = _ref2.openPanels;

        var nextPanels = new Set(openPanels);

        if (nextPanels.has(panelId)) {
          nextPanels.delete(panelId);
        } else {
          nextPanels.add(panelId);
        }

        return { openPanels: nextPanels };
      }, function () {
        if (onToggle) {
          onToggle(from(_this.state.openPanels));
        }
      });
    }, _this.isPanelOpen = function (panelId) {
      return _this.state.openPanels.has(panelId);
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(ExpandCollapse, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextPanels = new Set(nextProps.open);

      if (!isEqual(this.state.openPanels, nextPanels)) {
        this.setState({ openPanels: nextPanels });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          rest = objectWithoutProperties(_props, ['children']);


      return React.createElement(
        Panels,
        _extends({}, rest, { isPanelOpen: this.isPanelOpen, togglePanel: this.togglePanel }),
        children
      );
    }
  }]);
  return ExpandCollapse;
}(React.Component);

ExpandCollapse.propTypes = {
  /**
   * A list of panel identifiers to programmatically open.
   */
  open: PropTypes.arrayOf(PropTypes.string),
  /**
   * Whether or not to show the divider above the first panel.
   */
  topDivider: PropTypes.bool,
  /**
   * A callback function to be invoked when any panel is opened or closed.
   *
   * @param {Array} openPanels A list of the currently open panel identifiers.
   */
  onToggle: PropTypes.func,
  /**
   * The expandable panels. Must be at least one `ExpandCollapse.Panel`.
   */
  children: airbnbPropTypes_1(Panel).isRequired
};

ExpandCollapse.defaultProps = {
  open: [],
  topDivider: true,
  onToggle: undefined
};

ExpandCollapse.Panel = Panel;

function createCommonjsModule$1(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

var emptyFunction_1 = emptyFunction;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

var invariant_1$1 = invariant;

/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction_1;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var warning_1 = warning;

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant$1 = invariant_1$1;
  var warning$1 = warning_1;
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

var checkPropTypes_1 = checkPropTypes;

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';








var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant_1$1(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning_1(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction_1.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction_1.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning_1(
          false,
          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction_1.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';





var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    invariant_1$1(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction_1;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule$1(function (module) {
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var NODE_ENV = process.env.NODE_ENV;

var invariant$3 = function(condition, format, a, b, c, d, e, f) {
  if (NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

var invariant_1$3 = invariant$3;

var asyncGenerator$1 = function () {
  function AwaitValue(value) {
    this.value = value;
  }

  function AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;

        if (value instanceof AwaitValue) {
          Promise.resolve(value.value).then(function (arg) {
            resume("next", arg);
          }, function (arg) {
            resume("throw", arg);
          });
        } else {
          settle(result.done ? "return" : "normal", result.value);
        }
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({
            value: value,
            done: true
          });
          break;

        case "throw":
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  if (typeof Symbol === "function" && Symbol.asyncIterator) {
    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
      return this;
    };
  }

  AsyncGenerator.prototype.next = function (arg) {
    return this._invoke("next", arg);
  };

  AsyncGenerator.prototype.throw = function (arg) {
    return this._invoke("throw", arg);
  };

  AsyncGenerator.prototype.return = function (arg) {
    return this._invoke("return", arg);
  };

  return {
    wrap: function (fn) {
      return function () {
        return new AsyncGenerator(fn.apply(this, arguments));
      };
    },
    await: function (value) {
      return new AwaitValue(value);
    }
  };
}();





var classCallCheck$1 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends$1 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits$1 = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn$1 = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

function createBroadcast(initialState) {
  var listeners = [];
  var currentState = initialState;

  var getState = function getState() {
    return currentState;
  };

  var setState = function setState(state) {
    currentState = state;
    listeners.forEach(function (listener) {
      return listener(currentState);
    });
  };

  var subscribe = function subscribe(listener) {
    listeners.push(listener);

    return function () {
      return listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  };

  return {
    getState: getState,
    setState: setState,
    subscribe: subscribe
  };
}

/**
 * A <Broadcast> provides a generic way for descendants to "subscribe"
 * to some value that changes over time, bypassing any intermediate
 * shouldComponentUpdate's in the hierarchy. It puts all subscription
 * functions on context.broadcasts, keyed by "channel".
 *
 * To use it, a subscriber must opt-in to context.broadcasts. See the
 * <Subscriber> component for a reference implementation.
 */

var Broadcast = function (_React$Component) {
  inherits$1(Broadcast, _React$Component);

  function Broadcast() {
    var _temp, _this, _ret;

    classCallCheck$1(this, Broadcast);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.broadcast = createBroadcast(_this.props.value), _temp), possibleConstructorReturn$1(_this, _ret);
  }

  Broadcast.prototype.getChildContext = function getChildContext() {
    var _babelHelpers$extends;

    return {
      broadcasts: _extends$1({}, this.context.broadcasts, (_babelHelpers$extends = {}, _babelHelpers$extends[this.props.channel] = this.broadcast, _babelHelpers$extends))
    };
  };

  Broadcast.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    invariant_1$3(this.props.channel === nextProps.channel, "You cannot change <Broadcast channel>");

    if (!this.props.compareValues(this.props.value, nextProps.value)) {
      this.broadcast.setState(nextProps.value);
    }
  };

  Broadcast.prototype.render = function render() {
    return React.Children.only(this.props.children);
  };

  return Broadcast;
}(React.Component);

Broadcast.propTypes = {
  channel: propTypes.string.isRequired,
  children: propTypes.node.isRequired,
  compareValues: propTypes.func,
  value: propTypes.any
};
Broadcast.defaultProps = {
  compareValues: function compareValues(prevValue, nextValue) {
    return prevValue === nextValue;
  }
};
Broadcast.contextTypes = {
  broadcasts: propTypes.object
};
Broadcast.childContextTypes = {
  broadcasts: propTypes.object.isRequired
};

/**
 * A <Subscriber> pulls the value for a channel off of context.broadcasts
 * and passes it to its children function.
 */

var Subscriber = function (_React$Component) {
  inherits$1(Subscriber, _React$Component);

  function Subscriber() {
    var _temp, _this, _ret;

    classCallCheck$1(this, Subscriber);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      value: null
    }, _temp), possibleConstructorReturn$1(_this, _ret);
  }

  Subscriber.prototype.getBroadcast = function getBroadcast() {
    var broadcasts = this.context.broadcasts || {};
    var broadcast = broadcasts[this.props.channel];

    invariant_1$3(broadcast, '<Subscriber channel="%s"> must be rendered in the context of a <Broadcast channel="%s">', this.props.channel, this.props.channel);

    return broadcast;
  };

  Subscriber.prototype.componentWillMount = function componentWillMount() {
    this.setState({
      value: this.getBroadcast().getState()
    });
  };

  Subscriber.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    this.unsubscribe = this.getBroadcast().subscribe(function (value) {
      _this2.setState({ value: value });
    });
  };

  Subscriber.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unsubscribe();
  };

  Subscriber.prototype.render = function render() {
    return this.props.children(this.state.value);
  };

  return Subscriber;
}(React.Component);

Subscriber.propTypes = {
  channel: propTypes.string.isRequired,
  children: propTypes.func.isRequired
};
Subscriber.contextTypes = {
  broadcasts: propTypes.object
};

var flexboxgrid2 = {"container":"TDS_flexboxgrid2__container___3skQK","container-fluid":"TDS_flexboxgrid2__container-fluid___XKLhm","row":"TDS_flexboxgrid2__row___ZtOZv","reverse":"TDS_flexboxgrid2__reverse___3oCGT","col":"TDS_flexboxgrid2__col___2Z6TW","col-xs":"TDS_flexboxgrid2__col-xs___2PLFU","col-xs-1":"TDS_flexboxgrid2__col-xs-1___1ys2K","col-xs-2":"TDS_flexboxgrid2__col-xs-2___1oFs0","col-xs-3":"TDS_flexboxgrid2__col-xs-3___1Q5cW","col-xs-4":"TDS_flexboxgrid2__col-xs-4___3pHqi","col-xs-5":"TDS_flexboxgrid2__col-xs-5___3JeAf","col-xs-6":"TDS_flexboxgrid2__col-xs-6___1Zplx","col-xs-7":"TDS_flexboxgrid2__col-xs-7___2rjoo","col-xs-8":"TDS_flexboxgrid2__col-xs-8___3Pbgu","col-xs-9":"TDS_flexboxgrid2__col-xs-9___zDP7a","col-xs-10":"TDS_flexboxgrid2__col-xs-10___Zo7_E","col-xs-11":"TDS_flexboxgrid2__col-xs-11___mXqV2","col-xs-12":"TDS_flexboxgrid2__col-xs-12___AdoKE","col-xs-offset-0":"TDS_flexboxgrid2__col-xs-offset-0___3NAsN","col-xs-offset-1":"TDS_flexboxgrid2__col-xs-offset-1___3K_gC","col-xs-offset-2":"TDS_flexboxgrid2__col-xs-offset-2___2Ga73","col-xs-offset-3":"TDS_flexboxgrid2__col-xs-offset-3___3c_Ft","col-xs-offset-4":"TDS_flexboxgrid2__col-xs-offset-4___3TWUy","col-xs-offset-5":"TDS_flexboxgrid2__col-xs-offset-5___1yWoT","col-xs-offset-6":"TDS_flexboxgrid2__col-xs-offset-6___al_7H","col-xs-offset-7":"TDS_flexboxgrid2__col-xs-offset-7___2J_G7","col-xs-offset-8":"TDS_flexboxgrid2__col-xs-offset-8___1RGyW","col-xs-offset-9":"TDS_flexboxgrid2__col-xs-offset-9___3OtIT","col-xs-offset-10":"TDS_flexboxgrid2__col-xs-offset-10___109SK","col-xs-offset-11":"TDS_flexboxgrid2__col-xs-offset-11___1fcLq","col-xs-offset-12":"TDS_flexboxgrid2__col-xs-offset-12___3UGEQ","start-xs":"TDS_flexboxgrid2__start-xs___2gtAf","center-xs":"TDS_flexboxgrid2__center-xs___2GJwn","end-xs":"TDS_flexboxgrid2__end-xs___1Jy9a","top-xs":"TDS_flexboxgrid2__top-xs___3ApF9","middle-xs":"TDS_flexboxgrid2__middle-xs___2qJAd","bottom-xs":"TDS_flexboxgrid2__bottom-xs___2sMuK","around-xs":"TDS_flexboxgrid2__around-xs___1h6nu","between-xs":"TDS_flexboxgrid2__between-xs___1Bml9","first-xs":"TDS_flexboxgrid2__first-xs___2ydrY","last-xs":"TDS_flexboxgrid2__last-xs___1TmDf","initial-order-xs":"TDS_flexboxgrid2__initial-order-xs___1lJw5","col-sm":"TDS_flexboxgrid2__col-sm___3UNLq","col-sm-1":"TDS_flexboxgrid2__col-sm-1___2u7Tq","col-sm-2":"TDS_flexboxgrid2__col-sm-2___39LGZ","col-sm-3":"TDS_flexboxgrid2__col-sm-3___1HPMt","col-sm-4":"TDS_flexboxgrid2__col-sm-4___3SO93","col-sm-5":"TDS_flexboxgrid2__col-sm-5___2Buhm","col-sm-6":"TDS_flexboxgrid2__col-sm-6___1l2Kt","col-sm-7":"TDS_flexboxgrid2__col-sm-7___d6sUa","col-sm-8":"TDS_flexboxgrid2__col-sm-8___g6l7V","col-sm-9":"TDS_flexboxgrid2__col-sm-9___etIBb","col-sm-10":"TDS_flexboxgrid2__col-sm-10___Bxvht","col-sm-11":"TDS_flexboxgrid2__col-sm-11___PiXUP","col-sm-12":"TDS_flexboxgrid2__col-sm-12___2sYMg","col-sm-offset-0":"TDS_flexboxgrid2__col-sm-offset-0___oljZ3","col-sm-offset-1":"TDS_flexboxgrid2__col-sm-offset-1___1ywTD","col-sm-offset-2":"TDS_flexboxgrid2__col-sm-offset-2___1X0hd","col-sm-offset-3":"TDS_flexboxgrid2__col-sm-offset-3___2QOr2","col-sm-offset-4":"TDS_flexboxgrid2__col-sm-offset-4___3inAM","col-sm-offset-5":"TDS_flexboxgrid2__col-sm-offset-5___2Ihhn","col-sm-offset-6":"TDS_flexboxgrid2__col-sm-offset-6___21xzL","col-sm-offset-7":"TDS_flexboxgrid2__col-sm-offset-7___1ypYV","col-sm-offset-8":"TDS_flexboxgrid2__col-sm-offset-8___ymjV3","col-sm-offset-9":"TDS_flexboxgrid2__col-sm-offset-9___1SxN0","col-sm-offset-10":"TDS_flexboxgrid2__col-sm-offset-10___2qwiO","col-sm-offset-11":"TDS_flexboxgrid2__col-sm-offset-11___3zRYq","col-sm-offset-12":"TDS_flexboxgrid2__col-sm-offset-12___2fnwd","start-sm":"TDS_flexboxgrid2__start-sm___3I0F0","center-sm":"TDS_flexboxgrid2__center-sm___2tfwT","end-sm":"TDS_flexboxgrid2__end-sm___1Dqio","top-sm":"TDS_flexboxgrid2__top-sm___NTmPJ","middle-sm":"TDS_flexboxgrid2__middle-sm___QLrL0","bottom-sm":"TDS_flexboxgrid2__bottom-sm___3iRAD","around-sm":"TDS_flexboxgrid2__around-sm___2DXbH","between-sm":"TDS_flexboxgrid2__between-sm___1GD_q","first-sm":"TDS_flexboxgrid2__first-sm___AlKeI","last-sm":"TDS_flexboxgrid2__last-sm___1GaXQ","initial-order-sm":"TDS_flexboxgrid2__initial-order-sm___3Ar7f","col-md":"TDS_flexboxgrid2__col-md___srMeB","col-md-1":"TDS_flexboxgrid2__col-md-1___3RdWY","col-md-2":"TDS_flexboxgrid2__col-md-2___3j8qs","col-md-3":"TDS_flexboxgrid2__col-md-3___2Th4S","col-md-4":"TDS_flexboxgrid2__col-md-4___3pbbS","col-md-5":"TDS_flexboxgrid2__col-md-5___1Svz9","col-md-6":"TDS_flexboxgrid2__col-md-6___1wIAi","col-md-7":"TDS_flexboxgrid2__col-md-7___3z1EO","col-md-8":"TDS_flexboxgrid2__col-md-8___2Dm-W","col-md-9":"TDS_flexboxgrid2__col-md-9___1nXvw","col-md-10":"TDS_flexboxgrid2__col-md-10___3Br2r","col-md-11":"TDS_flexboxgrid2__col-md-11___3gKDL","col-md-12":"TDS_flexboxgrid2__col-md-12___2t4Kh","col-md-offset-0":"TDS_flexboxgrid2__col-md-offset-0___1twEm","col-md-offset-1":"TDS_flexboxgrid2__col-md-offset-1___12ZU0","col-md-offset-2":"TDS_flexboxgrid2__col-md-offset-2___1dGCS","col-md-offset-3":"TDS_flexboxgrid2__col-md-offset-3___XMXnG","col-md-offset-4":"TDS_flexboxgrid2__col-md-offset-4___3TnIN","col-md-offset-5":"TDS_flexboxgrid2__col-md-offset-5___EGfBj","col-md-offset-6":"TDS_flexboxgrid2__col-md-offset-6___3Kb3E","col-md-offset-7":"TDS_flexboxgrid2__col-md-offset-7___21XFw","col-md-offset-8":"TDS_flexboxgrid2__col-md-offset-8___qnljU","col-md-offset-9":"TDS_flexboxgrid2__col-md-offset-9___kdDX2","col-md-offset-10":"TDS_flexboxgrid2__col-md-offset-10___284iF","col-md-offset-11":"TDS_flexboxgrid2__col-md-offset-11___WXAgk","col-md-offset-12":"TDS_flexboxgrid2__col-md-offset-12___2XYlU","start-md":"TDS_flexboxgrid2__start-md___3M-iK","center-md":"TDS_flexboxgrid2__center-md___3Ql1d","end-md":"TDS_flexboxgrid2__end-md___STrsQ","top-md":"TDS_flexboxgrid2__top-md___2FX25","middle-md":"TDS_flexboxgrid2__middle-md___YZ6CJ","bottom-md":"TDS_flexboxgrid2__bottom-md___2Ruw8","around-md":"TDS_flexboxgrid2__around-md___1G_h0","between-md":"TDS_flexboxgrid2__between-md___1ik_I","first-md":"TDS_flexboxgrid2__first-md___yFUKj","last-md":"TDS_flexboxgrid2__last-md___1PHhp","initial-order-md":"TDS_flexboxgrid2__initial-order-md___3UvRN","col-lg":"TDS_flexboxgrid2__col-lg___3u7lk","col-lg-1":"TDS_flexboxgrid2__col-lg-1___2y0lP","col-lg-2":"TDS_flexboxgrid2__col-lg-2___1x6vt","col-lg-3":"TDS_flexboxgrid2__col-lg-3___37wpY","col-lg-4":"TDS_flexboxgrid2__col-lg-4___RwCNM","col-lg-5":"TDS_flexboxgrid2__col-lg-5___37365","col-lg-6":"TDS_flexboxgrid2__col-lg-6___NeTjn","col-lg-7":"TDS_flexboxgrid2__col-lg-7___3bixv","col-lg-8":"TDS_flexboxgrid2__col-lg-8___2YhQ1","col-lg-9":"TDS_flexboxgrid2__col-lg-9___2e0uZ","col-lg-10":"TDS_flexboxgrid2__col-lg-10___3X-8g","col-lg-11":"TDS_flexboxgrid2__col-lg-11___1Ymgu","col-lg-12":"TDS_flexboxgrid2__col-lg-12___p4dm-","col-lg-offset-0":"TDS_flexboxgrid2__col-lg-offset-0___YMDi3","col-lg-offset-1":"TDS_flexboxgrid2__col-lg-offset-1___2mUfM","col-lg-offset-2":"TDS_flexboxgrid2__col-lg-offset-2___2PSlK","col-lg-offset-3":"TDS_flexboxgrid2__col-lg-offset-3___2ZEsJ","col-lg-offset-4":"TDS_flexboxgrid2__col-lg-offset-4___oUBjv","col-lg-offset-5":"TDS_flexboxgrid2__col-lg-offset-5___2_pNE","col-lg-offset-6":"TDS_flexboxgrid2__col-lg-offset-6___1bZES","col-lg-offset-7":"TDS_flexboxgrid2__col-lg-offset-7___26quH","col-lg-offset-8":"TDS_flexboxgrid2__col-lg-offset-8___3kkd3","col-lg-offset-9":"TDS_flexboxgrid2__col-lg-offset-9___22Nlu","col-lg-offset-10":"TDS_flexboxgrid2__col-lg-offset-10___32R4D","col-lg-offset-11":"TDS_flexboxgrid2__col-lg-offset-11___3mcm9","col-lg-offset-12":"TDS_flexboxgrid2__col-lg-offset-12___1CzWw","start-lg":"TDS_flexboxgrid2__start-lg___m0vFF","center-lg":"TDS_flexboxgrid2__center-lg___1ppmu","end-lg":"TDS_flexboxgrid2__end-lg___1Cene","top-lg":"TDS_flexboxgrid2__top-lg___3R_GA","middle-lg":"TDS_flexboxgrid2__middle-lg___2vRr_","bottom-lg":"TDS_flexboxgrid2__bottom-lg___1FxHX","around-lg":"TDS_flexboxgrid2__around-lg___24PfH","between-lg":"TDS_flexboxgrid2__between-lg___2a-N0","first-lg":"TDS_flexboxgrid2__first-lg___351pp","last-lg":"TDS_flexboxgrid2__last-lg___2GWNG","initial-order-lg":"TDS_flexboxgrid2__initial-order-lg___3ajeo","col-xl":"TDS_flexboxgrid2__col-xl___3OIWS","col-xl-1":"TDS_flexboxgrid2__col-xl-1___1x-yZ","col-xl-2":"TDS_flexboxgrid2__col-xl-2___oe1yn","col-xl-3":"TDS_flexboxgrid2__col-xl-3___1DZkD","col-xl-4":"TDS_flexboxgrid2__col-xl-4___e7X-g","col-xl-5":"TDS_flexboxgrid2__col-xl-5___1K3om","col-xl-6":"TDS_flexboxgrid2__col-xl-6___pj3oz","col-xl-7":"TDS_flexboxgrid2__col-xl-7___2lbXv","col-xl-8":"TDS_flexboxgrid2__col-xl-8___2T9rc","col-xl-9":"TDS_flexboxgrid2__col-xl-9___4Cdy9","col-xl-10":"TDS_flexboxgrid2__col-xl-10___pgLUE","col-xl-11":"TDS_flexboxgrid2__col-xl-11___fOAzP","col-xl-12":"TDS_flexboxgrid2__col-xl-12___1lxVN","col-xl-offset-0":"TDS_flexboxgrid2__col-xl-offset-0___rTVg4","col-xl-offset-1":"TDS_flexboxgrid2__col-xl-offset-1___1KRTF","col-xl-offset-2":"TDS_flexboxgrid2__col-xl-offset-2___3XTdA","col-xl-offset-3":"TDS_flexboxgrid2__col-xl-offset-3___1u7VM","col-xl-offset-4":"TDS_flexboxgrid2__col-xl-offset-4___1U3cj","col-xl-offset-5":"TDS_flexboxgrid2__col-xl-offset-5___1m-Bk","col-xl-offset-6":"TDS_flexboxgrid2__col-xl-offset-6___zqsMR","col-xl-offset-7":"TDS_flexboxgrid2__col-xl-offset-7___8fHBq","col-xl-offset-8":"TDS_flexboxgrid2__col-xl-offset-8___1LruZ","col-xl-offset-9":"TDS_flexboxgrid2__col-xl-offset-9___3oTGD","col-xl-offset-10":"TDS_flexboxgrid2__col-xl-offset-10___2eReq","col-xl-offset-11":"TDS_flexboxgrid2__col-xl-offset-11___kuo4A","col-xl-offset-12":"TDS_flexboxgrid2__col-xl-offset-12___1WvjR","start-xl":"TDS_flexboxgrid2__start-xl___2Ur_r","center-xl":"TDS_flexboxgrid2__center-xl___3C4Vx","end-xl":"TDS_flexboxgrid2__end-xl___2UqlC","top-xl":"TDS_flexboxgrid2__top-xl___1tLbF","middle-xl":"TDS_flexboxgrid2__middle-xl___31-ID","bottom-xl":"TDS_flexboxgrid2__bottom-xl___p1SvR","around-xl":"TDS_flexboxgrid2__around-xl___2j28w","between-xl":"TDS_flexboxgrid2__between-xl___xff2E","first-xl":"TDS_flexboxgrid2__first-xl___2QxqG","last-xl":"TDS_flexboxgrid2__last-xl___1v5wI","initial-order-xl":"TDS_flexboxgrid2__initial-order-xl___IYbgP","hidden-xs":"TDS_flexboxgrid2__hidden-xs___3MgtY","hidden-sm":"TDS_flexboxgrid2__hidden-sm___2YMAO","hidden-md":"TDS_flexboxgrid2__hidden-md___FbTYO","hidden-lg":"TDS_flexboxgrid2__hidden-lg___2fkvW","hidden-xl":"TDS_flexboxgrid2__hidden-xl___3hzYJ"};

var flexboxgrid2$1 = Object.freeze({
	default: flexboxgrid2
});

var _flexboxgrid = ( flexboxgrid2$1 && flexboxgrid2 ) || flexboxgrid2$1;

var classNames = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getClass;



var _flexboxgrid2 = _interopRequireDefault(_flexboxgrid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getClass(className) {
  return _flexboxgrid2.default && _flexboxgrid2.default[className] ? _flexboxgrid2.default[className] : className;
}
});

unwrapExports(classNames);

var createProps_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createProps;
function createProps(propTypes, props, classNames) {
  var newProps = {};

  Object.keys(props).filter(function (key) {
    return key === 'children' || !propTypes[key];
  }).forEach(function (key) {
    return newProps[key] = props[key];
  });

  var className = classNames.filter(function (cn) {
    return cn;
  }).join(' ');
  return Object.assign({}, newProps, { className: className });
}
});

unwrapExports(createProps_1);

var types = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewportSizeType = exports.ColumnSizeType = undefined;



var _propTypes2 = _interopRequireDefault(PropTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ColumnSizeType = exports.ColumnSizeType = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]);
var ViewportSizeType = exports.ViewportSizeType = _propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']);
});

unwrapExports(types);

var Row_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRowProps = getRowProps;
exports.default = Row;



var _classNames2 = _interopRequireDefault(classNames);



var _react2 = _interopRequireDefault(React);



var _propTypes2 = _interopRequireDefault(PropTypes);



var _createProps2 = _interopRequireDefault(createProps_1);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rowKeys = ['start', 'center', 'end', 'top', 'middle', 'bottom', 'around', 'between'];

var propTypes = {
  reverse: _propTypes2.default.bool,
  start: types.ViewportSizeType,
  center: types.ViewportSizeType,
  end: types.ViewportSizeType,
  top: types.ViewportSizeType,
  middle: types.ViewportSizeType,
  bottom: types.ViewportSizeType,
  around: types.ViewportSizeType,
  between: types.ViewportSizeType,
  className: _propTypes2.default.string,
  tagName: _propTypes2.default.string,
  children: _propTypes2.default.node
};

function getRowClassNames(props) {
  var modificators = [props.className, (0, _classNames2.default)('row')];

  for (var i = 0; i < rowKeys.length; ++i) {
    var key = rowKeys[i];
    var value = props[key];
    if (value) {
      modificators.push((0, _classNames2.default)(key + '-' + value));
    }
  }

  if (props.reverse) {
    modificators.push((0, _classNames2.default)('reverse'));
  }

  return modificators;
}

function getRowProps(props) {
  return (0, _createProps2.default)(propTypes, props, getRowClassNames(props));
}

function Row(props) {
  return _react2.default.createElement(props.tagName || 'div', getRowProps(props));
}

Row.propTypes = propTypes;
});

unwrapExports(Row_1);

var Col_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColumnProps = getColumnProps;
exports.default = Col;



var _react2 = _interopRequireDefault(React);



var _propTypes2 = _interopRequireDefault(PropTypes);



var _createProps2 = _interopRequireDefault(createProps_1);



var _classNames2 = _interopRequireDefault(classNames);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  xs: types.ColumnSizeType,
  sm: types.ColumnSizeType,
  md: types.ColumnSizeType,
  lg: types.ColumnSizeType,
  xl: types.ColumnSizeType,
  xsOffset: _propTypes2.default.number,
  smOffset: _propTypes2.default.number,
  mdOffset: _propTypes2.default.number,
  lgOffset: _propTypes2.default.number,
  xlOffset: _propTypes2.default.number,
  first: types.ViewportSizeType,
  last: types.ViewportSizeType,
  className: _propTypes2.default.string,
  tagName: _propTypes2.default.string,
  children: _propTypes2.default.node
};

var classMap = {
  xs: 'col-xs',
  sm: 'col-sm',
  md: 'col-md',
  lg: 'col-lg',
  xl: 'col-xl',
  xsOffset: 'col-xs-offset',
  smOffset: 'col-sm-offset',
  mdOffset: 'col-md-offset',
  lgOffset: 'col-lg-offset',
  xlOffset: 'col-xl-offset'
};

function isInteger(value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
}

function getColClassNames(props) {
  var extraClasses = [];

  if (props.className) {
    extraClasses.push(props.className);
  }

  if (props.first) {
    extraClasses.push((0, _classNames2.default)('first-' + props.first));
  }

  if (props.last) {
    extraClasses.push((0, _classNames2.default)('last-' + props.last));
  }

  return Object.keys(props).filter(function (key) {
    return classMap[key];
  }).map(function (key) {
    return (0, _classNames2.default)(isInteger(props[key]) ? classMap[key] + '-' + props[key] : classMap[key]);
  }).concat(extraClasses);
}

function getColumnProps(props) {
  return (0, _createProps2.default)(propTypes, props, getColClassNames(props));
}

function Col(props) {
  var tagName = props.tagName,
      columnProps = _objectWithoutProperties(props, ['tagName']);

  return _react2.default.createElement(tagName || 'div', getColumnProps(columnProps));
}

Col.propTypes = propTypes;
});

unwrapExports(Col_1);

var Grid_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Grid;



var _react2 = _interopRequireDefault(React);



var _propTypes2 = _interopRequireDefault(PropTypes);



var _createProps2 = _interopRequireDefault(createProps_1);



var _classNames2 = _interopRequireDefault(classNames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  fluid: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  tagName: _propTypes2.default.string,
  children: _propTypes2.default.node
};

function Grid(props) {
  var containerClass = (0, _classNames2.default)(props.fluid ? 'container-fluid' : 'container');
  var classNames$$2 = [props.className, containerClass];

  return _react2.default.createElement(props.tagName || 'div', (0, _createProps2.default)(propTypes, props, classNames$$2));
}

Grid.propTypes = propTypes;
});

unwrapExports(Grid_1);

var lib = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColumnProps = exports.Col = exports.getRowProps = exports.Row = exports.Grid = undefined;



Object.defineProperty(exports, 'getRowProps', {
  enumerable: true,
  get: function get() {
    return Row_1.getRowProps;
  }
});



Object.defineProperty(exports, 'getColumnProps', {
  enumerable: true,
  get: function get() {
    return Col_1.getColumnProps;
  }
});



var _Grid3 = _interopRequireDefault(Grid_1);

var _Row3 = _interopRequireDefault(Row_1);

var _Col3 = _interopRequireDefault(Col_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Grid = _Grid3.default;
exports.Row = _Row3.default;
exports.Col = _Col3.default;
});

unwrapExports(lib);
var lib_2 = lib.Col;
var lib_4 = lib.Row;
var lib_5 = lib.Grid;

var styles$18 = { "padding": "TDS_Col-modules__padding___1EHbF", "gutterless": "TDS_Col-modules__gutterless___2A-M3" };

var removeProps = function removeProps(_ref) {
  var xs = _ref.xs,
      sm = _ref.sm,
      md = _ref.md,
      lg = _ref.lg,
      xl = _ref.xl,
      xsOffset = _ref.xsOffset,
      smOffset = _ref.smOffset,
      mdOffset = _ref.mdOffset,
      lgOffset = _ref.lgOffset,
      xlOffset = _ref.xlOffset,
      rest = objectWithoutProperties(_ref, ['xs', 'sm', 'md', 'lg', 'xl', 'xsOffset', 'smOffset', 'mdOffset', 'lgOffset', 'xlOffset']);
  return safeRest(rest);
};

/**
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.34.0</span>
 */
var Col$1 = function Col$$1(_ref2) {
  var span = _ref2.span,
      offset = _ref2.offset,
      children = _ref2.children,
      rest = objectWithoutProperties(_ref2, ['span', 'offset', 'children']);
  return React.createElement(
    Subscriber,
    { channel: 'flex-grid' },
    function (gutter) {
      return React.createElement(
        lib_2,
        _extends({}, removeProps(rest), {
          xs: span || true,
          xsOffset: offset,
          className: gutter ? styles$18.padding : styles$18.gutterless
        }),
        children
      );
    }
  );
};

Col$1.propTypes = {
  /**
   * Span the specified number of columns.
   */
  span: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Offset the specified number of columns.
   */
  offset: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * The columns of the Grid. Will typically be `FlexGrid.Col` components, but could be other components such as a
   * `Responsive` wrapper.
   */
  children: PropTypes.node.isRequired
};

Col$1.defaultProps = {
  span: undefined,
  offset: undefined
};

var styles$19 = { "flexRow": "TDS_Row-modules__flexRow___27_fV" };

/**
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.34.0</span>
 */
var Row$1 = function Row$$1(_ref) {
  var horizontalAlign = _ref.horizontalAlign,
      verticalAlign = _ref.verticalAlign,
      distribute = _ref.distribute,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['horizontalAlign', 'verticalAlign', 'distribute', 'children']);

  var getAlignment = function getAlignment() {
    return {
      start: horizontalAlign === 'start' ? 'xs' : undefined,
      center: horizontalAlign === 'center' ? 'xs' : undefined,
      end: horizontalAlign === 'end' ? 'xs' : undefined,
      top: verticalAlign === 'top' ? 'xs' : undefined,
      middle: verticalAlign === 'middle' ? 'xs' : undefined,
      bottom: verticalAlign === 'bottom' ? 'xs' : undefined
    };
  };

  var getDistribution = function getDistribution() {
    return {
      around: distribute === 'around' ? 'xs' : undefined,
      between: distribute === 'between' ? 'xs' : undefined
    };
  };

  return React.createElement(
    lib_4,
    _extends({}, safeRest(rest), getAlignment(), getDistribution(), {
      className: styles$19.flexRow
    }),
    children
  );
};

Row$1.propTypes = {
  /**
   * Align columns horizontally at the start, center, or end of their Row.
   */
  horizontalAlign: PropTypes.oneOf(['start', 'center', 'end']),
  /**
   * Align columns vertically at the top, middle, or bottom of their Row.
   */
  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']),
  /**
   * Choose which flexbox distribution to use on your nested columns.
   */
  distribute: PropTypes.oneOf(['around', 'between']),
  children: PropTypes.node.isRequired
};

Row$1.defaultProps = {
  horizontalAlign: undefined,
  verticalAlign: undefined,
  distribute: undefined
};

var styles$20 = { "flexGrid": "TDS_FlexGrid-modules__flexGrid___FzwUL", "centre": "TDS_FlexGrid-modules__centre___1Rk0P", "limitWidth": "TDS_FlexGrid-modules__limitWidth___1Tilu" };

/**
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.34.0</span>
 */
var FlexGrid = function FlexGrid(_ref) {
  var centre = _ref.centre,
      limitWidth = _ref.limitWidth,
      gutter = _ref.gutter,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['centre', 'limitWidth', 'gutter', 'children']);

  var getClasses = function getClasses() {
    return joinClassNames(styles$20.flexGrid, centre && styles$20.centre, limitWidth && styles$20.limitWidth);
  };

  return React.createElement(
    Broadcast,
    { channel: 'flex-grid', value: gutter },
    React.createElement(
      lib_5,
      _extends({}, safeRest(rest), { fluid: true, className: getClasses() }),
      children
    )
  );
};

FlexGrid.propTypes = {
  /**
   * Centres the grid horizontally. This is useful when using `limitWidth`.
   */
  centre: PropTypes.bool,
  /**
   * Whether or not to give the grid a fixed width.
   */
  limitWidth: PropTypes.bool,
  /**
   * Whether or not to include gutters in between columns.
   */
  gutter: PropTypes.bool,
  /**
   * The rows or columns of the Grid. Will typically be `FlexGrid.Row` or `FlexGrid.Col` components,
   * but could be other components such as a `Responsive` wrapper.
   */
  children: PropTypes.node.isRequired
};

FlexGrid.defaultProps = {
  centre: undefined,
  limitWidth: undefined,
  gutter: true
};

FlexGrid.Row = Row$1;
FlexGrid.Col = Col$1;

var styles$21 = { "sup": "TDS_Heading-modules__sup___2Xl0f TDS_Text-modules__baseSupSubScripts___15T2e", "h1": "TDS_Heading-modules__h1___3iBBg TDS_Typography-modules__wordBreak___21QZr TDS_Spacing-modules__noSpacing___4r12n", "h2": "TDS_Heading-modules__h2___3JmJV TDS_Typography-modules__wordBreak___21QZr TDS_Spacing-modules__noSpacing___4r12n", "smallHeading": "TDS_Heading-modules__smallHeading___20GPM TDS_Typography-modules__wordBreak___21QZr TDS_Spacing-modules__noSpacing___4r12n", "h3": "TDS_Heading-modules__h3___2e0rO TDS_Heading-modules__smallHeading___20GPM TDS_Typography-modules__wordBreak___21QZr TDS_Spacing-modules__noSpacing___4r12n", "h4": "TDS_Heading-modules__h4___ZzMdF TDS_Heading-modules__smallHeading___20GPM TDS_Typography-modules__wordBreak___21QZr TDS_Spacing-modules__noSpacing___4r12n", "inverted": "TDS_Heading-modules__inverted___IYSlC", "secondary": "TDS_Heading-modules__secondary___1BwoA", "default": "TDS_Heading-modules__default___SYOiV" };

/**
 * Superscript text for `Heading` an as HTML `<sup>` element.
 *
 * _This component can only be accessed as a name-spaced component: `Heading.Sup`._
 */
var HeadingSup = function HeadingSup(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'sup',
    _extends({}, safeRest(rest), { className: styles$21.sup }),
    children
  );
};

HeadingSup.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.string.isRequired
};

HeadingSup.displayName = 'Heading.Sup';

var BaseHeading = function BaseHeading(_ref) {
  var level = _ref.level,
      color = _ref.color,
      size = _ref.size,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['level', 'color', 'size', 'children']);
  return React.createElement(level, _extends({}, safeRest(rest), {
    className: joinClassNames(size, color)
  }), children);
};

BaseHeading.propTypes = {
  level: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']).isRequired,
  color: PropTypes.string.isRequired,
  size: PropTypes.string.isRequired,
  children: PropTypes.node.isRequired

  /**
   * Page headings. Renders an HTML `<h1-h4>` element.
   */
};var Heading = function Heading(_ref2) {
  var level = _ref2.level,
      invert = _ref2.invert,
      children = _ref2.children,
      rest = objectWithoutProperties(_ref2, ['level', 'invert', 'children']);

  var baseHeadingProps = _extends({}, rest, {
    level: level
  });

  if (level === 'h1' || level === 'h2') {
    var color = invert ? styles$21.inverted : styles$21.secondary;

    return React.createElement(
      BaseHeading,
      _extends({}, baseHeadingProps, { color: color, size: styles$21[level] }),
      children
    );
  }

  return React.createElement(
    BaseHeading,
    _extends({}, baseHeadingProps, {
      color: invert ? styles$21.inverted : styles$21.default,
      size: styles$21[level]
    }),
    children
  );
};

Heading.propTypes = {
  /**
   * The heading level.
   */
  level: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']).isRequired,
  /**
   * Invert the text color to appear light on dark backgrounds.
   */
  invert: PropTypes.bool,
  /**
   * The text. Can be text, other components, or HTML elements.
   */
  children: PropTypes.node.isRequired
};
Heading.defaultProps = {
  invert: false
};

Heading.Sup = HeadingSup;

var styles$22 = { "fluid": "TDS_Image-modules__fluid___3uF_X" };

var borderStyles = { "thin": "TDS_Borders-modules__thin___3wU-3", "none": "TDS_Borders-modules__none___uTgzs", "rounded": "TDS_Borders-modules__rounded___1M93U", "circular": "TDS_Borders-modules__circular___2Wn2f" };

/**
 *
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.32.0</span>
 */
var Image = function Image(_ref) {
  var src = _ref.src,
      width = _ref.width,
      height = _ref.height,
      alt = _ref.alt,
      rounded = _ref.rounded,
      rest = objectWithoutProperties(_ref, ['src', 'width', 'height', 'alt', 'rounded']);

  var isCircle = rounded === 'circle';
  var isSquare = width === height;

  var classes = joinClassNames(styles$22.fluid, rounded === 'corners' && borderStyles.rounded, isCircle && borderStyles.circular);

  if (isCircle && !isSquare) {
    warn('Image', 'rounded="circle" is not supported for non-square images. Please provide a square image, otherwise the resulting shape will not be a circle.');
  }

  return React.createElement('img', _extends({}, safeRest(rest), {
    src: src,
    width: width,
    height: height,
    alt: alt,
    className: classes
  }));
};

Image.propTypes = {
  /**
   * The src attribute for the HTML img element.
   */
  src: PropTypes.string.isRequired,
  /**
   * The alt attribute for the HTML img element. Setting this attribute to an empty string (alt="") indicates that this image is not a key part of the content, and that non-visual browsers may omit it from rendering.
   */
  alt: PropTypes.string.isRequired,
  /**
   * The image's width.
   */
  width: PropTypes.number.isRequired,
  /**
   * The image's height.
   */
  height: PropTypes.number.isRequired,
  /**
   * Apply rounding.
   */
  rounded: PropTypes.oneOf(['circle', 'corners'])
};

Image.defaultProps = {
  rounded: undefined
};

// DO NOT MODIFY THIS FILE. IT IS COPIED DIRECTLY FROM AN NPM PACKAGE

// This was copied from the element-closest polyfill: github.com/jonathantneal/closest
// This version does not attempt to polyfill `Element` because window.Element is not available server side. This version
// is less invasive.

var matches = function matches(element, selector) {
  var elements = (element.document || element.ownerDocument).querySelectorAll(selector);
  var index = 0;

  while (elements[index] && elements[index] !== element) {
    index += 1;
  }

  return Boolean(elements[index]);
};

var closest = function closest(element, selector) {
  var currentElement = element;

  while (currentElement && currentElement.nodeType === 1) {
    if (matches(currentElement, selector)) {
      return currentElement;
    }

    currentElement = currentElement.parentNode;
  }

  return null;
};

var mobileDeviceTapArea = 32; // https://www.w3.org/TR/mobile-accessibility-mapping/#touch-target-size-and-spacing
var touchAreaStyles = function touchAreaStyles(iconSize) {
  var length = (mobileDeviceTapArea - iconSize) / 2;

  return {
    padding: length + 'px',
    margin: '-' + length + 'px'
  };
};

/**
 * An icon that has meaning within the context of the page, which should be communicated to screen readers.
 */
var StandaloneIcon = function StandaloneIcon(_ref) {
  var symbol = _ref.symbol,
      variant = _ref.variant,
      size = _ref.size,
      onClick = _ref.onClick,
      a11yText = _ref.a11yText,
      rest = objectWithoutProperties(_ref, ['symbol', 'variant', 'size', 'onClick', 'a11yText']);

  var iconProps = {
    symbol: symbol,
    variant: variant,
    size: size,
    'aria-label': a11yText
  };

  if (onClick) {
    var needsExpandedTouchArea = size < mobileDeviceTapArea;

    return React.createElement(
      Clickable,
      _extends({}, safeRest(rest), {
        onClick: onClick,
        dangerouslyAddStyle: needsExpandedTouchArea ? touchAreaStyles(size) : undefined
      }),
      React.createElement(Icon, iconProps)
    );
  }

  return React.createElement(Icon, _extends({}, safeRest(rest), iconProps));
};

StandaloneIcon.propTypes = {
  /**
   * Name of the icon symbol.
   */
  symbol: PropTypes.oneOf(['caretDown', 'caretUp', 'checkmark', 'chevron', 'leftChevron', 'exclamationPointCircle', 'expander', 'hamburger', 'location', 'minus', 'plus', 'questionMarkCircle', 'spyglass', 'times']).isRequired,
  /**
   * The appearance of the Icon.
   */
  variant: PropTypes.oneOf(['primary', 'secondary', 'inverted', 'error']),
  /**
   * The icon size in pixels.
   */
  size: PropTypes.oneOf([16, 24, 48]),
  /**
   * Pass a handler to the icon to make it interactive. Wraps the icon with a `<button>`.
   */
  onClick: PropTypes.func,
  /**
   * A description of the icon for screen readers.
   */
  a11yText: PropTypes.string.isRequired
};

StandaloneIcon.defaultProps = {
  variant: undefined,
  size: 24,
  onClick: undefined
};

var camel2hyphen = function (str) {
  return str
          .replace(/[A-Z]/g, function (match) {
            return '-' + match.toLowerCase();
          })
          .toLowerCase();
};

var camel2hyphen_1 = camel2hyphen;

var isDimension = function (feature) {
  var re = /[height|width]$/;
  return re.test(feature);
};

var obj2mq = function (obj) {
  var mq = '';
  var features = Object.keys(obj);
  features.forEach(function (feature, index) {
    var value = obj[feature];
    feature = camel2hyphen_1(feature);
    // Add px to dimension features
    if (isDimension(feature) && typeof value === 'number') {
      value = value + 'px';
    }
    if (value === true) {
      mq += feature;
    } else if (value === false) {
      mq += 'not ' + feature;
    } else {
      mq += '(' + feature + ': ' + value + ')';
    }
    if (index < features.length-1) {
      mq += ' and ';
    }
  });
  return mq;
};

var json2mq = function (query) {
  var mq = '';
  if (typeof query === 'string') {
    return query;
  }
  // Handling array of media queries
  if (query instanceof Array) {
    query.forEach(function (q, index) {
      mq += obj2mq(q);
      if (index < query.length-1) {
        mq += ', ';
      }
    });
    return mq;
  }
  // Handling single media query
  return obj2mq(query);
};

var json2mq_1 = json2mq;

var Media_1 = createCommonjsModule(function (module, exports) {
'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var _react2 = _interopRequireDefault(React);



var _propTypes2 = _interopRequireDefault(PropTypes);



var _json2mq2 = _interopRequireDefault(json2mq_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Conditionally renders based on whether or not a media query matches.
 */
var Media = function (_React$Component) {
  _inherits(Media, _React$Component);

  function Media() {
    var _temp, _this, _ret;

    _classCallCheck(this, Media);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      matches: _this.props.defaultMatches
    }, _this.updateMatches = function () {
      return _this.setState({ matches: _this.mediaQueryList.matches });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Media.prototype.componentWillMount = function componentWillMount() {
    if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object') return;

    var query = this.props.query;


    if (typeof query !== 'string') query = (0, _json2mq2.default)(query);

    this.mediaQueryList = window.matchMedia(query);
    this.mediaQueryList.addListener(this.updateMatches);
    this.updateMatches();
  };

  Media.prototype.componentWillUnmount = function componentWillUnmount() {
    this.mediaQueryList.removeListener(this.updateMatches);
  };

  Media.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        render = _props.render;
    var matches = this.state.matches;


    return render ? matches ? render() : null : children ? typeof children === 'function' ? children(matches) : !Array.isArray(children) || children.length ? // Preact defaults to empty children array
    matches ? _react2.default.Children.only(children) : null : null : null;
  };

  return Media;
}(_react2.default.Component);

Media.propTypes = {
  defaultMatches: _propTypes2.default.bool,
  query: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.arrayOf(_propTypes2.default.object.isRequired)]).isRequired,
  render: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
};
Media.defaultProps = {
  defaultMatches: true
};
exports.default = Media;
});

unwrapExports(Media_1);

var reactMedia = createCommonjsModule(function (module) {
'use strict';



var _Media2 = _interopRequireDefault(Media_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: Remove in the next major release.
_Media2.default.Media = _Media2.default; /* eslint-env node */


module.exports = _Media2.default;
});

var Media = unwrapExports(reactMedia);

var breakpoints = {
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200

  /**
   * Respond to device features, most commonly the browser viewport size.
   */
};var Responsive = function Responsive(_ref) {
  var minWidth = _ref.minWidth,
      maxWidth = _ref.maxWidth,
      query = _ref.query,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['minWidth', 'maxWidth', 'query', 'children']);

  if (!minWidth && !maxWidth) {
    warn('Responsive', 'Responsive needs a minWidth or maxWith prop');
  }

  // Do it this way to not create an object where some keys have the value "undefined", which causes the generated media-query to be invalid.
  // (min-width: 300px) and (max-width: undefined) is bad :(
  // (min-width: 300px) is good :)
  var mediaQuery = {};
  if (minWidth) {
    mediaQuery.minWidth = breakpoints[minWidth];
  }
  if (maxWidth) {
    mediaQuery.maxWidth = breakpoints[maxWidth] - 1;
  }

  return React.createElement(
    Media,
    _extends({}, rest, { query: _extends({}, mediaQuery, query) }),
    children
  );
};

Responsive.propTypes = {
  /**
   * Set a min-width media query.
   */
  minWidth: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),
  /**
   * Set a max-width media query.
   */
  maxWidth: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),
  /**
   * An object containing any valid CSS media query characteristics. It will be converted to a CSS media query.
   * Use `query` if you need characteristics other than `minWidth` and `maxWidth`.
   *
   * Any `minWidth` or `maxWidth` values here will override the props by the same name.
   */
  query: PropTypes.object,
  /**
   * The content. Can be text, any HTML element, a function, or any component.
   */
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])
};

Responsive.defaultProps = {
  minWidth: undefined,
  maxWidth: undefined,
  query: {},
  children: undefined
};

var styles$23 = { "bubble": "TDS_Tooltip-modules__bubble___15PC9 TDS_Borders-modules__rounded___1M93U", "left": "TDS_Tooltip-modules__left___txPpj TDS_Tooltip-modules__bubble___15PC9 TDS_Borders-modules__rounded___1M93U", "right": "TDS_Tooltip-modules__right___3kKyN TDS_Tooltip-modules__bubble___15PC9 TDS_Borders-modules__rounded___1M93U", "full": "TDS_Tooltip-modules__full___2xRvk", "half": "TDS_Tooltip-modules__half___1RQSB", "quarter": "TDS_Tooltip-modules__quarter___3rsB5" };

var Bubble = function Bubble(_ref) {
  var id = _ref.id,
      direction = _ref.direction,
      width = _ref.width,
      open = _ref.open,
      children = _ref.children;

  var classes = joinClassNames(styles$23[direction], styles$23[width], !open && displayStyles.hide);

  return React.createElement(
    Box,
    {
      vertical: 2,
      horizontal: 3,
      dangerouslyAddClassName: classes,
      id: id,
      role: 'tooltip',
      'aria-live': 'assertive',
      'aria-hidden': open ? 'false' : 'true',
      'data-testid': 'bubble'
    },
    React.createElement(
      Text,
      { size: 'small' },
      children
    )
  );
};

Bubble.propTypes = {
  id: PropTypes.string.isRequired,
  direction: PropTypes.oneOf(['left', 'right']).isRequired,
  width: PropTypes.oneOf(['full', 'half', 'quarter']).isRequired,
  open: PropTypes.bool.isRequired,
  children: PropTypes.node.isRequired
};

var iconWrapperStyles = { "fixLineHeight": "TDS_IconWrapper-modules__fixLineHeight___UNTfr" };

var getTriggerA11yText = function getTriggerA11yText(connectedFieldLabel) {
  if (!connectedFieldLabel) {
    return 'Reveal additional information.';
  }

  return 'Reveal additional information about ' + connectedFieldLabel + '.';
};

var getIds = function getIds(connectedFieldLabel) {
  var id = generateId(connectedFieldLabel, 'unknown-field');

  return {
    bubbleId: id.postfix('tooltip'),
    triggerId: id.postfix('trigger')
  };
};

/**
 * Provide an explanation or instructions for a form field that most users do not need.
 */

var Tooltip = function (_React$Component) {
  inherits(Tooltip, _React$Component);

  function Tooltip() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, Tooltip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.toggleBubbleOnOutsideEvent = function (event) {
      var connectedFieldLabel = _this.props.connectedFieldLabel;

      var _getIds = getIds(connectedFieldLabel),
          bubbleId = _getIds.bubbleId,
          triggerId = _getIds.triggerId;

      var inBubble = closest(event.target, '#' + bubbleId);
      var inTrigger = closest(event.target, '#' + triggerId);

      if (!inBubble && !inTrigger) {
        _this.toggleBubble();
      }
    }, _this.toggleBubble = function () {
      _this.setState(function (_ref2) {
        var open = _ref2.open;

        return { open: !open };
      });
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(Tooltip, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.state.open) {
        document.addEventListener('click', this.toggleBubbleOnOutsideEvent);
        document.addEventListener('keypress', this.toggleBubbleOnOutsideEvent);
      } else {
        document.removeEventListener('click', this.toggleBubbleOnOutsideEvent);
        document.removeEventListener('keypress', this.toggleBubbleOnOutsideEvent);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.removeEventListener('click', this.toggleBubbleOnOutsideEvent);
      document.removeEventListener('keypress', this.toggleBubbleOnOutsideEvent);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          direction = _props.direction,
          connectedFieldLabel = _props.connectedFieldLabel,
          children = _props.children,
          rest = objectWithoutProperties(_props, ['direction', 'connectedFieldLabel', 'children']);

      var _getIds2 = getIds(connectedFieldLabel),
          bubbleId = _getIds2.bubbleId,
          triggerId = _getIds2.triggerId;

      return React.createElement(
        'div',
        _extends({}, safeRest(rest), { className: iconWrapperStyles.fixLineHeight }),
        React.createElement(StandaloneIcon, {
          symbol: 'questionMarkCircle',
          a11yText: getTriggerA11yText(connectedFieldLabel),
          onClick: this.toggleBubble,
          id: triggerId,
          'aria-controls': bubbleId,
          'aria-haspopup': 'true',
          'aria-expanded': this.state.open ? 'true' : 'false'
        }),
        React.createElement(Responsive, {
          defaultMatches: true,
          maxWidth: 'sm',
          render: function render() {
            return React.createElement(
              Bubble,
              { id: bubbleId, direction: 'left', width: 'full', open: _this2.state.open },
              children
            );
          }
        }),
        React.createElement(Responsive, {
          defaultMatches: false,
          minWidth: 'sm',
          maxWidth: 'md',
          render: function render() {
            return React.createElement(
              Bubble,
              { id: bubbleId, direction: 'left', width: 'half', open: _this2.state.open },
              children
            );
          }
        }),
        React.createElement(Responsive, {
          defaultMatches: false,
          minWidth: 'md',
          render: function render() {
            return React.createElement(
              Bubble,
              { id: bubbleId, direction: direction, width: 'quarter', open: _this2.state.open },
              children
            );
          }
        })
      );
    }
  }]);
  return Tooltip;
}(React.Component);

Tooltip.propTypes = {
  /**
   * Open the bubble to the left or right of the trigger.
   */
  direction: PropTypes.oneOf(['left', 'right']),
  /**
   * The input field that using this tooltip must pass its label so that the tooltip trigger can connect itself. Do not
   * show this prop as it is not part of the public API. If this prop is not specified, the tooltip will generate
   * a generic ID, which could produce duplicate ids.
   *
   * @ignore
   */
  connectedFieldLabel: PropTypes.string,
  /**
   * The message. Can be raw text or text components.
   */
  children: PropTypes.node.isRequired
};

Tooltip.defaultProps = {
  direction: 'right',
  connectedFieldLabel: undefined
};

var styles$24 = { "alignCenter": "TDS_FormField-modules__alignCenter___2rnIi", "formField": "TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL", "defaultBoxShadow": "TDS_FormField-modules__defaultBoxShadow___1Mv1N", "defaultBgColor": "TDS_FormField-modules__defaultBgColor___1ns7C", "default": "TDS_FormField-modules__default___3c33z TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL TDS_FormField-modules__defaultBgColor___1ns7C TDS_FormField-modules__defaultBoxShadow___1Mv1N", "disabled": "TDS_FormField-modules__disabled___1REss TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL", "focus": "TDS_FormField-modules__focus___2jPLC TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL TDS_FormField-modules__defaultBgColor___1ns7C", "success": "TDS_FormField-modules__success___3U7SO TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL TDS_FormField-modules__defaultBgColor___1ns7C TDS_FormField-modules__defaultBoxShadow___1Mv1N", "error": "TDS_FormField-modules__error___X8SPe TDS_FormField-modules__formField___22c02 TDS_Box-modules__verticalPadding-2___2DGIc TDS_Box-modules__horizontalPadding-3___1QMrv TDS_Borders-modules__thin___3wU-3 TDS_Borders-modules__rounded___1M93U TDS_Forms-modules__font___sDGt2 TDS_Text-modules__medium___1SwM7 TDS_Typography-modules__wordBreak___21QZr TDS_Text-modules__mediumFont___1V1x7 TDS_Text-modules__color___Qi2FL TDS_FormField-modules__defaultBgColor___1ns7C TDS_FormField-modules__defaultBoxShadow___1Mv1N", "iconRight": "TDS_FormField-modules__iconRight___1AdPe" };

var positionStyles = { "relative": "TDS_Position-modules__relative___2Mmek", "absolute": "TDS_Position-modules__absolute___3xAGg", "centerVertically": "TDS_Position-modules__centerVertically___2KxcG" };

var getClassName$4 = function getClassName(feedback, focus, disabled) {
  if (disabled) {
    return styles$24.disabled;
  }

  if (focus) {
    return styles$24.focus;
  }

  if (feedback) {
    return styles$24[feedback];
  }

  return styles$24.default;
};

var showFeedbackIcon = function showFeedbackIcon(feedback, focus) {
  return (feedback === 'success' || feedback === 'error') && !focus;
};

var renderLabel$1 = function renderLabel(label, hint, fieldId) {
  return React.createElement(
    'label',
    { htmlFor: fieldId.identity() },
    React.createElement(
      Box,
      { inline: true, tag: 'span', between: 2, dangerouslyAddClassName: styles$24.alignCenter },
      React.createElement(
        Text,
        { size: 'medium', bold: true },
        label
      ),
      hint && React.createElement(
        Text,
        { size: 'small' },
        hint
      )
    )
  );
};
var renderError$1 = function renderError(error, errorId) {
  return React.createElement(
    InputFeedback,
    { id: errorId, feedback: 'error' },
    React.createElement(
      Paragraph,
      { size: 'small' },
      error
    )
  );
};

var renderHelper = function renderHelper(helper, helperId, feedback, value) {
  if (typeof helper === 'function') {
    return React.createElement(
      'div',
      { id: helperId },
      React.createElement(
        Text,
        { size: 'small' },
        helper(feedback, value)
      )
    );
  }

  return React.createElement(
    InputFeedback,
    { id: helperId, feedback: feedback },
    React.createElement(
      Text,
      { size: 'small' },
      helper
    )
  );
};

var FormField = function (_React$Component) {
  inherits(FormField, _React$Component);

  function FormField() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, FormField);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FormField.__proto__ || Object.getPrototypeOf(FormField)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      value: _this.props.value,
      focus: false
    }, _this.onChange = function (event) {
      var onChange = _this.props.onChange;


      event.persist();

      _this.setState({
        value: event.target.value
      }, function () {
        if (onChange) {
          onChange(event);
        }
      });
    }, _this.onFocus = function (event) {
      var onFocus = _this.props.onFocus;


      _this.setState({ focus: true });

      if (onFocus) {
        onFocus(event);
      }
    }, _this.onBlur = function (event) {
      var onBlur = _this.props.onBlur;


      _this.setState({ focus: false });

      if (onBlur) {
        onBlur(event);
      }
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(FormField, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.value !== nextProps.value) {
        this.setState({
          value: nextProps.value
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          hint = _props.hint,
          feedback = _props.feedback,
          error = _props.error,
          helper = _props.helper,
          tooltip = _props.tooltip,
          children = _props.children,
          rest = objectWithoutProperties(_props, ['label', 'hint', 'feedback', 'error', 'helper', 'tooltip', 'children']);


      var fieldId = generateId(rest.id, rest.name, label);
      var helperId = helper && fieldId.postfix('helper');
      var errorId = error && fieldId.postfix('error-message');

      var showIcon = showFeedbackIcon(feedback, this.state.focus);

      return React.createElement(
        Box,
        { between: 2 },
        React.createElement(
          Flexbox,
          {
            direction: 'row',
            justifyContent: 'spaceBetween',
            dangerouslyAddClassName: positionStyles.relative
          },
          renderLabel$1(label, hint, fieldId),
          tooltip && React.cloneElement(tooltip, { connectedFieldLabel: label })
        ),
        helper && renderHelper(helper, helperId, feedback, this.state.value),
        error && renderError$1(error, errorId),
        children(_extends({}, safeRest(rest), {
          id: fieldId.identity(),
          className: getClassName$4(feedback, this.state.focus, rest.disabled),
          value: this.state.value,
          onChange: this.onChange,
          onFocus: this.onFocus,
          onBlur: this.onBlur,
          'aria-invalid': feedback === 'error',
          'aria-describedby': errorId || helperId || undefined
        }), showIcon, feedback)
      );
    }
  }]);
  return FormField;
}(React.Component);

FormField.propTypes = {
  label: PropTypes.string.isRequired,
  hint: PropTypes.string,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
  feedback: PropTypes.oneOf(['success', 'error']),
  error: PropTypes.string,
  helper: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  tooltip: airbnbPropTypes_1(Tooltip),
  onChange: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  children: PropTypes.func.isRequired
};

FormField.defaultProps = {
  hint: undefined,
  feedback: undefined,
  error: undefined,
  helper: undefined,
  tooltip: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

// Based off of the Fade example at https://reactcommunity.org/react-transition-group/

var defaultStyle$2 = function defaultStyle(timeout) {
  return {
    transition: 'opacity ' + timeout + 'ms ease-in-out',
    opacity: 0
  };
};

var transitionStyles$2 = {
  entering: { opacity: 0 },
  entered: { opacity: 1 }
};

var Fade = function Fade(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    reactTransitionGroup_1,
    rest,
    function (status) {
      return React.createElement(
        'div',
        {
          style: _extends({}, defaultStyle$2(rest.timeout), transitionStyles$2[status])
        },
        children()
      );
    }
  );
};
Fade.propTypes = {
  timeout: PropTypes.number.isRequired,
  children: PropTypes.func.isRequired
};

var renderIcon = function renderIcon(feedback) {
  if (feedback === 'success') {
    return React.createElement(StandaloneIcon, {
      symbol: 'checkmark',
      variant: 'primary',
      size: 16,
      a11yText: 'The value of this input field is valid.'
    });
  } else if (feedback === 'error') {
    return React.createElement(StandaloneIcon, {
      symbol: 'exclamationPointCircle',
      variant: 'error',
      size: 16,
      a11yText: 'The value of this input field is invalid.'
    });
  }
  return null;
};

var FeedbackIcon = function FeedbackIcon(_ref) {
  var showIcon = _ref.showIcon,
      feedback = _ref.feedback;
  return React.createElement(
    Fade,
    { timeout: 100, 'in': showIcon, mountOnEnter: true, unmountOnExit: true },
    function () {
      return React.createElement(
        'div',
        { className: iconWrapperStyles.fixLineHeight },
        renderIcon(feedback)
      );
    }
  );
};
FeedbackIcon.propTypes = {
  showIcon: PropTypes.bool.isRequired,
  feedback: PropTypes.oneOf(['success', 'error'])
};
FeedbackIcon.defaultProps = {
  feedback: undefined
};

var betweenSpacing = 1; // rem
var iconWidth = 16; // px

var addRightPadding = (function (numberOfIcons) {
  if (numberOfIcons === 0) {
    return undefined;
  }

  return {
    paddingRight: "calc(" + iconWidth * numberOfIcons + "px + " + betweenSpacing * (numberOfIcons + 1) + "rem)"
  };
});

var styles$25 = { "hideNumberSpinner": "TDS_Input-modules__hideNumberSpinner___2zW7v", "iconsPosition": "TDS_Input-modules__iconsPosition___3HBJg TDS_Position-modules__absolute___3xAGg TDS_Position-modules__centerVertically___2KxcG TDS_FormField-modules__iconRight___1AdPe", "input": "TDS_Input-modules__input___ylY2W" };

/**
 * <span class="docs--badge__updated">updated</span> <span class="docs--badge__version">v0.33.0</span>
 */
var Input = function Input(props) {
  return React.createElement(
    FormField,
    props,
    function (_ref, showFeedbackIcon, feedback) {
      var className = _ref.className,
          inputProps = objectWithoutProperties(_ref, ['className']);
      return React.createElement(
        'div',
        { className: positionStyles.relative },
        React.createElement('input', _extends({}, inputProps, {
          className: joinClassNames(className, styles$25.hideNumberSpinner, styles$25.input),
          style: addRightPadding(showFeedbackIcon ? 1 : 0)
        })),
        !inputProps.disabled && React.createElement(
          'div',
          { className: styles$25.iconsPosition },
          React.createElement(FeedbackIcon, { showIcon: showFeedbackIcon, feedback: feedback })
        )
      );
    }
  );
};

Input.propTypes = {
  /**
   * The HTML5 type of the input field.
   */
  type: PropTypes.oneOf(['text', 'number', 'password', 'email', 'search', 'tel', 'url']),
  /**
   * The label.
   */
  label: PropTypes.string.isRequired,
  /**
   * Clarify the expected input.
   */
  hint: PropTypes.string,
  /**
   * The value.
   */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * A feedback state.
   */
  feedback: PropTypes.oneOf(['success', 'error']),
  /**
   * An error message. Either an error or a helper should be used, not both.
   */
  error: PropTypes.string,
  /**
   * A detailed explanation of the input expected by a form field. Can be text,
   * other components, or HTML elements.
   *
   * If a function is provided, it must return an `InputFeedback`. The function will be
   * invoked with arguments below.
   *
   * **Deprecation:** As of v1.0.0, passing `Input.Helper` will no longer work.
   *
   * @param {String} feedback The input's current feedback state.
   * @param {String} value The input's current value.
   */
  helper: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  /**
   * A `Tooltip`
   */
  tooltip: airbnbPropTypes_1(Tooltip),
  /**
   * A callback function to be invoked when the input value changes.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onChange: PropTypes.func,
  /**
   * A callback function to be invoked when the input receives focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onFocus: PropTypes.func,
  /**
   * A callback function to be invoked when the input loses focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onBlur: PropTypes.func
};

Input.defaultProps = {
  type: 'text',
  hint: undefined,
  value: '',
  feedback: undefined,
  error: undefined,
  helper: undefined,
  tooltip: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined

  // TODO: This will no longer necessary once InputFeedback is exported on its own. Removing this will be a breaking change.
};Input.Helper = InputFeedback;

var styles$26 = { "underlineOnHover": "TDS_Link-modules__underlineOnHover___1YcPa", "base": "TDS_Link-modules__base___27HxT TDS_Link-modules__underlineOnHover___1YcPa TDS_Links-modules__focusOutline___5sv7Y", "inverted": "TDS_Link-modules__inverted___1IlME TDS_Link-modules__underlineOnHover___1YcPa", "inheritColor": "TDS_Link-modules__inheritColor___3l0KM TDS_Link-modules__underlineOnHover___1YcPa" };

var getClassName$5 = function getClassName(invert, context) {
  if (context.inheritColor) {
    return styles$26.inheritColor;
  } else if (invert) {
    return styles$26.inverted;
  }

  return styles$26.base;
};

var Link = function Link(_ref, context) {
  var reactRouterLinkComponent = _ref.reactRouterLinkComponent,
      invert = _ref.invert,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['reactRouterLinkComponent', 'invert', 'children']);

  if (!(reactRouterLinkComponent && rest.to) && (reactRouterLinkComponent || rest.to)) {
    warn('Link', 'The props `reactRouterLinkComponent` and `to` must be used together.');
  }

  return React.createElement(reactRouterLinkComponent || 'a', _extends({}, safeRest(rest), {
    className: getClassName$5(invert, context)
  }), children);
};
Link.propTypes = {
  /**
   * React Router Link component.
   */
  reactRouterLinkComponent: PropTypes.func,
  /**
   * Target URL (if using 'reactRouterLinkComponent')
   */
  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  /**
   * Target URL.
   */
  href: PropTypes.string,
  /**
    * Invert link style to appear light on dark backgrounds.
    */
  invert: PropTypes.bool,
  /**
   * Link text.
   */
  children: PropTypes.node.isRequired
};
Link.defaultProps = {
  reactRouterLinkComponent: null,
  to: null,
  href: null,
  invert: false
};

Link.contextTypes = {
  inheritColor: PropTypes.bool
};

var styles$27 = { "instructional": "TDS_Notification-modules__instructional___3FHHj TDS_Messaging-modules__default___3w5Ya", "branded": "TDS_Notification-modules__branded___3tmFL", "success": "TDS_Notification-modules__success___3SYVb TDS_Messaging-modules__success___1dft0", "error": "TDS_Notification-modules__error___3umY_ TDS_Messaging-modules__error___2tAMl", "withoutIcon": "TDS_Notification-modules__withoutIcon___31c-_", "withIcon": "TDS_Notification-modules__withIcon___3BG2Y" };

var iconByVariant = {
  success: {
    symbol: 'checkmark',
    color: 'primary'
  },
  error: {
    symbol: 'exclamationPointCircle',
    color: 'error'
  }
};

var isImportant = function isImportant(variant) {
  return variant === 'success' || variant === 'error';
};

var renderIcon$1 = function renderIcon(icon) {
  return React.createElement(DecorativeIcon, { symbol: icon.symbol, variant: icon.color });
};

/**
 * A banner that highlights important messages.
 */
var Notification = function Notification(_ref) {
  var variant = _ref.variant,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['variant', 'children']);
  return React.createElement(
    Box,
    _extends({}, safeRest(rest), { vertical: 3, dangerouslyAddClassName: styles$27[variant] }),
    React.createElement(
      FlexGrid,
      { limitWidth: true },
      React.createElement(
        FlexGrid.Row,
        null,
        React.createElement(
          FlexGrid.Col,
          null,
          React.createElement(
            Box,
            { inline: true, between: 3 },
            isImportant(variant) ? renderIcon$1(iconByVariant[variant]) : undefined,
            React.createElement(
              'div',
              {
                className: joinClassNames(isImportant(variant) ? styles$27.withIcon : styles$27.withoutIcon)
              },
              React.createElement(
                Paragraph,
                { bold: isImportant(variant) },
                children
              )
            )
          )
        )
      )
    )
  );
};

Notification.propTypes = {
  /**
   * The appearance.
   */
  variant: PropTypes.oneOf(['instructional', 'branded', 'success', 'error']),
  /**
   * The message. Can be raw text or text components.
   */
  children: PropTypes.node.isRequired
};

Notification.defaultProps = {
  variant: 'instructional'
};

var OrderedItem = function OrderedItem(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'li',
    safeRest(rest),
    children
  );
};

OrderedItem.propTypes = {
  children: PropTypes.node.isRequired
};

OrderedItem.displayName = 'OrderedList.Item';

var styles$28 = { "decimal": "TDS_OrderedList-modules__decimal___3xYPW TDS_List-modules__base___OtWYp", "upperAlpha": "TDS_OrderedList-modules__upperAlpha___K0PG6 TDS_List-modules__base___OtWYp", "lowerAlpha": "TDS_OrderedList-modules__lowerAlpha___1ErTZ TDS_List-modules__base___OtWYp" };

var OrderedList = function OrderedList(_ref) {
  var listStyle = _ref.listStyle,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['listStyle', 'children']);
  return React.createElement(
    Box,
    _extends({}, safeRest(rest), { tag: 'ol', between: 2, dangerouslyAddClassName: styles$28[listStyle] }),
    children
  );
};

OrderedList.propTypes = {
  /**
   * The bullet style.
   */
  listStyle: PropTypes.oneOf(['decimal', 'upperAlpha', 'lowerAlpha']),
  /**
   * The list items. Must be at least one `OrderedList.Item`.
   */
  children: airbnbPropTypes_1(OrderedItem).isRequired
};

OrderedList.defaultProps = {
  listStyle: 'decimal'
};

OrderedList.Item = OrderedItem;

var styles$29 = { "disabled": "TDS_Radio-modules__disabled___181ZW", "checked": "TDS_Radio-modules__checked___24F_d", "disabledChecked": "TDS_Radio-modules__disabledChecked___3C373", "inner": "TDS_Radio-modules__inner___WMC1R TDS_Borders-modules__circular___2Wn2f", "innerChecked": "TDS_Radio-modules__innerChecked___3_--U TDS_Radio-modules__inner___WMC1R TDS_Borders-modules__circular___2Wn2f", "innerDisabledChecked": "TDS_Radio-modules__innerDisabledChecked___3gR5a TDS_Radio-modules__inner___WMC1R TDS_Borders-modules__circular___2Wn2f" };

/**
 *
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.32.0</span>
 */
var Radio = function Radio(props) {
  return React.createElement(
    Choice,
    _extends({}, props, { type: 'radio', inputTypeStyles: styles$29 }),
    function (checked, disabled) {
      return checked && React.createElement('span', {
        className: disabled ? styles$29.innerDisabledChecked : styles$29.innerChecked,
        'data-testid': 'fake-inner-radio'
      });
    }
  );
};

Radio.propTypes = {
  /**
   * The label.
   */
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,
  /**
   * Associate this radio with a group. Set as the HTML name attribute.
   */
  name: PropTypes.string.isRequired,
  /**
   * The value. Must be unique within the group.
   */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
  /**
   * The checked state
   */
  checked: PropTypes.bool,
  /**
   * A feedback state.
   */
  feedback: PropTypes.oneOf(['error']),
  /**
   * A callback function to be invoked when the radio is checked or unchecked.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onChange: PropTypes.func,
  /**
   * A callback function to be invoked when the radio receives focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onFocus: PropTypes.func,
  /**
   * A callback function to be invoked when the radio loses focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onBlur: PropTypes.func
};

Radio.defaultProps = {
  checked: false,
  feedback: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

var styles$30 = { "wrapper": "TDS_Select-modules__wrapper___1JXEc TDS_Position-modules__relative___2Mmek", "select": "TDS_Select-modules__select___3tBkk TDS_Forms-modules__height___2059u", "iconsPosition": "TDS_Select-modules__iconsPosition___3jpI0 TDS_Position-modules__absolute___3xAGg TDS_Position-modules__centerVertically___2KxcG TDS_FormField-modules__iconRight___1AdPe" };

/**
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.33.0</span>
 */
var Select = function Select(_ref) {
  var options = _ref.options,
      placeholder = _ref.placeholder,
      props = objectWithoutProperties(_ref, ['options', 'placeholder']);
  return React.createElement(
    FormField,
    props,
    function (_ref2, showFeedbackIcon, feedback) {
      var className = _ref2.className,
          selectProps = objectWithoutProperties(_ref2, ['className']);
      return React.createElement(
        'div',
        { className: styles$30.wrapper },
        React.createElement(
          'select',
          _extends({}, selectProps, {
            className: joinClassNames(className, styles$30.select),
            style: addRightPadding(showFeedbackIcon ? 2 : 1)
          }),
          placeholder && React.createElement(
            'option',
            { value: '', disabled: true },
            placeholder
          ),
          options.map(function (_ref3) {
            var text = _ref3.text,
                value = _ref3.value;
            return React.createElement(
              'option',
              { key: value, value: value },
              text
            );
          })
        ),
        !selectProps.disabled && React.createElement(
          Box,
          { inline: true, between: 3, dangerouslyAddClassName: styles$30.iconsPosition },
          React.createElement(FeedbackIcon, { showIcon: showFeedbackIcon, feedback: feedback }),
          React.createElement(
            'div',
            { className: iconWrapperStyles.fixLineHeight },
            React.createElement(DecorativeIcon, {
              symbol: 'caretDown',
              variant: feedback === 'error' ? 'error' : 'primary',
              size: 16
            })
          )
        )
      );
    }
  );
};

Select.propTypes = {
  /**
   * The selectable options.
   */
  options: PropTypes.arrayOf(PropTypes.shape({
    text: PropTypes.string,
    value: PropTypes.string
  })).isRequired,
  /**
   * The label.
   */
  label: PropTypes.string.isRequired,
  /**
   * Clarify the expected input.
   */
  hint: PropTypes.string,
  /**
   * Show a un-selectable initial option.
   */
  placeholder: PropTypes.string,
  /**
   * The value.
   */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
   * A feedback state.
   */
  feedback: PropTypes.oneOf(['success', 'error']),
  /**
   * An error message. Either an error or a helper should be used, not both.
   */
  error: PropTypes.string,
  /**
   * A detailed explanation of the input expected by a form field. Can be text,
   * other components, or HTML elements.
   *
   * If a function is provided, it must return an `InputFeedback` component. The function will be
   * invoked with the following arguments.
   *
   * @param {String} feedback The input's current feedback state.
   * @param {String} value The input's current value.
   */
  helper: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  /**
   * A `Tooltip`
   */
  tooltip: airbnbPropTypes_1(Tooltip),
  /**
   * A callback function to be invoked when the input value changes.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onChange: PropTypes.func,
  /**
   * A callback function to be invoked when the input receives focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onFocus: PropTypes.func,
  /**
   * A callback function to be invoked when the input loses focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onBlur: PropTypes.func
};

Select.defaultProps = {
  hint: undefined,
  placeholder: undefined,
  value: '',
  feedback: undefined,
  error: undefined,
  helper: undefined,
  tooltip: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ('object' !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {
		// register as 'classnames', consistent with npm package name
		undefined('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());
});

/**
 * CounterButton is an element that can be clicked in order to change the
 * value of a SelectorCounter.
 */

var propTypes$1 = {
  label: PropTypes.string,
  icon: PropTypes.string,
  onClick: PropTypes.func,
  disabled: PropTypes.bool
};

var defaultProps = {
  label: 'Change value',
  icon: 'caret-up',
  onClick: function onClick() {},
  disabled: false
};

var noop$1 = function noop() {};

function counterButton(props) {
  var label = props.label,
      icon = props.icon,
      onClick = props.onClick,
      disabled = props.disabled,
      extraProps = objectWithoutProperties(props, ['label', 'icon', 'onClick', 'disabled']);


  return React.createElement(
    'button',
    _extends({
      'aria-label': label,
      className: 'selector-counter__plain-button selector-counter__button',
      onClick: disabled ? noop$1 : onClick,
      disabled: disabled
    }, extraProps),
    React.createElement('i', { className: 'selector-counter__icon icon icon-core-' + icon })
  );
}

counterButton.propTypes = propTypes$1;

counterButton.defaultProps = defaultProps;

/**
 * Choose a number.
 */

var SelectorCounter = function (_Component) {
  inherits(SelectorCounter, _Component);

  function SelectorCounter() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, SelectorCounter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = SelectorCounter.__proto__ || Object.getPrototypeOf(SelectorCounter)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      value: _this.props.defaultValue
    }, _this.handleChange = function (value) {
      _this.setState({ value: value });

      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(value);
      }
    }, _this.handleIncrement = function (event) {
      event.preventDefault();
      _this.handleChange(parseInt(_this.state.value, 10) + 1);
    }, _this.handleDecrement = function (event) {
      event.preventDefault();
      _this.handleChange(parseInt(_this.state.value, 10) - 1);
    }, _this.handleInput = function (event) {
      _this.handleChange(event.target.value);
    }, _this.focus = function () {
      _this.input.focus();
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  /**
   * Handle the "increment" button
   * @param event
   */


  /**
   * Handle the "decrement" button
   * @param event
   */


  /**
   * Handle when the user types in a freeform value
   * @param event
   */


  createClass(SelectorCounter, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          contextPrefix = _props.contextPrefix,
          contextSuffix = _props.contextSuffix,
          incrementorLabel = _props.incrementorLabel,
          decrementorLabel = _props.decrementorLabel,
          disabled = _props.disabled,
          id = _props.id,
          invalid = _props.invalid,
          max = _props.max,
          min = _props.min,
          successful = _props.successful;

      var value = this.state.value;

      var cssClasses = {
        'selector-counter--disabled': disabled,
        'selector-counter--error': invalid,
        'selector-counter--successful': successful
        /* eslint-disable */
      };return React.createElement(
        'div',
        { className: classnames('selector-counter', className, cssClasses) },
        React.createElement(
          'div',
          { className: 'accessible-hide', 'aria-live': 'assertive', 'aria-atomic': 'true' },
          contextPrefix + ' ' + value + ' ' + contextSuffix
        ),
        React.createElement('input', {
          ref: function ref(input) {
            return _this2.input = input;
          },
          id: id,
          type: 'number',
          pattern: '\\d*',
          value: value,
          className: 'selector-counter__value',
          disabled: disabled,
          onChange: this.handleInput,
          max: max,
          min: min,
          'aria-invalid': invalid,
          'aria-labelledby': this.props['aria-labelledby'],
          'aria-describedby': this.props['aria-describedby']
        }),
        React.createElement(counterButton, {
          label: incrementorLabel,
          icon: 'caret-up',
          onClick: this.handleIncrement,
          disabled: disabled === true || typeof max === 'number' && value >= max,
          'aria-controls': id
        }),
        React.createElement(counterButton, {
          label: decrementorLabel,
          icon: 'caret-down',
          onClick: this.handleDecrement,
          disabled: disabled === true || value <= min,
          'aria-controls': id
        })
      );
      /* eslint-enable */
    }
  }]);
  return SelectorCounter;
}(Component);

SelectorCounter.propTypes = {
  /**
   * A unique HTML ID for the input element.
   */
  id: PropTypes.string,
  /**
   * One or more CSS class names separated by spaces to append onto the container.
   * Don't advertise as we plan on removing this feature soon.
   *
   * @ignore
   */
  className: PropTypes.string, // eslint-disable-line react/require-default-props
  /**
   * The initial value.
   */
  defaultValue: PropTypes.number,
  /**
   * The maximum allowed value.
   */
  max: PropTypes.number,
  /**
   * The minimum allowed value.
   */
  min: PropTypes.number,
  /**
   * An accessibility label for the incrementor button.
   */
  incrementorLabel: PropTypes.string,
  /**
   * An accessibility label for the decrementor button.
   */
  decrementorLabel: PropTypes.string,
  /**
   * A callback to be invoked when the value changes.
   *
   * @param {number} value The value.
   */
  onChange: PropTypes.func, // eslint-disable-line react/require-default-props
  /**
   * Whether or not to disable the input.
   */
  disabled: PropTypes.bool,
  /**
   * If true, marks the input as invalid.
   */
  invalid: PropTypes.bool,
  /**
   * If true, marks the input as successful.
   */
  successful: PropTypes.bool,
  /**
   * Accessible text prefix for the change event announcement.
   */
  contextPrefix: PropTypes.string,
  /**
   *
   * Accessible text suffix for the change event announcement.
   */
  contextSuffix: PropTypes.string
};

SelectorCounter.defaultProps = {
  defaultValue: 0,
  max: null,
  min: 0,
  id: 'sc' + Math.ceil(Math.random() * 10000),
  incrementorLabel: 'Increase value',
  decrementorLabel: 'Decrease value',
  disabled: false,
  invalid: false,
  successful: false,
  contextPrefix: '',
  contextSuffix: ''
};

/**
 * Small print, such as copyright and legal text.
 */
var Small = function Small(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'small',
    _extends({}, safeRest(rest), { className: styles$4.small + ' ' + styles$4.smallFont }),
    children
  );
};

Small.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.string.isRequired
};

/**
 * A waiting indicator.
 */

var Spinner = function (_Component) {
  inherits(Spinner, _Component);

  function Spinner() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, Spinner);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Spinner.__proto__ || Object.getPrototypeOf(Spinner)).call.apply(_ref, [this].concat(args))), _this), _this.getSpinWrapper = function (spinEl, spinning, wrapperClassNames) {
      var containerCls = classnames('spinner-container', {
        'spinner-container--loading': spinning
      }, wrapperClassNames);
      return React.createElement(
        'div',
        { className: 'spinner-wrapper' },
        spinning && React.createElement('div', { className: 'spinner-wrapper__content-blocker' }),
        spinEl,
        React.createElement(
          'div',
          { className: containerCls },
          _this.props.children
        )
      );
    }, _this.getSpinElement = function (spinning, tip, fullScreen) {
      var cls = classnames('spinner', {
        'spinner--spinning': spinning,
        'spinner--full-screen': fullScreen
      });
      return React.createElement(
        'div',
        { className: cls },
        fullScreen && React.createElement('div', { className: 'spinner__full-screen-layer' }),
        React.createElement(
          'svg',
          { className: 'spinner__svg', viewBox: '0 0 100 100', width: '0', height: '0' },
          React.createElement('circle', {
            className: 'spinner__circle',
            stroke: '#177a00',
            strokeWidth: '4',
            fill: 'none',
            strokeLinecap: 'round',
            strokeDasharray: '89, 200',
            strokeDashoffset: '0',
            cx: '50',
            cy: '50',
            r: '20'
          })
        ),
        tip && React.createElement(
          'div',
          { className: 'spinner__tip' },
          tip
        )
      );
    }, _this.enableBodyScrolling = function () {
      document.body.style.overflow = 'inherit';
    }, _this.disableBodyScrolling = function () {
      document.body.style.overflow = 'hidden';
    }, _this.isNestedPattern = function () {
      return !!(_this.props && _this.props.children);
    }, _this.toggleBodyScrolling = function (_ref2) {
      var fullScreen = _ref2.fullScreen,
          spinning = _ref2.spinning;

      if (fullScreen === true && spinning === true) {
        _this.disableBodyScrolling();
      } else {
        _this.enableBodyScrolling();
      }
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(Spinner, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.toggleBodyScrolling(this.props);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.toggleBodyScrolling(this.props);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.enableBodyScrolling();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          spinning = _props.spinning,
          tip = _props.tip,
          wrapperClassNames = _props.wrapperClassNames,
          fullScreen = _props.fullScreen;

      if (this.isNestedPattern()) {
        return this.getSpinWrapper(this.getSpinElement(spinning, tip, fullScreen), spinning, wrapperClassNames);
      }
      return this.getSpinElement(spinning, tip, fullScreen);
    }
  }]);
  return Spinner;
}(Component);

Spinner.propTypes = {
  /**
   * Additional class names to add custom styling to the container while in embedded mode.
   */
  wrapperClassNames: PropTypes.string,
  /**
   * A message to display along with the spinner animation.
   */
  tip: PropTypes.string, // eslint-disable-line react/require-default-props
  /**
   * Whether or not to display the component.
   */
  spinning: PropTypes.bool,
  /**
   * Whether or not to display as a full screen overlay.
   */
  fullScreen: PropTypes.bool,
  /**
   * Content to be overlaid when the spinner is active. Can be text, any HTML element,
   * or any component.
   */
  children: PropTypes.node // eslint-disable-line react/require-default-props
};

Spinner.defaultProps = {
  wrapperClassNames: '',
  spinning: false,
  fullScreen: false
};

/**
 * A single step of a Steps component.
 *
 * _This component can only be used as a child of `Steps`, and must be accessed as a
 * name-spaced component: `Steps.Step`._
 *
 * @see See [Steps](#steps) for usage.
 */
var Step = function Step(_ref) {
  var label = _ref.label,
      status = _ref.status,
      stepNumber = _ref.stepNumber;

  var cls = classnames('step-tracker__step', {
    'step-tracker__step--completed': status === 'completed',
    'step-tracker__step--processing': status === 'processing',
    'step-tracker__step--waiting': status === 'waiting'
  });
  /* eslint-disable jsx-a11y/aria-props */
  return React.createElement(
    'li',
    {
      className: cls,
      'aria-label': label,
      'aria-current': status === 'processing' ? 'true' : 'false'
    },
    React.createElement('span', { className: 'step-tracker__icon' }),
    React.createElement(
      'span',
      { className: 'step-tracker__label' },
      stepNumber,
      '. ',
      label
    )
  );
  /* eslint-enable jsx-a11y/aria-props */
};

Step.propTypes = {
  /**
   * The label.
   */
  label: PropTypes.string.isRequired,
  /**
   * Each step's status is determined by its parent Steps component.
   *
   * @ignore
   */
  status: PropTypes.oneOf(['waiting', 'processing', 'completed']), // eslint-disable-line react/require-default-props
  /**
   * Each step's status is determined by its parent Steps component.
   *
   * @ignore
   */
  stepNumber: PropTypes.number // eslint-disable-line react/require-default-props
};

/**
 * Show the current position in a sequence of steps.
 */

var Steps = function (_Component) {
  inherits(Steps, _Component);

  function Steps() {
    classCallCheck(this, Steps);
    return possibleConstructorReturn(this, (Steps.__proto__ || Object.getPrototypeOf(Steps)).apply(this, arguments));
  }

  createClass(Steps, [{
    key: 'getStatus',
    value: function getStatus(current, index) {
      if (index < current) {
        return 'completed';
      } else if (index === current) {
        return 'processing';
      }

      return 'waiting';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          current = _props.current;

      var cls = classnames('step-tracker', className);
      var totalSteps = children.length;

      var currentStepLabel = void 0;
      var currentStepNumber = void 0;

      if (current < totalSteps) {
        currentStepLabel = children[current].props.label;
        currentStepNumber = current + 1;
      } else {
        currentStepLabel = children[current - 1].props.label;
        currentStepNumber = current;
      }

      return React.createElement(
        'div',
        { role: 'progressbar' },
        React.createElement(
          'ul',
          { className: cls },
          React.Children.map(children, function (element, index) {
            var stepNumber = index + 1;
            var status = _this2.getStatus(current, index);
            var props = {
              stepNumber: stepNumber,
              status: status
            };
            return React.cloneElement(element, props);
          }, this)
        ),
        React.createElement(
          'div',
          { className: 'step-tracker__mobile-label' },
          React.createElement(
            'span',
            { className: 'step-tracker__mobile-label-step-info' },
            'Step ',
            currentStepNumber,
            ' of ',
            totalSteps,
            ':'
          ),
          ' ',
          currentStepLabel
        )
      );
    }
  }]);
  return Steps;
}(Component);

Steps.propTypes = {
  /**
   * The active step.
   */
  current: PropTypes.number,
  /**
   * The steps. Must be TDS `Steps.Step` components.
   *
   * @see See [Steps.Step](#step)
   */
  children: PropTypes.node, // eslint-disable-line react/require-default-props
  /**
   * One or more CSS class names separated by spaces to append onto the container.
   * Don't advertise as we plan on removing this feature soon.
   *
   * @ignore
   */
  className: PropTypes.string // eslint-disable-line react/require-default-props
};

Steps.defaultProps = {
  current: 0
};

Steps.Step = Step;

/**
  * Give portions of a sentence added importance.
  */
var Strong = function Strong(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ['children']);
  return React.createElement(
    'strong',
    _extends({}, safeRest(rest), { className: styles$4.boldFont }),
    children
  );
};

Strong.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.node.isRequired
};

var styles$31 = { "preventWidthResizing": "TDS_TextArea-modules__preventWidthResizing___3K2zT", "feedbackIconPosition": "TDS_TextArea-modules__feedbackIconPosition___2DMPG TDS_Position-modules__absolute___3xAGg TDS_FormField-modules__iconRight___1AdPe" };

/**
 * <span class="docs--badge__new">new</span> <span class="docs--badge__version">v0.33.0</span>
 */
var TextArea = function TextArea(props) {
  return React.createElement(
    FormField,
    props,
    function (_ref, showFeedbackIcon, feedback) {
      var className = _ref.className,
          textareaProps = objectWithoutProperties(_ref, ['className']);
      return React.createElement(
        'div',
        { className: joinClassNames(positionStyles.relative, styles$31.preventWidthResizing) },
        React.createElement('textarea', _extends({}, textareaProps, {
          className: joinClassNames(className, styles$31.preventWidthResizing),
          style: addRightPadding(showFeedbackIcon ? 1 : 0)
        })),
        !textareaProps.disabled && React.createElement(
          'div',
          { className: styles$31.feedbackIconPosition },
          React.createElement(FeedbackIcon, { showIcon: showFeedbackIcon, feedback: feedback })
        )
      );
    }
  );
};

TextArea.propTypes = {
  /**
   * The label.
   */
  label: PropTypes.string.isRequired,
  /**
   * Clarify the expected input.
   */
  hint: PropTypes.string,
  /**
   * The value.
   */
  value: PropTypes.string,
  /**
   * A feedback state.
   */
  feedback: PropTypes.oneOf(['success', 'error']),
  /**
   * An error message. Either an error or a helper should be used, not both.
   */
  error: PropTypes.string,
  /**
   * A detailed explanation of the input expected by a form field. Can be text,
   * other components, or HTML elements.
   *
   * If a function is provided, it must return an `InputFeedback`. The function will be
   * invoked with the following arguments.
   *
   * @param {String} feedback The input's current feedback state.
   * @param {String} value The input's current value.
   */
  helper: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  /**
   * A `Tooltip`
   */
  tooltip: airbnbPropTypes_1(Tooltip),
  /**
   * A callback function to be invoked when the input value changes.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onChange: PropTypes.func,
  /**
   * A callback function to be invoked when the input receives focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onFocus: PropTypes.func,
  /**
   * A callback function to be invoked when the input loses focus.
   *
   * @param {SyntheticEvent} event The React `SyntheticEvent`
   */
  onBlur: PropTypes.func
};

TextArea.defaultProps = {
  hint: undefined,
  value: '',
  feedback: undefined,
  error: undefined,
  helper: undefined,
  tooltip: undefined,
  onChange: undefined,
  onFocus: undefined,
  onBlur: undefined
};

var styles$32 = { "item": "TDS_UnorderedItem-modules__item___2lEs6", "circle": "TDS_UnorderedItem-modules__circle___3cH7P TDS_UnorderedItem-modules__item___2lEs6", "checkmark": "TDS_UnorderedItem-modules__checkmark___18dqC TDS_UnorderedItem-modules__item___2lEs6", "x": "TDS_UnorderedItem-modules__x___3uI1Q TDS_UnorderedItem-modules__item___2lEs6" };

var UnorderedItem = function UnorderedItem(_ref) {
  var listStyle = _ref.listStyle,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['listStyle', 'children']);
  return React.createElement(
    'li',
    _extends({}, safeRest(rest), { className: styles$32[listStyle] }),
    children
  );
};

UnorderedItem.propTypes = {
  listStyle: PropTypes.oneOf(['circle', 'checkmark', 'x']),
  children: PropTypes.node.isRequired
};

UnorderedItem.defaultProps = {
  listStyle: 'circle'
};

UnorderedItem.displayName = 'UnorderedList.Item';

var styles$33 = { "base": "TDS_List-modules__base___OtWYp" };

var injectListStyle = function injectListStyle(child, listStyle) {
  return React.cloneElement(child, { listStyle: listStyle });
};

var UnorderedList = function UnorderedList(_ref) {
  var listStyle = _ref.listStyle,
      children = _ref.children,
      rest = objectWithoutProperties(_ref, ['listStyle', 'children']);

  return React.createElement(
    Box,
    _extends({}, safeRest(rest), { tag: 'ul', between: 2, dangerouslyAddClassName: styles$33.base }),
    React.Children.map(children, function (child) {
      return injectListStyle(child, listStyle);
    })
  );
};

UnorderedList.propTypes = {
  /**
   * The bullet style.
   */
  listStyle: PropTypes.oneOf(['circle', 'checkmark', 'x']),
  /**
   * The list items. Must be at least one `UnorderedList.Item`.
   */
  children: airbnbPropTypes_1(UnorderedItem).isRequired
};

UnorderedList.defaultProps = {
  listStyle: 'circle'
};

UnorderedList.Item = UnorderedItem;

var styles$34 = { "wave": "TDS_WaveDivider-modules__wave___l9b0t", "noFill": "TDS_WaveDivider-modules__noFill___2EfDg", "opacity3": "TDS_WaveDivider-modules__opacity3___2x-dC", "opacity2": "TDS_WaveDivider-modules__opacity2___3GkQR", "isolate": "TDS_WaveDivider-modules__isolate___2Rm06", "gradient1": "TDS_WaveDivider-modules__gradient1___1Fjgh", "gradient2": "TDS_WaveDivider-modules__gradient2___1zm6S TDS_WaveDivider-modules__isolate___2Rm06", "gradient3": "TDS_WaveDivider-modules__gradient3___1Ea9o", "gradient4": "TDS_WaveDivider-modules__gradient4___2Aw22 TDS_WaveDivider-modules__isolate___2Rm06", "gradient5": "TDS_WaveDivider-modules__gradient5___27HfI", "gradient6": "TDS_WaveDivider-modules__gradient6___1RH5C TDS_WaveDivider-modules__isolate___2Rm06", "gradient7": "TDS_WaveDivider-modules__gradient7___1iwVf", "gradient8": "TDS_WaveDivider-modules__gradient8___3Ft6w", "gradient9": "TDS_WaveDivider-modules__gradient9___1B-s9", "gradient10": "TDS_WaveDivider-modules__gradient10___2Dkbz", "gradient11": "TDS_WaveDivider-modules__gradient11___3f-Gz" };

/**
 * Separate page content blocks.
 */
var WaveDivider = function WaveDivider(_ref) {
  var rest = objectWithoutProperties(_ref, []);
  return React.createElement(
    'svg',
    _extends({}, safeRest(rest), {
      className: styles$34.wave,
      xmlns: 'http://www.w3.org/2000/svg',
      width: '1202',
      height: '226',
      viewBox: '0 0 1202 226'
    }),
    React.createElement(
      'defs',
      null,
      React.createElement(
        'linearGradient',
        {
          id: 'TDS_WaveDivider_gradient-1',
          x1: '600',
          y1: '47.26',
          x2: '600',
          y2: '176.96',
          gradientTransform: 'matrix(1, 0, 0, -1, 0, 227.8)',
          gradientUnits: 'userSpaceOnUse'
        },
        React.createElement('stop', { offset: '0', stopColor: '#fff' }),
        React.createElement('stop', { offset: '1', stopColor: '#d8d8d8' })
      ),
      React.createElement(
        'linearGradient',
        {
          id: 'TDS_WaveDivider_gradient-2',
          x1: '600',
          y1: '224.7',
          x2: '600',
          y2: '70.2',
          gradientTransform: 'matrix(1, 0, 0, -1, 0, 227.8)',
          gradientUnits: 'userSpaceOnUse'
        },
        React.createElement('stop', { offset: '0.19', stopColor: '#fff' }),
        React.createElement('stop', { offset: '1', stopColor: '#d8d8d8' })
      ),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-3',
        x1: '146.95',
        y1: '82.92',
        x2: '146.95',
        y2: '122.08',
        xlinkHref: '#TDS_WaveDivider_gradient-1'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-4',
        x1: '146.95',
        y1: '224.7',
        x2: '146.95',
        y2: '70.2',
        xlinkHref: '#TDS_WaveDivider_gradient-2'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-5',
        x1: '1076.11',
        y1: '102.31',
        x2: '1076.11',
        y2: '163.51',
        xlinkHref: '#TDS_WaveDivider_gradient-1'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-6',
        x1: '1128.83',
        y1: '213.27',
        x2: '1061.33',
        y2: '87.28',
        xlinkHref: '#TDS_WaveDivider_gradient-2'
      }),
      React.createElement(
        'linearGradient',
        {
          id: 'TDS_WaveDivider_gradient-7',
          x1: '28.8',
          y1: '115',
          x2: '170.73',
          y2: '115',
          gradientTransform: 'matrix(1, 0, 0, -1, 0, 228)',
          gradientUnits: 'userSpaceOnUse'
        },
        React.createElement('stop', { offset: '0', stopColor: '#fff' }),
        React.createElement('stop', { offset: '1', stopColor: '#fff', stopOpacity: '0' })
      ),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-8',
        x1: '1185.42',
        y1: '113.95',
        x2: '1041.42',
        y2: '115.95',
        xlinkHref: '#TDS_WaveDivider_gradient-7'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-9',
        x1: '601',
        y1: '-2',
        x2: '601',
        y2: '52.08',
        xlinkHref: '#TDS_WaveDivider_gradient-7'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-10',
        x1: '600.78',
        y1: '222.98',
        x2: '600.78',
        y2: '160.94',
        gradientTransform: 'matrix(1, 0, 0, 1, 0, 0)',
        xlinkHref: '#TDS_WaveDivider_gradient-7'
      }),
      React.createElement('linearGradient', {
        id: 'TDS_WaveDivider_gradient-11',
        x1: '601.22',
        y1: '64.89',
        x2: '601.22',
        y2: '2.85',
        gradientTransform: 'translate(0.01 -0.21) rotate(0.02)',
        xlinkHref: '#TDS_WaveDivider_gradient-7'
      })
    ),
    React.createElement(
      'g',
      null,
      React.createElement(
        'g',
        null,
        React.createElement('path', {
          className: styles$34.noFill,
          d: 'M293.89 144.8c24.26 1.32 47.12 2.06 67.8 2.06 193 0 395.64-56 590.52-67C886.68 66.05 821.57 56.1 769.84 56.1 614.41 56.1 452.32 117.3 293.89 144.8Z'
        }),
        React.createElement(
          'g',
          { className: styles$34.opacity3 },
          React.createElement('path', {
            className: styles$34.gradient1,
            d: 'M1200 146c-57.54-18-153.12-46.11-247.79-66.1-194.87 11.06-397.57 67-590.52 67-20.69 0-43.55-.74-67.8-2.06-46 8-91.66 13.16-136.77 13.16-42.2 0-100.58-6.26-157.12-14.1V224H1200Z'
          }),
          React.createElement(
            'g',
            { className: styles$34.opacity2 },
            React.createElement('path', { d: 'M1200 146c-57.54-18-153.12-46.11-247.79-66.1-194.87 11.06-397.57 67-590.52 67-20.69 0-43.55-.74-67.8-2.06-46 8-91.66 13.16-136.77 13.16-42.2 0-100.58-6.26-157.12-14.1V224H1200Z' })
          )
        ),
        React.createElement('path', {
          className: styles$34.gradient2,
          d: 'M769.84 56.1c51.74 0 116.84 10 182.38 23.79C973.58 78.68 994.85 78 1016 78c49.13 0 118.77 11.47 184 25.06V0H0V114.49c90.58 12.22 202.25 25.38 293.89 30.31C452.32 117.3 614.41 56.1 769.84 56.1Z'
        }),
        React.createElement(
          'g',
          { className: styles$34.opacity3 },
          React.createElement('path', {
            className: styles$34.gradient3,
            d: 'M293.89 144.8C202.25 139.8 90.58 126.67 0 114.45V143.9C56.54 151.74 114.92 158 157.12 158 202.23 158 247.91 152.8 293.89 144.8Z'
          }),
          React.createElement(
            'g',
            { className: styles$34.opacity2 },
            React.createElement('path', { d: 'M293.89 144.8C202.25 139.8 90.58 126.67 0 114.45V143.9C56.54 151.74 114.92 158 157.12 158 202.23 158 247.91 152.8 293.89 144.8Z' })
          )
        ),
        React.createElement('path', {
          className: styles$34.gradient4,
          d: 'M293.89 144.8C202.25 139.8 90.58 126.67 0 114.45V143.9C56.54 151.74 114.92 158 157.12 158 202.23 158 247.91 152.8 293.89 144.8Z'
        }),
        React.createElement(
          'g',
          { className: styles$34.opacity3 },
          React.createElement('path', {
            className: styles$34.gradient5,
            d: 'M952.21 79.89c94.67 20 190.24 48.11 247.79 66.1V103.05C1134.77 89.47 1065.13 78 1016 78 994.85 78 973.58 78.68 952.21 79.89Z'
          }),
          React.createElement(
            'g',
            { className: styles$34.opacity2 },
            React.createElement('path', { d: 'M952.21 79.89c94.67 20 190.24 48.11 247.79 66.1V103.05C1134.77 89.47 1065.13 78 1016 78 994.85 78 973.58 78.68 952.21 79.89Z' })
          )
        ),
        React.createElement('path', {
          className: styles$34.gradient6,
          d: 'M952.21 79.89c94.67 20 190.24 48.11 247.79 66.1V103.05C1134.77 89.47 1065.13 78 1016 78 994.85 78 973.58 78.68 952.21 79.89Z'
        }),
        React.createElement('rect', { className: styles$34.gradient7, width: '180', height: '226' }),
        React.createElement('rect', { className: styles$34.gradient8, x: '1020', width: '180', height: '226' }),
        React.createElement('rect', { className: styles$34.gradient9, y: '154', width: '1202', height: '72' })
      )
    ),
    React.createElement(
      'g',
      null,
      React.createElement('rect', { className: styles$34.gradient10, y: '158.3', width: '1201.56', height: '67.5' }),
      React.createElement('rect', {
        className: styles$34.gradient11,
        x: '0.44',
        y: '0.21',
        width: '1201.56',
        height: '67.5',
        transform: 'translate(1202.45 67.7) rotate(179.98)'
      })
    )
  );
};

export { Accordion, Box, Button, ButtonLink, Card, Checkbox, ChevronLink, DecorativeIcon, DimpleDivider, DisplayHeading, ExpandCollapse, FlexGrid, HairlineDivider, Heading, Image, Input, InputFeedback, Link, Notification, OrderedList, Paragraph, Radio, Responsive, Select, SelectorCounter, Small, Spinner, StandaloneIcon, Steps, Strong, Text, TextArea, Tooltip, UnorderedList, WaveDivider };
//# sourceMappingURL=tds.es.js.map
